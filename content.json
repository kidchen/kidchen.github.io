{"pages":[{"title":"Tags","text":"","link":"/tags/"},{"title":"","text":"Notfound.org","link":"/404"},{"title":"Categories","text":"","link":"/categories/"},{"title":"About","text":"I am Chen, a Chinese living in the United States. Music lover. I am trying to learn Korean just because I really want to understand the meanings of Epik High’s lyrics. I’m also trying to learn how to play guitar. It’s just cool! Sometimes hiking, sometimes sleeping… But for the most of my time, I’m working on search related technologies such as indexing (ElasticSearch) and query processing (NLP). So yes, I am a software engineer, back-end. Want to know more about me? Check: 微博 | GitHub | LinkedIn | Instagram | Facebook or send me an Email. I always like meeting new friends. About this site..This static website is powered by Hexo. The theme is redesigned based on Minos.When you meet 404 Error (Not Found Error), it redirects to NotFound Project to help finding missing children.","link":"/about/"}],"posts":[{"title":"Interview Note - Binary Search & Sorted Array","text":"Binary SearchFor a given sorted array (ascending order) and a target number, find the first index of this number in O(log n) time complexity.If the target number does not exist in the array, return -1.Example:If the array is [1, 2, 3, 3, 4, 5, 10], for given target 3, return 2. 1234567891011121314151617181920class Solution { public int binarySearch(int[] nums, int target) { if(nums == null || nums.length == 0) { return -1; } int start = 0; int end = nums.length - 1; while(start &lt; end) { int mid = start + (end - start) / 2; if(nums[mid] &gt;= target) { end = mid; } else { start = mid + 1; } } return nums[start] == target ? start : -1; }} Key Points: while(start &lt; end): when start and end are overlapped each other, break. At this moment, we can return start or end. But it is different when we need to return the index before or after the target(see point 3). int mid = start + (end - start) / 2: in order to avoid overflow of start + end, we need to do a little trick here. while loop: in the while loop, there are two different needs: return the index of the target: as the example above. return the one before(example below)/after the target:Search Insert Position12345678910while(start &lt;= end) { int mid = start + (end - start) / 2; if(A[mid] == target) { return mid; } else if(A[mid] &lt; target) { start = mid + 1; } else { end = mid - 1; }} Here, we need to use while(start &lt;= end) so that when we break the loop, two pointers are at two different(but neighbored) positions. Besides, if we want to return the one before the index, we return start, otherwise we return end. Example: Search in rotated sorted array:In line 15, we can’t use A[mid] &lt; A[right], eg: [3,1,1], 3. 1234567891011121314151617181920212223242526while(left &lt;= right) { int mid = left + (right - left) / 2; if(A[mid] == target) { return true; } // left part is sorted if(A[mid] &gt; A[left]) { // target is in the left if(A[mid] &gt; target &amp;&amp; A[left] &lt;= target) { right = mid - 1; } else { left = mid + 1; } // right part is sorted } else if(A[mid] &lt; A[left]) { // target is in the right if(A[mid] &lt; target &amp;&amp; A[right] &gt;= target) { left = mid + 1; } else { right = mid - 1; } } else { // mid == left or mid == right left++; }} Similar Problems:Search for a Range:When finding left position, if mid == target, move end so that when break the loop, start will be like: [end, start(left-most one)]).Similarly, when finding right position, if mid == target, move start, so that end will be like: [end(right-most one), start] when break.Search in rotated sorted array II: worst case will cost O(n) timeFind minimum in rotated sorted arrayFind minimum in rotated sorted array IISearch a 2D matrixSearch a 2D matrix II: from top-right to bottom-left, so that left element is always smaller.Find a peak: 12345if(A[mid] &lt; A[mid + 1]) { start = mid + 1;} else { end = mid;} Sorted ArrayUsing Swap:Given a rotated sorted array, recover it to sorted array in-place. Reverse the left part of the pivot Reverse the right part of the pivot Reverse the whole arrayeg.[4, 5, 1, 2, 3] -&gt; [5, 4, 1, 2, 3] -&gt; [5, 4, 3, 2, 1] -&gt; [1, 2, 3, 4, 5] Similar Problems:Rotate StringReverse words in a string Find Top k:Median of two sorted arrays:General top-k problem. In this code, k is not the index, but the kth top number. So when we use k in an array, we need to -1. 1234567891011121314151617181920212223242526272829303132333435public class Solution { public double findMedianSortedArrays(int A[], int B[]) { // check odd/even int len = A.length + B.length; if((A.length + B.length) % 2 == 1) { return helper(A, B, 0, 0, len / 2 + 1); } else { return (helper(A, B, 0, 0, len / 2) + helper(A, B, 0, 0, len / 2 + 1) ) / 2.0; } } private int helper(int[] A, int[] B, int astart, int bstart, int k) { // if not in A/B (need to add =, since if A is empty..) if(astart &gt;= A.length) { return B[bstart + k - 1]; } if(bstart &gt;= B.length) { return A[astart + k - 1]; } if(k == 1) { // !!! index should be astart/bstart rather than 0 !!! return Math.min(A[astart], B[bstart]); } // find kth top: int ak = astart + k/2 - 1 &lt; A.length ? A[astart + k/2 - 1] : Integer.MAX_VALUE; int bk = bstart + k/2 - 1 &lt; B.length ? B[bstart + k/2 - 1] : Integer.MAX_VALUE; // !!! k-k/2, eg: k=3, odd number !!! if(ak &lt; bk) { // no need to -1, because we don't put it into arrays right now return helper(A, B, astart + k/2, bstart, k - k/2); } else { return helper(A, B, astart, bstart + k/2, k - k/2); } }} Similar Problems:Remove dulplicates from sorted arrayRemove dulplicates from sorted array IIMerge sorted arrayMerge sorted array II","link":"/2015/01/22/InterviewNote2Search/"},{"title":"Interview Note - Binary Tree","text":"1. Binary Tree DFS Traversal1.1 RecursionThis method will cost O(n) time with no extra space. The space is assigned by system(which could be O(1) or O(h), h is the height of the tree). 1234567891011121314public ArrayList&lt;Integer&gt; preorderTraversal(TreeNode root) { ArrayList&lt;Integer&gt; result = new ArrayList&lt;Integer&gt;(); helper(root, result); return result;}private void helper(TreeNode root, ArrayList&lt;Integer&gt; result) { if(root == null) { return; } result.add(root.val); helper(root.left, result); helper(root.right, result);} 1.2 IterationUse a stack to store the nodes. Pay attention to the order of storing. We store the right subtree node before the left one, so that we can get the preorder nodes when pop from the stack.This method will cost O(n) time with O(h) extra space for the stack. 123456789101112131415161718192021222324 */public class Solution { public ArrayList&lt;Integer&gt; preorderTraversal(TreeNode root) { ArrayList&lt;Integer&gt; result = new ArrayList&lt;Integer&gt;(); if(root == null) { return result; } Stack&lt;TreeNode&gt; stack = new Stack&lt;TreeNode&gt;(); stack.push(root); while(!stack.isEmpty()) { TreeNode cur = stack.pop(); result.add(cur.val); if(cur.right != null) { stack.push(cur.right); } if(cur.left != null) { stack.push(cur.left); } } return result; }} 1.3 Divide &amp; ConquerThe different between this method and the recursion one is the return type: this method returns an arraylist, but the recursion method doesn’t return anything. This method will cost O(n) time with O(n) space. 12345678910111213141516171819public class Solution { public ArrayList&lt;Integer&gt; preorderTraversal(TreeNode root) { ArrayList&lt;Integer&gt; result = new ArrayList&lt;Integer&gt;(); if(root == null) { return result; } // divide ArrayList&lt;Integer&gt; leftSubtree = preorderTraversal(root.left); ArrayList&lt;Integer&gt; rightSubtree = preorderTraversal(root.right); // conquer result.add(root.val); result.addAll(leftSubtree); result.addAll(rightSubtree); return result; }} Divide &amp; Conquer method is useful in sorting algorithm. 1.3.1 Quick SortThis is the most useful sorting algorithm in industry. Its average time complexity is O(nlogn), but in worst case, it could be O(n^2) when the pivot we found is not ideal. This algorithm is in-place(no extra space needs) but not stable(stable: if after sorting [2,2’,1,1’], we get[1,1’,2,2’], we call it stable, otherwise it is not stable).Related Problems:Partition ArraySort Color IIMedian 1.3.2 Merge SortThis algorithm costs O(nlogn) time and O(n) space. Although it is a stable algorithm, the space costs and the “move”(move the sorted result from temp space to the original position) step make it not that useful like quick sort.Related Problems:Merge sorted array IIMerge k sorted lists Similar Problems:Maximum Depth of the Binary TreeBalanced Binary TreeBinary Tree Maximum Path SumLowest Common AncestorSerialization and Deserialization of Binary Tree 2. Binary Tree BFS TraversalUse a queue to store current degree(depth) of the nodes and traverse all the degree.Example:Binary Tree Level Order Traversal: 123456789101112131415161718192021222324252627282930313233343536public class Solution { public ArrayList&lt;ArrayList&lt;Integer&gt;&gt; levelOrder(TreeNode root) { ArrayList&lt;ArrayList&lt;Integer&gt;&gt; result = new ArrayList&lt;ArrayList&lt;Integer&gt;&gt;(); if(root == null) { return result; } LinkedList&lt;TreeNode&gt; queue = new LinkedList&lt;TreeNode&gt;(); ArrayList&lt;Integer&gt; level = new ArrayList&lt;Integer&gt;(); queue.add(root); int lastNum = 1; int curNum = 0; while(!queue.isEmpty()) { TreeNode cur = queue.poll(); level.add(cur.val); lastNum--; if(cur.left != null) { queue.add(cur.left); curNum++; } if(cur.right != null) { queue.add(cur.right); curNum++; } if(lastNum == 0) { lastNum = curNum; curNum = 0; result.add(level); level = new ArrayList&lt;Integer&gt;(); } } return result; }} 3. Binary Search TreeRemove Node in a BST: Find the node we need to remove Find the minimum node in the right subtree (or the maximum node in the left subtree) Replace the node with the minimum node in the right subtree (or the maximum node in the left subtree)Replace:If node.right == null: replace the node with its left child(parent.child = node.left)Else if node has right child: replace the node with the smallest one that in its right subtree. To do that, we keep two nodes(temp and father), tracking to find the smallest node and replace it. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566public class Solution { public TreeNode removeNode(TreeNode root, int value) { if(root == null) { return null; } TreeNode dummy = new TreeNode(0); dummy.left = root; TreeNode parent = find(root, value, dummy); TreeNode node; if(parent.left != null &amp;&amp; parent.left.val == value) { node = parent.left; } else if(parent.right != null &amp;&amp; parent.right.val == value) { node = parent.right; } else { return dummy.left; } remove(node, parent); return dummy.left; } private TreeNode find(TreeNode root, int value, TreeNode parent) { if(root == null) { return parent; } if(root.val == value) { return parent; } else if(root.val &lt; value) { return find(root.right, value, root); } else { return find(root.left, value, root); } } private void remove(TreeNode node, TreeNode parent) { if(node.right == null) { if(parent.left == node) { parent.left = node.left; } else { parent.right = node.left; } } else { TreeNode temp = node.right; TreeNode father = node; while(temp.left != null) { father = temp; temp = temp.left; } if(father.right == temp) { father.right = temp.right; } else { father.left = temp.right; } if(parent.left == node) { parent.left = temp; } else { parent.right = temp; } temp.left = node.left; temp.right = node.right; } }} Similar Problems:Insert Node in a BSTValidate BSTSearch Range in BSTImplement Iterator of BST","link":"/2015/01/23/InterviewNote3Tree/"},{"title":"Interview Note - Dynanmic Programming","text":"1. Dynamic ProgrammingA method for solving a complex problem by breaking it down into a collection of simpler sub-problems. 1.1 When to use One of the following three: Maximum/Minimum Problem Yes or No Question Count all possible solutions Can’t do sort or swap operation Note: DP can’t return all results, it only returns max/min, yes/no or a certain value(like length, possible solutions, etc.). 1.2 How to think States: what we need to store for each sub-problem (usually an array). Function: what is the relationship between each state. Intialization: what is the start of each state. Answer: what is the end of each state. Example: Number TriangleWe use an array f[i][j] to record the minimum sum from (0, 0) to (i, j). For a certain (i, j), we know it is either from (i - 1, j - 1) or (i - 1, j). So the sub-problem is to traverse all elements in the triangle and calculate all the f[i][j] = min(f[i - 1][j - 1], f[i - 1][j]) + T[i]][j]. The result will be the minimum one in f[n - 1][0, ..., n - 1].We can also do it from bottom up. First we find the minimum of each pair in the last row, then we do above similarly but from bottom up. Finally the only one element left in the array is the result we are looking for.A bonus point is doing this using only O(n) extra space, where n is the total number of rows in the triangle. Since each time we calculate f[i][j], the result is only related with f[i - 1][], we can only use 1D array and update the elements in it in each for loop.Here is the code from bottom up with O(n) space cost. 1234567891011121314151617public class Solution { public int minimumTotal(List&lt;List&lt;Integer&gt;&gt; triangle) { if(triangle.size() == 0) { return 0; } int[] result = new int[triangle.size() + 1]; for(int row = triangle.size() - 1; row &gt;= 0; row--) { for(int col = 0; col &lt;= row; col++) { result[col] = Math.min(result[col], result[col + 1]) + triangle.get(row).get(col); } } return result[0]; }} Dynamic Programming uses extra space to remember the mid-result. So that it is more efficient than recursive searching, which may repeated calculate the same mid-result for many times. In the above example, if we do a brute force search, it cost O(2^n) time, where n is the height of the triangle (each row, we need to choose one from two, totally n rows). But it only costs O(n^2) in theoretical(m rows, each row has n elements, totally n^2) or O(n), which means all numbers we only need to visit once. 2. Category2.1 MatrixStraightforward problems with usually 2D matrix. Using the first column and first row can reduce the space costs.Unique PathUnique Path IIMinimum Path Sum 2.2 SequenceLongest Increasing SubsequenceDP solution: O(n^2) time with O(n) space cost.The state array result[i] means when we make the ith element as the end of the subsequence, the maximum length of this sequence. The relationship is like result[i] = max(result[i], result[j] + 1), where result[j] + 1 happens when we found an increasing pair(the max length until j, and adding one to include j, which is an increasing element).A very good explaination can be found here. 123456789101112131415161718192021222324public class Solution { public int longestIncreasingSubsequence(int[] nums) { if(nums == null || nums.length == 0) { return 0; } int[] result = new int[nums.length]; result[0] = 1; for(int i = 1; i &lt; nums.length; i++) { result[i] = 1; for(int j = 0; j &lt; i; j++) { if(nums[j] &lt;= nums[i]) { result[i] = Math.max(result[i], result[j] + 1); } } } int length = 1; for(int res : result) { length = Math.max(length, res); } return length; }} Similar Problems:Clambing stairsJump GameJump Game IIPalindrome Partition IIWord Segmentation 2.3 Two sequencesLongest Common SubsequenceDP: O(m * n) time, O(m * n) space.The state result[i][j] means for the subsequence ended at i in string A and the subsequence ended at j in string B, the maximum length of the common subsequence. The equation is in two situations: if two characters are the same, update the state to result[i - 1][j - 1] + 1, otherwise do a comparison with result[i][j - 1] and result[i - 1][j], which means we continue finding the same character, but so far the longest one is either in A(i,j-1) or B(i-1,j).Thinking of adding the last element to the array when writing the equation may be helpful.Additionally, we can reduce this solution to O(2n) space. Here we have to use two arrays to store the last row and the current one. If we only use one array, when we face matches more than once in a row, the result will be wrong, eg: [bdacde] &amp; [dceab], (find d) the first row should be [0011111], but if we use only one array, it will be [0011122]. 1234567891011121314151617181920public class Solution { public int longestCommonSubsequence(String A, String B) { if(A.length() == 0 || B.length() == 0) { return 0; } int[][] result = new int[A.length() + 1][B.length() + 1]; for(int i = 1; i &lt;= A.length(); i++) { for(int j = 1; j &lt;= B.length(); j++) { if(A.charAt(i - 1) == B.charAt(j - 1)) { result[i][j] = result[i - 1][j - 1] + 1; } else { result[i][j] = Math.max(result[i][j - 1], result[i - 1][j]); } } } return result[A.length()][B.length()]; }} Similar Problems:Edit DistanceDistinct SubsequenceInterleaving StringRegular Expression MatchingWildcard Matching 2.4 Backpack ProblemBackpackDP: O(m * n) time, O(m) space.The state result[i] means we select items so that their weight sum equals to i, the closest sum is result[i]. 1234567891011121314151617181920212223public class Solution { public int backPack(int m, int[] A) { if(m == 0 || A == null || A.length == 0) { return 0; } // set an array that one size bigger than target int[] result = new int[m + 1]; // outer: select an item for(int i = 0; i &lt; A.length; i++) { int size = A[i]; // inner: decide whether put it into the bag or not // from last to the one smaller or equals to target for(int j = m; j &gt;= size; j--) { // max(not put in, put in) // put in: previous [j-size] items and current one(size) result[j] = Math.max(result[j], result[j - size] + size); } } return result[m]; }} Similar Problems:Backpack IIMinimum Adjustment Cost","link":"/2015/01/25/InterviewNote5DP/"},{"title":"Interview Note - Graph & Search","text":"Clone Graph 1234567891011121314151617181920212223242526272829303132333435/** * Definition for undirected graph. * class UndirectedGraphNode { * int label; * ArrayList&lt;UndirectedGraphNode&gt; neighbors; * UndirectedGraphNode(int x) { label = x; neighbors = new ArrayList&lt;UndirectedGraphNode&gt;(); } * }; */public class Solution { public UndirectedGraphNode cloneGraph(UndirectedGraphNode node) { if(node == null) { return null; } LinkedList&lt;UndirectedGraphNode&gt; queue = new LinkedList&lt;UndirectedGraphNode&gt;(); HashMap&lt;UndirectedGraphNode, UndirectedGraphNode&gt; map = new HashMap&lt;UndirectedGraphNode, UndirectedGraphNode&gt;(); queue.offer(node); map.put(node, new UndirectedGraphNode(node.label)); while(!queue.isEmpty()) { UndirectedGraphNode cur = queue.poll(); for(int i = 0; i &lt; cur.neighbors.size(); i++) { // !!! if node not in map, add a new node into the map !!! if(!map.containsKey(cur.neighbors.get(i))) { map.put(cur.neighbors.get(i), new UndirectedGraphNode(cur.neighbors.get(i).label)); queue.offer(cur.neighbors.get(i)); } // now we are sure that the node is existed, add the neighbors to the value map.get(cur).neighbors.add(map.get(cur.neighbors.get(i))); } } return map.get(node); }} Topological SortingDFS: O(n) time with O(n) space for the map and the result. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465/** * Definition for Directed graph. * class DirectedGraphNode { * int label; * ArrayList&lt;DirectedGraphNode&gt; neighbors; * DirectedGraphNode(int x) { label = x; neighbors = new ArrayList&lt;DirectedGraphNode&gt;(); } * }; */public class Solution { /** * @param graph: A list of Directed graph node * @return: Any topological order for the given graph. */ public ArrayList&lt;DirectedGraphNode&gt; topSort(ArrayList&lt;DirectedGraphNode&gt; graph) { ArrayList&lt;DirectedGraphNode&gt; result = new ArrayList&lt;DirectedGraphNode&gt;(); if(graph == null || graph.size() == 0) { return result; } // construct map with all nodes HashMap&lt;DirectedGraphNode, Integer&gt; map = new HashMap&lt;DirectedGraphNode, Integer&gt;(); for(DirectedGraphNode node: graph) { // mark 0 as unsorted map.put(node, 0); } // find a new unsorted node to start sorting (if possible): while (hasUnsorted(map, graph)) { DirectedGraphNode node = null; for (DirectedGraphNode temp : graph) { if (map.get(temp) == 0) { node = temp; } } // get the node and do sort(search): sort(map, graph, result, node); } return result; } // check if there is any node that not yet been sorted public boolean hasUnsorted(Map&lt;DirectedGraphNode, Integer&gt; map, ArrayList&lt;DirectedGraphNode&gt; graph){ for (DirectedGraphNode node : graph) { if (map.get(node) == 0) { return true; } } return false; } // search and sort the graph public void sort(Map&lt;DirectedGraphNode, Integer&gt; map, ArrayList&lt;DirectedGraphNode&gt; graph, ArrayList&lt;DirectedGraphNode&gt; result, DirectedGraphNode node){ if (map.get(node) != 0) { // if 1: System.out.println(\"It is not a DAG\"); // if 2: sorted return; } // mark 1 as visited(not yet been sorted), do with its neighbors: map.put(node, 1); for (DirectedGraphNode next : node.neighbors) { sort(map, graph, result, next); } // mark 2 as sorted // map.put(node, 2); result.add(0, node); }} Similar Problems:PermutationsSubsetsSubsets IIN-QueensPalindrome PartitionCombination SumCombination Sum IIWord LadderWord Ladder II A real interview problem, Six Degree of Kevin Bacon:DFS:Create a stack and initialize it with the start node.While the stack is not empty Pop out the top of the stack as the current node If there is a node linked with it, do recursion and put the node into the stack If the node is the target node, pop out all the elements from the stack and return Otherwise, return to the upper level and do the recursion againReturn null if the recursion terminated without finding the target Tradeoff:If the depth is large, the recursion will cost a lot of time. But the improvement of this method is returning to the upper level if the degree is bigger than 6 since the goal we searching is to find a path that no more than 6 steps. BFS:Create a queue and initialize it with the start node.While the queue is not empty Remove the first node(a) from the queue For each node(b) adjacent to the current node(a) If the node(b) is unvisited Put the node&lt;b, a&gt; to the hashmap If it is the target node, do the backtrack and return the arraylist Otherwise, add the adjacent node(b) to the end of the queueReturn null if the loop terminated without finding the target Tradeoff:Better to find shortest path than DFS. But if there are too many nodes in each level, it will cost a lot of time. Implementation of the BFS method:The return type is ArrayList&lt;Actor&gt;, which is the path from actor_1 to actor_2. The degree of the separation is the length of the path. We can also calculate the degree during the path finding process. I use STDIO to output the degree when each level of the graph traversal ends. Data structures:Define an Actor class. When we call its movies, it returns all the movies the actor enrolled in. All the movies stored in a hash set. 123456public class Actor { HashSet&lt;Movie&gt; movies; Actor(HashSet&lt;Movie&gt; m) { movies = m; }} Similarly, define a movie class. When we call its actors, it returns all the actors appear in this movie. All the actors stored in a hash set. 123456public class Movie { HashSet&lt;Actor&gt; actors; Movie(HashSet&lt;Actor&gt; a) { actors = a; }} We use a queue to perform the BFS. It stores all the unvisited nodes in each level of the graph. A hash map, visitedActors&lt;actor1, actor2&gt;, to store each pair of actors who appear in the same movie. Another hash map, visitedMovies&lt;movie, boolean&gt;, to store all the movies we have visited and iterated. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354public ArrayList&lt;Actor&gt; calculateDegree(Actor actor_1, Actor actor_2) { // input validation check ArrayList&lt;Actor&gt; result = new ArrayList&lt;Actor&gt;(); if(actor_1 == null || actor_2 == null) { return result; } // initialize LinkedList&lt;Actor&gt; queue = new LinkedList&lt;Actor&gt;(); queue.add(actor_1); HashMap&lt;Actor, Actor&gt; visitedActors = new HashMap&lt;Actor, Actor&gt;(); HashMap&lt;Movie, Boolean&gt; visitedMovies = new HashMap&lt;Movie, Boolean&gt;(); visitedActors.put(actor_1, null); int degree = 0; while (!queue.isEmpty()) { Actor cur_actor = queue.poll(); // for all the movies the cur_actor enrolled: for (Movie m : cur_actor.movies) { if (visitedMovies.containsKey(m)) { continue; } // if this movie we didn't visited visitedMovies.put(m, true); // for all the actors in this movie: for (Actor a : m.actors) { if (visitedActors.containsKey(a)) { continue; } // if this actor we didn't visited visitedActors.put(a, cur_actor); // when we find the actor_2 if (a == actor_2) { // back track the path from actor_2 to actor_1: while (a != null) { result.add(a); a = visitedActors.get(a); } Collections.reverse(result); return result; } else { queue.add(a); } } } // after each level of the graph, add one degree degree++; System.out.println(degree); } return null;}","link":"/2015/01/29/InterviewNote6Graph/"},{"title":"Interview Note - Data Structure","text":"Data Structure is a way to organize data. It provides some methods to handle data stream, e.g. insert, delete, etc. Linear Data StructureQueue &amp; StackMin StackUse two stacks, one is storing the input, when calling pop() or peek(), pop from another stack, which stores the minimum values from top to bottom. 123456789101112131415161718192021222324252627282930313233343536class MinStack { ArrayList&lt;Integer&gt; stack = new ArrayList&lt;Integer&gt;(); ArrayList&lt;Integer&gt; minStack = new ArrayList&lt;Integer&gt;(); public void push(int x) { stack.add(x); if(minStack.isEmpty() || minStack.get(minStack.size() - 1) &gt;= x) { minStack.add(x); } return; } public void pop() { if(stack.isEmpty()) { return; } int elem = stack.remove(stack.size() - 1); if(!minStack.isEmpty() &amp;&amp; minStack.get(minStack.size() - 1) == elem) { minStack.remove(minStack.size() - 1); } return; } public int top() { if(!stack.isEmpty()) { return stack.get(stack.size() - 1); } return 0; } public int getMin() { if(!minStack.isEmpty()) { return minStack.get(minStack.size() - 1); } return 0; }} Implement Queue by stacksUse two stacks, one is for storing elements. When calling pop() or top(), pop the elements from the first stack and push them into the second one. 1234567891011121314151617181920212223242526272829303132public class Solution { private Stack&lt;Integer&gt; stack1; private Stack&lt;Integer&gt; stack2; public Solution() { // do initialization stack1 = new Stack&lt;Integer&gt;(); stack2 = new Stack&lt;Integer&gt;(); } public void push(int element) { stack1.push(element); } public int pop() { if(stack2.isEmpty()) { while(!stack1.isEmpty()) { stack2.push(stack1.pop()); } } return stack2.pop(); } public int top() { if(stack2.isEmpty()) { while(!stack1.isEmpty()) { stack2.push(stack1.pop()); } } return stack2.peek(); }} Largest Rectangle in HistogramBrute force: totally O(n^2) windows and O(n) to find the minimun one in each window, so we need O(n^3) time.Improve: for each number, search both side of it until find two smaller number, calculate the result, O(n^2) cost.Best: use a stack to store the index (all increased heights), when faced with a smaller one, pop out from tha stack and calculate the area until the value bigger than the peek() one. This method cost O(n) time, with O(n) space in worst case (two passes). 1234567891011121314151617181920212223242526public class Solution { public int largestRectangleArea(int[] height) { if(height == null || height.length == 0) { return 0; } LinkedList&lt;Integer&gt; stack = new LinkedList&lt;Integer&gt;(); int max = 0; for(int i = 0; i &lt; height.length; i++) { while(!stack.isEmpty() &amp;&amp; height[i] &lt;= height[stack.peek()]) { int index = stack.pop(); // !!! i-stack.peek()-1, rather than i-index: [1,2,2] the last one to calculate the area // WHEN stack[0,2], not consecutive, we need to calculate from stack.peek() + 1 ~ i !!! max = Math.max(max, stack.isEmpty() ? i * height[index] : (i - stack.peek() - 1) * height[index]); } stack.push(i); } // Note: another solution is use another int[] which add a 0 at the end of the height[] and do a while // for this solution, we just do another while when stack is not empty after the for loop while(!stack.isEmpty()) { int index = stack.pop(); // i --&gt; height.length, imagine we add a 0 at the end of height[] max = Math.max(max, stack.isEmpty() ? height.length * height[index] : (height.length - stack.peek() - 1) * height[index]); } return max; }} expanded: Maximal Rectangle Max TreeMethod 1: Divide &amp; Conquer - O(n^2)Method 2: Use stack to build the tree from bottom to top - O(n) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950/** * Definition of TreeNode: * public class TreeNode { * public int val; * public TreeNode left, right; * public TreeNode(int val) { * this.val = val; * this.left = this.right = null; * } * } */public class Solution { public TreeNode maxTree(int[] A) { if(A == null || A.length == 0) { return null; } LinkedList&lt;TreeNode&gt; stack = new LinkedList&lt;TreeNode&gt;(); for(int i : A) { TreeNode cur = new TreeNode(i); if(!stack.isEmpty()) { TreeNode top = stack.peek(); // compare with the current node value and the one on the top of the stack, // back track to find the one that smaller than the current one in the stack. while(!stack.isEmpty() &amp;&amp; stack.peek().val &lt; cur.val) { top = stack.pop(); } if(stack.isEmpty()) { cur.left = top; } else { // 6 - 0 - 3 - 1 /* 6 6 - 3 6 - 3 / \\ / / / / \\ 0 0 0 1 / / / / null null null null */ cur.left = stack.peek().right; stack.peek().right = cur; } } stack.push(cur); } while(stack.size() &gt; 1) { stack.pop(); } return stack.pop(); }} HashHow to get Hash Value? Easily use MD5 to convert string into integers, and then mod by the size of the hash table. Use magic number 33(APR):12345678int hashFunction(String key) { int sum = 0; for(int i = 0; i &lt; key.length(); i++) { sum = sum * 33 + (int)(key.charAt(i)); sum = sum % Hash_Table_Size; } return sum;} How to deal with collision? Open hashing: use linkedlist(cost extra space) Closed hashing: use existed data(cost extra time, worst case O(n))To get the best performance of Hash Table, we usually insert elements no more than 10% of the hash table’s capacity. When the elements beyond 10%, we will do rehash to expand the capacity(double). Hash in Java! Hashtable: thread safeHashSet and HashMap: not thread safe Related Problems:LRU cache[Longest Consecutive Subsequence] Tree Data StructureHeapIn Java, it is PriorityQueue. Basically, a heap is a binary tree. If it is a minimum heap, a node has a smaller value comparing to its children. Median Number IIBuilding Outline(Swiping Line Algorithm):Separate (x1, x2, height) to (x1, height, BUILDING_START), (x2, height, BUILDING_END). Sort all items by x’s ascending order. Swipe the items from left to right, keep a max heap store heights, when meet a BUILDING_START item, insert the height into the heap, when meet a BUILDING_END item, delete the height in the heap. The max height in the heap is height in outline with current x you meet. TrieFrom Retrieve. A kind of dictionary tree, which has 26 children for each node. Here is an implementation of trie tree. A typical problem solving by trie tree is Word Search II, which can be solved by BFS or trie.","link":"/2015/02/01/InterviewNote7DataStructure/"},{"title":"Interview Note - Examples","text":"Single NumberXOR features:a ^ b = ca ^ c = bb ^ c = aa ^ 0 = aa ^ a = 0(a ^ b) ^ c = a ^ (b ^ c) I: all the numbers appear twice except oneXOR all the numbers, and the result is the one II: all the numbers appear three times except oneUse a int[32] to store each bit, if the number of this bit can be mod by 3, we set it as 0, otherwise we set it as 1. III: all the numbers appear twice except twoXOR all the numbers so we can get the two by XOR. Since these two elements are not the same, there is at least one bit that different. We find this different position and XOR all the elements which have 1 on position different, the result is one of the two. Finally, we XOR the found one with XOR-ed two, we can get another one. Majority Number I: find the number appears more than halfSince it is a strict majority number, we only need to maintain a variable result and a counter. Initially, when the counter faces with a different number, minus one of counter and change the result to this new number, otherwise we only need to add 1 to the counter. And finally, the result we maintained is the result. (We need to do another pass to make sure this number is the one we are looking for) II: find the number appears more than 1/3Similar with I, we maintain two variables and two counters so that we can get most appeared two numbers. And then we put these two numbers back to the array to find out which one appears more than 1/3. (We can’t use counter to find out, because counters have minus operation during the traversal) III: find the number appears more than 1/kWe maintain a HashMap&lt;number, counter&gt;. Since if majority, each k different numbers should have more than one element. When we get k entries in the map, we remove entries which values are 1. Finally, find the entry that have highest value(count), that key should be the majority number. In this way, we can implement this in O(n) time and O(k) extra space.12345678910111213141516171819202122232425262728293031323334353637383940414243public class Solution { public int majorityNumber(ArrayList&lt;Integer&gt; nums, int k) { if(nums == null || nums.size() == 0) { return -1; } HashMap&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;(); for(int num : nums) { if(map.containsKey(num)) { map.put(num, map.get(num) + 1); } else { // if there are k entries, check if there are any entries that // its value == 1, that is not satisfied with \"more than 1/k\" if(map.size() == k) { Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; iter = map.entrySet().iterator(); while(iter.hasNext()) { Map.Entry&lt;Integer, Integer&gt; entry = iter.next(); if(entry.getValue() - 1 == 0) { // can't use: map.remove(entry.getKey()); // above wrong code would lead the iter can't find its next !!! iter.remove(); } else { map.put(entry.getKey(), entry.getValue() - 1); } } } else { map.put(num, 1); } } } // find the one that have highest value(count), that key should be the majority number int value = 0; int result = -1; for(Map.Entry&lt;Integer, Integer&gt; entry : map.entrySet()) { if(entry.getValue() &gt; value) { value = entry.getValue(); result = entry.getKey(); } } return result; }} Best Time to Buy and Sale Stock I: one time operationMaintain two variables, local and global. The local = Math.max(prices[i] - prices[i - 1] + local, 0), means when we sell the stock on day i, our max profit is this much. The global is the max of itself and local. II: any times operationOur goal is to find all the increasing segments in the array. So if we face an increasing, we add the difference to the maxProfit. III: two times operation (–&gt; k times)Maintain two int[3], one is local[j] = Math.max(global[j - 1] + Math.max(diff, 0), local[j] + diff), where diff = prices[i + 1] - prices[i]. This variable means at day i, we can get the max profit by j operation(s). The first half means we sell the stock on day j instead of on global[j - 1], the second half means we sell it on day j anyway. And the global[j] = Math.max(local[j], global[j]) as before. Follow Up: k operations 1234567891011121314151617181920212223242526public class Solution { public int maxProfit(int[] prices) { return max(prices, 2); } // k: k times transactions public int max(int[] prices, int k) { int len = prices.length; if(len == 0) { return 0; } int[][] local = new int[len][k+1]; int[][] global = new int[len][k+1]; for(int i=1; i&lt;len; i++) { int diff = prices[i] - prices[i-1]; for(int j=1; j&lt;=k; j++) { /* * local[i][j]: max profit till i day, j transactions, where there is transaction happening on i day * global[i][j]: max profit across i days, j transactions */ local[i][j] = Math.max(global[i-1][j-1]+Math.max(diff,0), local[i-1][j]+diff); global[i][j] = Math.max(global[i-1][j], local[i][j]); } } return global[len-1][k]; }} Maximum Subarray12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364public class Solution { /** * @param nums: A list of integers * @param k: An integer denote to find k non-overlapping subarrays * @return: An integer denote the sum of max k non-overlapping subarrays */ public int maxSubArray(ArrayList&lt;Integer&gt; nums, int k) { // write your code if(nums == null || nums.size() == 0 || k &lt; 1) { return Integer.MIN_VALUE; } int[][] dp = new int[k][nums.size()]; /* init the dp[][]: eg. -7,1,-1,-3,-4,-10,2,-100,-51,-12 after first for loop: -7 0 0 0 0 0 0 0 0 0 0 -6 0 0 0 0 0 0 0 0 0 0 -7 0 0 0 0 0 0 0 0 0 0 -10 0 0 0 0 0 0 after second for loop: -7 1 0 -3 -4 -10 2 -98 -51 -12 0 -6 0 0 0 0 0 0 0 0 0 0 -7 0 0 0 0 0 0 0 0 0 0 -10 0 0 0 0 0 0 */ int sum = 0; for(int i = 0; i &lt; k; i++) { sum += nums.get(i); dp[i][i] = sum; } for(int i = 1; i &lt; nums.size(); i++) { dp[0][i] = Math.max(nums.get(i), dp[0][i - 1] + nums.get(i)); } for(int i = 1; i &lt; k; i++) { for(int j = i + 1; j &lt; nums.size(); j++) { int curMax = dp[i][j - 1] + nums.get(j); for(int m = i - 1; m &lt; j; m++) { if(dp[i - 1][m] + nums.get(j) &gt; curMax) { curMax = dp[i - 1][m] + nums.get(j); } } dp[i][j] = curMax; } } /* after the main loops: -7 1 0 -3 -4 -10 2 -98 -51 -12 0 -6 0 -2 -3 -9 3 -97 -49 -10 0 0 -7 -3 -4 -10 2 -97 -48 -9 0 0 0 -10 -7 -13 -1 -98 -49 -10 */ int result = Integer.MIN_VALUE; for(int i = k - 1; i &lt; nums.size(); i++) { if(dp[k - 1][i] &gt; result) { result = dp[k - 1][i]; } } return result; }} k-SumPartition ArrayQuick Questions","link":"/2015/02/08/InterviewNote8Questions/"},{"title":"Interview Note - Intro","text":"Coding Style Leave blank space around each operations Give meaningful names to parameters Add space line between two logic blocks For example, Implement strStr(): 12345678910111213141516171819202122232425public class Solution { public String strStr(String haystack, String needle) { if(haystack.length() &lt; needle.length()) { return null; } if(haystack == null || needle == null || needle.length() == 0) { return haystack; } for(int i = 0; i &lt;= haystack.length() - needle.length(); i++) { boolean find = true; for(int j = 0; j &lt; needle.length(); j++) { if(haystack.charAt(i + j) != needle.charAt(j)) { find = false; break; } } if(find == true) { return haystack.substring(i); } } return null; }} Tips: A well-known algorithm to solve this problem is using KMP. This method can run in O(m+n) time. But usually, during a 45 minutes interview, complete this O(m*n) method is enough. So, understanding what the point the interviewer asks is very important. Think it in this way. If I were the interview:This guy may be my potential colleague. Is there any bug here? Because if there are many bugs, I will probably debug a lot for him when we are in a team.Is he talktive? Well, I will give you limited conditions about the problem and I hope you can ask me for more details. Also, to every question, pay attention to the boundry condition. When we solve a coding problem Pay attention to the boundry condition Do communication during the writing part When finished coding, do a test case no matter the interviewer request or not Permutations ProblemsSubsets: 123456789101112131415161718public class Solution { public ArrayList&lt;ArrayList&lt;Integer&gt;&gt; subsets(int[] S) { ArrayList&lt;ArrayList&lt;Integer&gt;&gt; result = new ArrayList&lt;ArrayList&lt;Integer&gt;&gt;(); ArrayList&lt;Integer&gt; subset = new ArrayList&lt;Integer&gt;(); Arrays.sort(S); helper(result, subset, 0, S); return result; } private void helper(ArrayList&lt;ArrayList&lt;Integer&gt;&gt; result, ArrayList&lt;Integer&gt; subset, int len, int[] S) { result.add(new ArrayList&lt;Integer&gt;(subset)); for(int i = len; i &lt; S.length; i++) { subset.add(S[i]); helper(result, subset,i + 1, S); subset.remove(subset.size() - 1); } }} Similar Problems:SubsetsIIPermutationsPermutationsIICombinationSumLetter Combination of a Phone NumberPalindrome PartitioningRestore IP address","link":"/2015/01/21/InterviewNoteIntro/"},{"title":"Interview Note - Union Find","text":"Union FindFrom wiki:In computer science, a disjoint-set data structure, also called a union–find data structure or merge–find set, is a data structure that keeps track of a set of elements partitioned into a number of disjoint (nonoverlapping) subsets. It supports two useful operations:Find: Determine which subset a particular element is in. Find typically returns an item from this set that serves as its “representative”; by comparing the result of two Find operations, one can determine whether two elements are in the same subset.Union: Join two subsets into a single subset. Example:261. Graph Valid TreeGiven n nodes labeled from 0 to n - 1 and a list of undirected edges (each edge is a pair of nodes), write a function to check whether these edges make up a valid tree. For example:Given n = 5 and edges = [[0, 1], [0, 2], [0, 3], [1, 4]], return true.Given n = 5 and edges = [[0, 1], [1, 2], [2, 3], [1, 3], [1, 4]], return false. Hint:Given n = 5 and edges = [[0, 1], [1, 2], [3, 4]], what should your return? Is this case a valid tree?According to the definition of tree on Wikipedia: “a tree is an undirected graph in which any two vertices are connected by exactly one path. In other words, any connected graph without simple cycles is a tree.” Note: you can assume that no duplicate edges will appear in edges. Since all edges are undirected, [0, 1] is the same as [1, 0] and thus will not appear together in edges. 12345678910111213141516171819202122232425262728293031323334353637383940public class Solution { public boolean validTree(int n, int[][] edges) { UnionFind uf = new UnionFind(n); for (int i = 0; i &lt; edges.length; i++) { if (!uf.union(edges[i][0], edges[i][1])) { return false; } } return uf.size == 1; } private class UnionFind { int size; int[] nodes; UnionFind(int size) { this.size = size; this.nodes = new int[size]; for (int i = 0; i &lt; size; i++) { nodes[i] = i; } } boolean union(int a, int b) { int label_a = nodes[a]; int label_b = nodes[b]; if (label_a == label_b) { return false; } else { for (int i = 0; i &lt; nodes.length; i++) { if (nodes[i] == label_a) { nodes[i] = label_b; } } size--; return true; } } }} Example:305. Number of Islands II:A 2d grid map of m rows and n columns is initially filled with water. We may perform an addLand operation which turns the water at position (row, col) into a land. Given a list of positions to operate, count the number of islands after each addLand operation. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water. Example:Given m = 3, n = 3, positions = [[0,0], [0,1], [1,2], [2,1]].Initially, the 2d grid grid is filled with water. (Assume 0 represents water and 1 represents land).0 0 00 0 00 0 0Operation #1: addLand(0, 0) turns the water at grid[0][0] into a land.1 0 00 0 0 Number of islands = 10 0 0Operation #2: addLand(0, 1) turns the water at grid[0][1] into a land.1 1 00 0 0 Number of islands = 10 0 0Operation #3: addLand(1, 2) turns the water at grid[1][2] into a land.1 1 00 0 1 Number of islands = 20 0 0Operation #4: addLand(2, 1) turns the water at grid[2][1] into a land.1 1 00 0 1 Number of islands = 30 1 0We return the result as an array: [1, 1, 2, 3] Challenge:Can you do it in time complexity O(k log mn), where k is the length of the positions? 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152public class Solution { public List&lt;Integer&gt; numIslands2(int m, int n, int[][] positions) { List&lt;Integer&gt; result = new ArrayList&lt;&gt;(); if (positions == null || positions.length == 0 || positions[0].length == 0) { return result; } // id for each position, init with -1 int[] id = new int[m * n]; Arrays.fill(id, -1); // number of islands int count = 0; // directions int[][] directions = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}}; for (int i = 0; i &lt; positions.length; i++) { // init this position with its own index id, and update count int index = positions[i][0] * n + positions[i][1]; id[index] = index; count++; // check surroundings for (int j = 0; j &lt; directions.length; j++) { int x = positions[i][0] + directions[j][0]; int y = positions[i][1] + directions[j][1]; // check validation of x,y and if it is an island if (x &gt;= 0 &amp;&amp; x &lt; m &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; n &amp;&amp; id[x * n + y] != -1) { // find the island that it's index is this neighbor island id int originalIslandId = getOriginalIslandId(id, x * n + y); // when the neighbor island id is different with current island, union // union: change neighbor island (original) to current island id if (originalIslandId != index) { id[originalIslandId] = index; count--; } } } result.add(count); } return result; } public static int getOriginalIslandId(int[] id, int i) { // in order to reduce the height of the tree, find the root while (i != id[i]) { id[i] = id[id[i]]; i = id[i]; } return i; }} Similar Problems:128. Longest Consecutive Sequence200. Number of Islands","link":"/2017/02/28/InterviewNoteUnionFind/"},{"title":"Interview Note - Linked List","text":"1. Introduce Dummy NodeWhen the head of the target list we want to return may be different from the original given list, we can use a dummy node linked to the result so that we can get what we want by calling dummy.next. Remove Duplicates from Sorted List II: 1234567891011121314151617181920212223242526272829303132333435public class Solution { public static ListNode deleteDuplicates(ListNode head) { if(head == null || head.next == null) { return head; } ListNode dummy = new ListNode(0); ListNode pre = dummy; ListNode cur = head; int dup = Integer.MIN_VALUE; while(cur != null &amp;&amp; cur.next != null) { if(cur.val == cur.next.val) { dup = cur.val; while(cur.val == dup) { cur = cur.next; // if the rest of elements are all the same if(cur == null) { return dummy.next; } } } else { pre.next = cur; pre = pre.next; cur = cur.next; // add null to pre.next: in case the rest of elements are the same and returned above pre.next = null; } } // add the last element (since cur.next != null skip this element) pre.next = cur; return dummy.next; }} Reverse Linked List II: 123456789101112131415161718192021222324252627282930313233public class Solution { public ListNode reverseBetween(ListNode head, int m, int n) { if(head == null) { return head; } // find the m position node int count = 1; ListNode dummy = new ListNode(0); dummy.next = head; ListNode pre = dummy; while(count &lt; m) { pre = pre.next; count++; } // do the reverse: pre-&gt; reverse[first-&gt;cur-&gt;next] ... ListNode first = pre.next; ListNode cur = pre.next.next; while(count &lt; n) { ListNode next = cur.next; cur.next = pre.next; pre.next = cur; cur = next; count++; if(count == n) { first.next = next; } } return dummy.next; }} Similar Problems:Partition ListInsertion Sort ListReverse Nodes in k-groupRemove Node in Binary Search TreeCopy List with Random PointerSwap Nodes in pairs 2. Basic Operations Insert a Node in sorted List Remove a Node from Linked List Reverse a Linked List Merge Two Sorted Lists Sort List:Define a ListNode separate(ListNode head) and a ListNode merge(ListNode l1, ListNode l2) and do a merge sort. In the return statement (return merge(separate(head1), separate(head2))) of the separate method, we do the recursion until there is only one element left, do the merge method so that we can get sorted lists. Find the middle of a linked list:Use a fast pointer and a slow pointer to find the middle element. It is also used in finding list cycle, or Reorder List. Example: Merge k Sorted Lists Solution 1: Use Heap(PriorityQueue)We maintain a heap (ATTENTION: compare(o1, o2), return neg(o1 &lt; o2), 0 (o1 == o2) or pos(o1 &gt; o2)). The top of the heap will be the smallest element in the heap.This method will cost O(nk) for traverse all elements and O(logk) time to insert it into heap, so O(nklogk), O(k) space cost for the heap. 123456789101112131415161718192021222324252627282930public class Solution { public ListNode mergeKLists(ArrayList&lt;ListNode&gt; lists) { PriorityQueue&lt;ListNode&gt; heap = new PriorityQueue&lt;ListNode&gt;(11, new Comparator&lt;ListNode&gt;() { @Override public int compare(ListNode l1, ListNode l2) { return l1.val - l2.val; } }); for(int i = 0; i &lt; lists.size(); i++) { // !!! PriorityQueue DOES NOT allow null element !!! if(lists.get(i) != null) { heap.offer(lists.get(i)); } } ListNode dummy = new ListNode(0); ListNode cur = dummy; while(heap.size() &gt; 0) { ListNode node = heap.poll(); cur.next = node; cur = cur.next; // !!! PriorityQueue DOES NOT allow null element !!! if(node.next != null) { heap.offer(node.next); } } return dummy.next; }} Solution 2: Divide &amp; Conquer(Merge Sort)Do merge sort the lists of linked list and merge each pair of them.Cost: Merge Sort costs O(klogk) * O(n)Merge = O(nklogk), space O(logk) for the recursion stack. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546public class Solution { public ListNode mergeKLists(List&lt;ListNode&gt; lists) { if(lists == null || lists.size() == 0) { return null; } return helper(lists, 0, lists.size() - 1); } // Merge sort the lists private ListNode helper(List&lt;ListNode&gt; lists, int first, int last) { if(first &lt; last) { int mid = (first + last) / 2; return merge(helper(lists, first, mid), helper(lists, mid + 1, last)); } // we finally only return the first one return lists.get(first); } private ListNode merge(ListNode l1, ListNode l2) { if(l1 == null) { return l2; } if(l2 == null) { return l1; } ListNode dummy = new ListNode(0); ListNode cur = dummy; while(l1 != null &amp;&amp; l2 != null) { if(l1.val &lt; l2.val) { cur.next = l1; l1 = l1.next; } else { cur.next = l2; l2 = l2.next; } cur = cur.next; } if(l1 != null) { cur.next = l1; } if(l2 != null) { cur.next = l2; } return dummy.next; }} Similar Problems:Convert Sorted List to BST","link":"/2015/01/24/InterviewNote4LinkedList/"},{"title":"Character Encoding - ASCII, Unicode & UTF-8","text":"IntroductionASCIISingle byte encoding only using the bottom 7 bits(0-127). The top bit is always 0.In English, 128 symbols are enough to represent all character. But in other situations, French for example, they are insufficient. So we use the top bit to represent accents so that there are up to 256 characters. ‘é’ encodes as 1000 0010(130).But here comes another problem. In different languages, the same binary encoding represents different characters, such as 130 in French is é, but in Hebrew, it is Gimel(ג). Not to mention Chinese characters(more than 100 thousand). So we introduce another encoding system, unicode. Unicode“Unicode encoding” is more properly known as UTF-16: 2 bytes per “code point”. This is the native format of strings in .NET. Values outside the Basic Multilingual Plane(BMP) are encoded as surrogate pairs. These are relatively rarely used - which is a good job, as very few developers get them right, I suspect. “Unicode” is really the character set - it is unfortunate that the term is also used as a synonym for UTF-16 in .NET and various Windows applications.Unicode can be implemented by different character encodings. The most commonly used encodings are UTF-8, UTF-7 and UTF-32:UTF-8: Variable length encoding, 1-4 bytes covers every current character. ASCII values are encoded as ASCII.UTF-7: Usually used for mail encoding. Chances are if you think you need it and you’re not doing mail, you’re wrong. (not widely used at all.)UTF-32: Fixed width encoding using 4 bytes per code point. This isn’t very efficient, but makes life easier outside the BMP. UTF-8UTF-8 has become the dominant character encoding for the World Wide Web. The rule of UTF-8 is:(1) If this is in ASCII, UTF-8 is the same with ASCII(2) For n UTF bytes(n &gt; 1), the first n bits in the first byte set as 1, the n + 1 bit sets as 0, all the first two bits in the following bytes are all 10. The rest of the bits are represented as the unicode of the character. UTF Bytes Hexadecimal Binary 1 0000 0000 to 0000 007F 0xxxxxxx 2 0000 0080 to 0000 07FF 110xxxxx 10xxxxxx 3 0000 0800 to 0000 FFFF 1110xxxx 10xxxxxx 10xxxxxx 4 0001 0000 to 0010 FFFF 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx For example, the unicode of “严” is 4E25 (100111000100101). According to the table above, this character belongs to the third row. So its UTF-8 is E4B8A5 (11100100 10111000 10100101).We can see that actually unicode is different with UTF-8. But there are some libraries that can do the convert. PreprocessingRead UTF-8 file: 1234567891011121314151617181920212223242526272829303132333435import java.io.BufferedReader;import java.io.File;import java.io.FileInputStream;import java.io.IOException;import java.io.InputStreamReader;import java.io.UnsupportedEncodingException; public class readUTF8 { public static void main(String[] args){ try { File fileDir = new File(\"\\test.txt\"); FileInputStream fis = new FileInputStream(fileDir); InputStreamReader isr = new InputStreamReader(fis, \"UTF-8\"); BufferedReader in = new BufferedReader(isr); String str; while ((str = in.readLine()) != null) { System.out.println(str); } in.close(); } catch (UnsupportedEncodingException e) { System.out.println(e.getMessage()); } catch (IOException e) { System.out.println(e.getMessage()); } catch (Exception e) { System.out.println(e.getMessage()); } }} Write UTF-8 file out: 123456789101112131415161718192021222324252627282930313233343536import java.io.BufferedWriter;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.io.OutputStreamWriter;import java.io.UnsupportedEncodingException;import java.io.Writer; public class test { public static void main(String[] args){ try { File fileDir = new File(\"\\test.txt\"); FileOutputStream fos = new FileOutputStream(fileDir); OutputStreamWriter osw = new OutputStreamWriter(fos, \"UTF-8\"); Writer out = new BufferedWriter(osw); out.append(\"Website UTF-8\").append(\"\\r\\n\"); out.append(\"?? UTF-8\").append(\"\\r\\n\"); out.append(\"??????? UTF-8\").append(\"\\r\\n\"); out.flush(); out.close(); } catch (UnsupportedEncodingException e) { System.out.println(e.getMessage()); } catch (IOException e) { System.out.println(e.getMessage()); } catch (Exception e) { System.out.println(e.getMessage()); } } } Convert from String to byte[]: 12String s = \"some text here\";byte[] b = s.getBytes(\"UTF-8\"); Convert from byte[] to String: 12byte[] b = {(byte) 99, (byte)97, (byte)116};String s = new String(b, \"US-ASCII\");","link":"/2015/03/18/Tech150318_encode/"},{"title":"Update Hexo 3.0","text":"Spend a whole night working on updating Hexo. It is much more complicated than I expected. For anyone’s convenience, I record some key points when migrate from Hexo 2.x to 3.0 besides the official documentation. First things first: uninstall HexoYes. Though the official wiki says that we can directly migrate from 2.x to 3.0, this doesn’t work (to me). Besides, instead of wasting time figuring out what’s wrong when updating, re-installating and configurating Hexo 3.0 seems acceptable to me. You can try to update directly but I didn’t do that successfully.Before your uninstallation, backup your posts and any other custom setting files (eg. _config.yml, your own theme file, etc).To uninstall Hexo, use the node package manager(npm): 1npm uninstall hexo Now, install Hexo 3.0Run 1$ sudo npm install -g hexo-cli Hexo wiki doesn’t mention the administration permission, but in my experience we have to add sudo here. Then we need to setup hexo folder in your desired place(folder). 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ sudo npm install Still, try sudo when you fail to run any command. For your future convenience, we install all necessary services here: 123456789npm install hexo-generator-index --savenpm install hexo-generator-archive --savenpm install hexo-generator-category --savenpm install hexo-generator-tag --savenpm install hexo-server --savenpm install hexo-deployer-git --savenpm install hexo-deployer-heroku --savenpm install hexo-deployer-rsync --savenpm install hexo-deployer-openshift --save and any plugins you probably need: 1234npm install hexo-renderer-marked@0.2 --savenpm install hexo-renderer-stylus@0.2 --savenpm install hexo-generator-feed@1 --savenpm install hexo-generator-sitemap@1 --save All in sudo mode (or you can directly do all of these in sudo -i mode).Now, we finished installation. Next, configurationAs before, most of the configurations are the same (in _config.yml), but some tricky changes are: deploy to githubInstead of set it as github, set it to git. Otherwise you will be fail when deploy to github.In case you didn’t know how to deploy, go to this page and follow the instruction. content in each pageYou will probably find that in archive or category, lots of posts are lost. This is because all pages show the number of posts as the per_page: 10. (see this issue(chinese) in github) If you want to modify each page’s content, try add the following in _config.yml: 12345678910archive_generator: yearly: true monthly: true per_page: 0category_generator: per_page: 0tag_generator: per_page: 0 About the theme, I prefer to add any feature or change anything by modifying the default theme(landscape) since it is a perfect suit for current Hexo version. If you use any third party theme you will probably find that it costs you long time generating all your posts when you have plenty of (200+) them. According to the issues appear on github, there are many other problems in version 3.0. The killed problem is that some of the expressions (eg \"-\") can’t appear appropriately. Since Octopress also released its 3.0 early this year, I am wondering should I try to use Octopress. But the news is actually not that exciting on its website. So, question mark here.","link":"/2015/04/30/Update_hexo_v3_150430/"},{"title":"Markdown Reference","text":"This template is used for later markdown reference. Fonts:12345*Italics***Bold*****Italics and Bold***~~Scratch~~It also works if you change the star(*) into underline(_). Italics, Bold, Italics and Bold, Scratch Link:1[My Website](http://kidchen.github.io/) My Website Reference:Add “&gt;“ before a line to express reference (add more “&gt;“ to do nest). This is a reference. This is a nested reference. Quote:Say something. [Author AAuthor B] [link] [source_link_title] For more information, visit this page. Different subtitles:Add one to six sharps(#) and a space before the head. Head1Head2Head3Head4Head5Head6Codes:Use “`“ around the inline code or use “```“ to define coding area. This is an inline code. [title] [url] [link text]1code snippet 1$ hexo new \"My New Post\" List:Use “*“, “+“ or “-“ followed with a space to express unordered list. unordered list nested unordered list nested unordered list nested unordered list nested unordered list Use numbers followed with a dot and a space to express ordered list. ordered list ordered list ordered list Insert img:1![text](/path/to/your/img.jpg \"option-title\") Miscellaneous：Use three or more “*“, “-“ or “_“ to add divide line.Note: There is no other characters in the divide line except spaces Use “\\“ as the escape character. Use &lt;!-- more --&gt; to add “more” button. A very nice Cheat Sheet for Markdown syntax.","link":"/2014/11/29/The-First-Test/"},{"title":"☆开阁——希望☆","text":"这个阁开的偶然—— 我是个15.5岁的学生，现在正是暑假，中考的风暴刚从体中席卷而过，20号成绩就公布了，游荡在等待的几天，上网似乎比出去玩更合适，百无聊赖，从a开始点击…… 考前换了部手机，但不知到从哪里下载适合的游戏，百度知道找找……“空间开通……”，咿~和blog有区别吗？弄一个再说…… 抱歉的说，第一篇文章是转的，只是想练练拉。删掉了，现在正常了。 明天出成绩，心里通通的，凑在一起，就萌发出了对希望的希冀。 就象是梦的希望在哪里？ 外面·大地的希望 遥远的中东，水比金子更贵重。在那里的田地，正面临着前所未有的干旱。土地已经开裂，象龟壳一样（哎，就皲裂呗T^T），就连石缝间的生命们也无法适应这样的生活。几声低低的鸟鸣，划破天空，似乎预示者这里将成为沙漠的新家。 但突如其来的乌云改变了一切。密集的雨滴象一层江南的细纱遮在天地之间。龟裂的土地被这样有胶水功能的雨水牢牢粘在一起。雨渐渐地停了。没过几天，第一株小草便破土而出。 里边·心的希望 可怜的杰又一次被篮球俱乐部拒绝了，这次的理由是他个子太低。杰怎么也想不通，自己每次都努力的练球，却因为身高而被拒之门外。疲惫的他躺在床上，不知不觉的谁着了。再梦里，他穿者篮球俱乐部的队服，胳膊上绑着他梦寐以求的队长袖标，抢下一个又一个篮板——他有2.4米？！~ 甜蜜的笑容流淌在熟睡的脸上，心沉浸在2.4米中。 身边·我的希望 大年初一，我许下n个梦想（太贪了没办法）：考上心仪的高中，长的再胖点，让我最好的朋友把手机丢了（恨恨的）……现在，又多了一个——盖好我的波洛阁。天天都在祈愿，似乎希望就在身边。 那么，从7月19号起，日下龙的blog开阁拉！！！ 希望我、我们的希望都实现。这也算是我的希望……","link":"/2006/07/19/cn-20060719/"},{"title":"解放 人民站起来了","text":"历经千辛万苦，成绩终于出来啦！分数不说了，想起来就伤心……呜呜 不过，通过中考，我发现了一些问题哦~ 1、 中国教育的弊端 尽是鼓吹素质教育，但还是应试教育的模式。人们都公认中国的初等教育是世界一流的，这不假。那为什么中国人总不能有世界一流的创新呢？外国（不是崇洋寐外）的自我发展的确是我们苦学所不及的。（忽然觉得自己有评论家的影子哦*-*） 2、 施用不如实用 从考题上说（这个……势必会得罪人呐，我在这里先说题出的很有水平^），数学实在是!@#$%^&amp;*^！！答案的思路是独到的，但我们是中学生，我承认有很强的学生，比我好的人有的是，但总该有“大众数学”的影子吧？！出这个难度的题，似乎已经跳出了打基础的本意了。施用这种方式，倒不如来点实用的题更能体现学生的能力（愤愤的）！ 3、学生的心理 这个我体会最深，尽管我在的班是年级里的倒数，但在临考两周时，还是变得紧张起来。虽然大家依然谈笑风生，可心里已经为中考打鼓了。从我来说，中考是残酷的，犹如千军万马过独木桥，每天就象作贼一样，吃吃不好、睡睡不着（我不是说家庭熏陶，声明，我是正常学生）。 即使是考完，余温仍能把我烤个焦头烂额。等待的几天里，大概每个考生都为自己的成绩捏一把汗。除了我们人多，制度的不合理也使这种现象在960万平方公里的中华大地上普遍存在。 不论怎样，不管我能否考上报考的学校，都已经过去。我们都丛中考的苦海中解放出来。用阿毛（表示亲近，决无不敬）的话就是：人民站起来了！（好像是历史书上的话，……他说的好象是：中华人民共和国，中央人民政府，今天成立了！T-T 一个意思拉~）···","link":"/2006/07/24/cn-20060724/"},{"title":"城郊的美","text":"啊欧~有几天没更新啦，是自己去内蒙古乌兰察布市呆了两天。主要是去了市周遍的凉城。 凉城最重要的景点就是岱海（说是海，其实是个湖，就是今年7月29日张健横渡的那个地方），从乌兰察布到凉城坐巴车两个半小时，便可到凉城。岱海离城大约2公里，已是度假胜地。这里有娱乐城和住宿楼，还有一个“码头”（加引号是因为码头的唯一职责就是为游客乘游船，别无二职）。 湿地：从正门到“码头”要过一片天然湿地，湿地上铺有三条用大石头延绵成的路，走起来颇有意思。 “海”岸：船，人人坐过，我就不说了，就是湖岸，别有滋味。 湖水在太阳的照射下，蒸腾出哝哝水气，与天边白云交相呼应，连成一片，不仔细看，哪能辨得界线。（照片是手机拍的，有些模糊了） 在岱海不远处，有座小庙，背靠一山。本没什么好奇，但当地人说，那山有似一神。这便引起我兴趣。到后，一看那山，卧佛！我要拍照，但又怕惊扰那佛，就作罢了。 乌兰察布市中，也有一处景——老虎山，海拔144*米（其实是个土坡，只是因为在内蒙古高原，沾了一光）。 坐火车回呼和浩特，路上碰到一位乌兰察布人，带孩子到呼和浩特中考（ps：1.呼和浩特二中是呼和浩特市最优秀的高中，本人前几天就接到了二中的录取通知书哦~，西西*-* ； 2.这次提到的中考，是面向非呼和浩特人的对外招生考试），谈到为什么要到别处上学。虽然两地不远，却有天壤之别，就如同城郊。究竟呼和浩特好在哪里，他举了个例子：呼和浩特与北京学生同时高考，但上清华的分数线却有100余分，可为什么两地学生在清华的成绩却恰恰相反？就是这个道理！ 深思，穷者越穷，富者越富。同样的美，就是美的不同？！","link":"/2006/07/30/cn-20060730/"},{"title":"★20/30分的细节描写片段——无憾的倒下★","text":"他软瘫在路旁。普通的放学回家，路过一个公交车站，正巧一辆公交车开门送客。在开门的一瞬，一位老人如坠落的水球瘫在地上，似乎不象是下车时的意外。看到这幕，许多人围了上去。我并没有停下回家的脚步，思维也没有停下。他是位年长的老人，当然离天堂更近；我还是花季，但透过他，也似乎看到了天堂。从婴儿呱呱坠地起，他就开始迈向死亡；而我呢，也会有瘫倒在地的一天？既然终有这么一天，我也就不会象失意的学生提前结束自己的生命。人生短暂，没有一天值得浪费，我必须在真正看到天堂之前过到足够充实，让自己无憾。无憾的生命不会随他而停止。我加快了回家的步伐，从此刻起不在踌躇，从此刻起不在止步，从此刻起不在空虚。在倒下时无憾。","link":"/2006/10/06/cn-20061006/"},{"title":"城郊的美","text":"长时间不更新博客，还以为我丢了呢。其实不然——我玩疯了。 8月5号，我开始了旅行。先去了济南，那里有我的一个亲戚，逛了只剩两眼半的趵突泉，莲花满湖的大明湖。紧接着，我跟着旅行社到了曲阜，参观了孔林、孔府、孔庙。这里有点说的，那就是这里的饭：一盘豆芽要20元！！不知道孔老夫子当初有没有想到。 到山东，不能不爬泰山。这不，我就到泰安拜访这座五岳之尊了。爬到十八盘时，我都快吐血了，不过，本人还是顶住艰难困苦—-—||| 登上了玉皇顶（1540米）。 回济南，我似乎上了爬山的隐了，又将千佛山一举拿下！ 为什么我要再回济南呢，泰安没有通青岛的火车。听懂了吧，我是要去青岛。想象中的青岛是个漂亮的海滨城市，可令人失望的是，他是个街道错综复杂的、紧凑的地方。我逛了海底世界，比北京的果然好。去了海滨浴场，那里的水好咸~ 到五四广场见到了传说中的雕塑——五月的风。我要重点讲的是崂山。——中学就学过《崂山道士》，这下想亲眼会会他。不想，爬崂山有三条道，那道士住在南山，而我选的道是巨峰道……虽然比泰山矮一截，但却比泰山多2000多级台阶！~ 累的我不得了，也没见着那道士。** 带者疲惫，我乘火车到了烟台，本来是要接着去威海、蓬莱，再乘船到天津塘沽，不料烟台没有通天津的船。我怕赶不上21号报到，只得在烟台草草逛逛，买了去大连的船票。 海上漂泊，那种感觉，真是无法形容…… 中央4台有大连的广告，我对这座城市也是期望已久。失望至极，除了星海花园和滨江道，其他地方与呼和浩特没什么两样，甚至还不如。 我是学生，到大连当然要去旅顺。旅顺口的险、旅顺博物馆中的丽、尔灵山的痛，相互交织。其中有个插曲：尔灵山是日本将军乃木希典为纪念其儿乃木宝典所立，参观此处的日本人当然不少，但有趣的是，日本人没有一个坐人力滑竿上山，而中国人却相反。——好听的说，中国人会享受；不好听的，中国人，真是没有爱国心！！ 带着复杂情绪，我乘船到了塘沽，一路没买象样的纪念品，在洋货市场可以花钱了~ “天津的哥可真没几个好××！”我见到舅爷第一句。怎么这么说——从天津站到舅爷家打的8元，这是死价，最近天津修路，绕道也顶多10块，可拉我那司机骗了我17块！！！ 天津除了工业发达，城区的建设连大连还不如~ 也没什么好玩的地方，我就去了食品街吃了点小吃就买了回呼和浩特的车票。 火车“咯噔……咯噔……”响着，18号的日历也被我看到，时间就这样说了拜~","link":"/2006/08/21/cn-20060821/"},{"title":"从夏至未至到花落多少","text":"周三是语文测试，却没有文思如泉涌的感觉，于是打开书柜找些灵感来。 小说一栏往往是我钟情的，每每打开，总免不了瞟上几眼。这次也是，只是不觉发现一本形状略大的静静地呆在群书之中。好奇弯下腰去看书脊——《1995-2005夏至未至》，郭敬明著。刹时，我感觉思绪万千，不觉想起初中片段。 这本盗版小说是今年五月份我在地摊上偶尔看到的，在紧张的备考时期，我也只是翻了几页，但故事的真实一下将我套住，在“五一”用了两个晚上读完。真的，这本书的故事太感人了，每读一段，都很用心。这似乎很幼稚，明明知道是编的，初中时还是有些同学流下了眼泪，因为这段我已倒背如流的文字： 那个男孩，教会我成长 那个女孩，教会我爱 他们曾经出现在我的生命里 然后又消失不见 可是，我不相信他们是天使 他们是世界最普通的男孩和女孩 所以我就一直这么站在香樟树下等着 因为我相信 他们总有一天会回来 回来找我 教会我更多的事 初读这段，仅觉得是没什么内涵和文采的小诗。的确，整部小说都不华丽，但只要读过后再读，便感觉内心一阵触动。更加上同学们即将离别，体会之情更如火山喷发。 是啊，每个人都有自己的回忆，想起我也曾有过的男孩女孩，不知他们现在怎样。尽管他们肯定不是天使，但真的能在香樟树下等到再见的一天么？ 痴痴地看着书封好久，终于明白，时间似乎已从树梢流过—— 在这个夜晚 我突然间长大了 真正感到了害怕 感到正慢慢丢失着青春 都无法追悔 那过去的岁月 像风一样的时光 他催我老去 让我变得丑陋 幻想依旧伟大 可我已不在是什么英雄 我已成熟的像个老者 回忆过去的样子—— 那天真烂漫的时光 像一片散落的花瓣 我还是那样的纯洁 像一个天真的孩子一样 在拼死坚持 写的很不压韵，且算作散文诗罢。但的确是真切感受啊。 为什么年轻人，至少是我比较喜欢现实一点的小说，也许正是因为写的切合花季——似有忧伤却活力十足。伤感的回忆终是不积极的而《梦里花落知多少》又是怎样的： 记得当年年纪小 你爱谈天我爱笑 有一回并肩坐在桃树下* 风在树梢鸟在叫 不知怎么睡着了 梦里花落知多少 *忘记是什么树了，好像是桃树~","link":"/2006/10/15/cn-20061015/"},{"title":"你来自哪颗星","text":"相遇的那天，空气瞬间凝注，风不再低吟。我的瞳孔无限地扩大，凝视着你深邃的眼睛，想要把你装进我的记忆里。 无需多语，我，已被你吸引。 有你的日子，心已经习惯窒息。有你的时候，我连眨眼的瞬间都想珍惜。我就这样静静地，静静地看着你。看着深情的你，撒娇的你，流泪的你，被汗水浸透的你。你的每个瞬间和侧面我都想要珍惜，我闪烁着执着的眼睛捕捉你的每一个微笑，每一个举动。我一遍又一遍地叫着你的名字，为你欢呼但是你却从来没有看见或者注意到在最不闪烁的地方有个最不闪亮的我，在默默地关注着你，被你的力量牵引。 四处打听你的信息，想要更加靠近你。为你的成功而喜极而泣，为你的失意而懊恼不已。想要为你擦干划过脸颊的眼泪，想要给你寒风中最温暖的围巾。为你执着，为你痴迷。甚至会为你而在图书馆里忽然驻足，因为眼角发现书名无意间拼成了你的名字。嘲笑这样的自己，但是因为是你，所以愿意。 总觉得你和我一样，一样感受到过春天的花样光景，夏日的淡淡香气，深秋的落叶纷飞，隆冬的雪花飘零。可是我还是疑惑，为什么你的身上总会有别样的光芒。仿佛你在哪里，哪里就有了光亮。无论是圣诞节抑或是新年，你都会陪我度过，可是为什么我还是会觉得我们之间还是那样的遥远。因为你，我总会想到自己。 你，来自哪颗星？聆听你的声音，熟悉你的背影，深谙你的脾性。明明每天出现在我的世界里，为什么我却始终没有闻到你身上独有的气息；为什么每天我都在为你秉住呼吸，但是我却始终坚信，你的分秒不曾因我停息。 漫无目的地行走，却在初次相遇的地方再次仰望你。看着你在巨幅海报上的笑脸，仿佛感觉到炎炎夏日因为你而感受到了凉爽的气息。我的发丝，我的心都在这样凉爽的风中飘逸。 有人说过，有些人你不认识他，但是你可以去爱他；有些人你可以去爱他，但是并不一定要和他在一起。偶像和歌迷的距离似乎永远是这样的陌生而又熟悉。 有人说，之所以喜欢偶像要么是把他们当作了自己，要么是把他们当作了恋人。但无论是哪种，我都相信偶像是伴随我们成长和欢笑的异域天使，是每个人成长中必备的灵魂伴侣。我们看着他们的故事，被他们的点滴感动，也仿佛看见了自己的经历抑或成长。陪着他们一起欢笑，一起伤痛。 人生有百态，而作为芸芸众生的我们总是有再多的梦想也往往是循着一个固定的轨道进行着自己星球的运行。然而谁都在心里有着那样的另一个自己，渴望得到自我的解脱，期待一个全新的自己。于是，我们就这样霸道地将自己的梦想或者幻想依附在了他们的身上。想象着自己也享受着台下的掌声也成为了万众瞩目的中心，抑或种种的平凡的人生难以获得的惊喜。或者，把这当作一次假设，一次赌注。假设自己付出同样的努力在同龄的这个岁月里我们会得到怎样的回报和认可，去验证世界上那些“付出终会有回报”的真理。无论在什么时候，我们总会有这样既熟悉又陌生的朋友。不同的时期，我们可能会有不同的这样遥远的朋友。我们虽然没有朝夕相处，没有面对面的亲密接触，但是我们相信我们是最有默契和最了解彼此的朋友。透过他们我看见了不同阶段的自己，幼稚无知抑或勇敢坚毅，天真烂漫抑或努力上进。在你的世界里我懂得了汗水和泪水后的奋斗会有浪潮般的掌声回应，明白了人不是因为完美而美丽，而是因为努力而完美。 你像一个外星人，带着你那颗星独有的光芒和气息与我的星球相遇。漫漫的银河中我们相视而笑，我伸出我的食指触碰你的指尖，温暖地问候着“你，来自哪颗星？” p.s.不知道为什么，同学就叫我et了——似乎是外星来的，偶见这篇文章，觉得……呵呵挺好的~ 榕树下真的有不少好文章呢。","link":"/2007/08/16/cn-20070816/"},{"title":"开在记忆里的花朵","text":"揭开时间的封印，记忆充满了思绪，它是陈酿多年的老酒，越品越香；是吹拂脸庞的微风，挥之不去；是永远绽放的花朵，盛开在去年夏天被汗水湿润的土地上。 八月，炽热的烈日烧烤着大地，偶尔一缕暖风抚在八百多个高中生的脸上——为了这一刻，他们已经奋战了一个多月，而现在，他们却只为了在台上的十分钟。道具在他们手中已留下斑斑汗迹，他们紧张，生怕在大庆汇演上砸了场；他们期盼，希望能为自己的家乡贡献一份力量。一个男孩向场边走来，那烙在颈项上的黑白线十分醒目，透过他微红的双眸，我似乎可以看到他所经历的一个月的磨练。 那坚定的眼神将我带回了一个月前的校园。操场上的他确实有些累了，听着同学们的抱怨他也不免失落起来，摊开双手席地一坐，却发现手上已长出了一层老茧，原来娇弱的身子也有了些力量，他确信，在这次挑战中他已经成长。想到这些，他又重新举起了笨重的道具，跟着指导老师的节奏一遍又一遍地练习，因为他知道，这次经历一定会让他终生难忘。 演出开始了，他迅速整理好衣装，随着伙伴们快速奔向现场。面对数千名观众，他们从容镇静，时间已将他们打造的成熟稳重，十分钟的舞蹈优美流畅，直到最后一刻的掌声响起…… 他们笑了，为成功而笑，最后拼成的葵花图案朵朵向上，仿佛听到了来自太阳的问候；他们哭了，泪水中满含的是喜悦。一张张黝黑稚嫩的笑脸背后是一颗颗成长的心，一块块晒爆的皮下是一股股坚持的精神，一滴滴汗水里面更是一段段苦辣辛酸的记忆。汗水湿润了这片土地，泪水浇灌了一段回忆，而这群孩子，就在这一片鲜花地里蓬勃地成长，然后飞向属于他们各自理想的天空。 而留在这片土地上的，依然是记忆中永远绽放的花朵……","link":"/2008/04/13/cn-20080413/"},{"title":"写给你——运动会的话","text":"轻轻的你来了，正如你轻轻地扣动我们的心弦；你轻轻的带走三天，却流给我们无限的渴望与精彩！ ——题记 两周前，你就和我们打好招呼，但只怪我们没有充分的准备，没有将你留下。 这不是因为我们对你不屑的态度，因为，虽然你的确已经走远，但你的精神依然在我们心中久久不散。 你是那样有吸引力，令我们怦然心动，积极与你一同作战；你是那样多姿多彩，我们都期待着你的到来，一睹你面纱下的芳容；你又是那么花枝招展，如姑娘一般在不远的前方留下清纯的微笑，引领我们向着正确的方向前进，即使脚下布满荆棘，我们也毫不畏惧。 不是我们痴心，是因为我们有火一般的热情、钢一般的决心、山一般的勇气！ 为了你，我们可以起早贪黑，在每一个黎明的清晨，傍晚的黄昏留下清晰的脚印=挥洒的汗水；为了你，我们不辞辛苦，只为在跟你相遇的一刹那展现我们的才华，以得到你满意的微笑，肯定的点头或是亲切的赞赏；即使只与你擦肩而过，没有留下值得我们永远珍藏的回忆，我们也会毫不另啬的挥洒我们的汗水。只为你，我们无怨无悔。 *或许我们这次真的不是赢家，但是请你——运动会记住啊，来年，等到来年，我们一定会等你，当一次赢家，8班也会等你。当一回赢家，只为你！ *背景：我所在的8班在运动会上并没有取得理想的名次（不是倒数哦）。","link":"/2006/10/15/cn-2006101502/"},{"title":"紫裙子","text":"以前从《读者》上读过一篇青春小说，名字已不记得了，不过巧得很，我刚才上西祠胡同又读到了（灵异哦），赶紧贴下来～～ 紫裙子 初中毕业以后我就不再上学，准确地说是没有哪一所中学敢收留我这个手臂上有四处砍伤的学生。于是我正式开始了我的流浪生涯。先是学着拜了大哥，紧接着就是无休止地打架、酗酒、不断地惹事生非，还经常去偷别人的自行车。总之，所有的小混混干过的坏事我几乎都干过。就这样我混了四五年，每天晚上都去“金三角”夜总会打发时间，把从各种渠道上挣来的钱肆意花掉。因为那时的我整天就和跟我一样坏甚至还不如我的人混在一起，在幼儿园里积养成的那点好习惯早就没有踪影了。 那年夏天的一个晚上，我又在“金三角”喝得有些头昏目眩，正打算回去睡觉。但我总觉得这一次酒吧里有些不和谐。我终于发现了不和谐的因素来自一个女孩子。她穿着一条紫色裙子，很简单的学生裙。应该是某个中学的制服。女孩子一个人坐在沙发上，斜眯着眼睛。 那时候我已经在和第三个女友谈恋爱，但我仍然对这位女孩子产生了兴趣。不仅仅是因为她漂亮，我想更可能是因为爱腻了红头发露脐装加破牛仔裤，我更喜欢这条紫色的学生裙子，就像过年吃腻了大鱼大肉，很想吃点新鲜蔬菜一样。 我挨着女孩子坐下来，她没有理我。我又掏出一支烟叼在嘴上，摊着烟盒问她：“你要吗?”女孩子毫不犹豫地接了一支过去，我忙帮她点燃，又回头大声喊：“两杯啤酒。”我的动机显然是不纯的，但女孩子仍然接过啤酒就猛喝。 过了不多会儿，女孩子突然抬头对我说：“你能帮我砍一个人吗?”我听了之后居然有些脸红，我原打算在这个女孩子面前尽量装成良民，没想到一下子就被她识破了。于是我也不再掩饰，说：“行，你要砍他的左手还是右手?”女孩子紧紧地咬着嘴唇，狠狠地说：“不，我不想再见到他，只要你肯帮我，我愿意付出一切代价。”我明白了，她一定是感情上受了伤害。 我有点不甘心，我接触过很多女孩子，但这种女孩子我还是第一次见到，对我有很大的吸引力。我琢磨着那女孩子一定住的不远，所以我就天天在路口等着她。等了一个星期，终于在站台上看到她从一辆巴士上跳下来，紫裙子在阳光下非常好看。我迎了上去，说：“喂，你还没告诉我那人的地址呢。”女孩子发现是我有点吃惊：“是你?”我笑了笑，说：“讲吧，他在哪儿，明天我就帮你把事办了。”女孩子也努力笑了笑：“不了，我想通了，由他去吧!”顿了一下，女孩子突然说：“你真好!” 我发誓自我记事之日起，她是第一个说我好的人。我爸妈被我气得把我扫地出门，从小学到初中，我几乎成了流氓、坏人的同义词。连隔壁邻居教育小孩也是说：“你要不好好学习，长大了就跟黎云一样当混混。”但今天，居然有一位女孩子，而且是漂亮女孩子对我说“你真好”，那天晚上，我破例没有去喝酒，早早地回了家，享受那句“你真好”带来的温暖。 从那以后，每天下午女孩子放学时，我都在巴士站等着她回家，反正我有的是时间。每次看见她那紫色的裙子从车厢里飘下来，我就觉得眼睛里特别舒服。然后我一路送她回家，再吹着口哨去干自己的坏事。从那时起，我觉得自己不再24小时都是坏人，至少在和她在一起的十来分钟内，我是个地地道道的好人。这时候我才知道女孩子叫可可。相处了一段时间后，我和可可已经相当要好了。可可甚至把我带到她的家里，手把手地教我玩电脑。我对她说：“你不怕我把你家里洗劫一空吗?我可不是个好人。”可可说：“我们是一伙的，你总不会吃窝边草吧。” 后来天凉了，女孩子不再穿紫裙子，但我们已成了好朋友。那段时间，我尽量斯文起来，坏事也干得少了一些。 转眼到了年底，气温骤然下降到零度以下，刚下过雪的街道到处是白茫茫的一片。一天夜里，我正打算要睡觉，突然过去的大哥找到了我。他在郊区开了几家赌场，没想到惹恼了那里的地头蛇。所以大哥准备召集人马，明天去跟他们火拼。 我有点犹豫。这段时间以来，从可可那里我看到了一种全新的生活方式。而我所经历和正在经历的一切，不过是一种极其卑微的低级生活。但我仍然答应了下来。因为我不可能拒绝，因为我是个小混混，是一个在混混的世界里也受压追的小混混。 第二天雪仍在下，天出奇的冷，我在站台上等到了可可。可可穿着一件羽绒服，见我还一个劲地喊：“冻死了。”我笑了笑，因为心里有事，我没说什么话。可可很快发现我没有以前那样活跃，忙问我为什么。于是我如实地把晚上的事讲给可可听。可可突然可怜兮兮地说：“你不去行吗?”我有些嘴硬：“那怎么行，我说话向来一言九鼎。”可可没有再接着说一句话，低着头回了家。 我有点失望，觉得自己好不容易才从泥潭里拔出一条腿来，又不得不重新踩下去。 入夜了，外面的风一阵紧一阵地刮着，雪片敲打着玻璃。我带着家伙按时出了门，走到楼口，冻得连着哆嗦了几下，不由得缩缩脖子。 我永远忘不了我拐过路口的那一幕。那是在一滴水成冰的冬夜呀，在几乎空无一人的大街上，我看见穿着紫裙子的可可。为了一个并未深交的坏人朋友，可可竟然穿上了那件紫裙子。狂风撕扯着她的身躯，也撕扯着我的灵魂。 我哭了，我恨不得扯下我身上所有可以御冷的东西来为可可遮住这满天的飞雪。 最终我把已经冻得不行了的可可送到了医院。经过几个小时的抢救，可可终于醒了过来，我见我含泪站在床边，突然笑了起来，说：“你居然会哭。”我没心思答话，只听可可继续说：“我穿紫裙子是不是很好看?”我拼命地点头。可可又调皮地眨了一下眼睛说：“你走吧，我爸待会儿来了，非揍扁你不可!” 我就是从走出医院的那一刻起，开始洗心革面的。后来我才知道，那场火拼影响极坏，110立马就赶到了，我的结拜大哥也已被抓了起来。 我和可可并没有像有的小说里那样发展。我为了不再混下去，一人外出打了一年工。在广州的某个角落里，我干着各种本地人不屑干的活儿，挣一点干干净净的钱。一年后，我参了军，去了南京。从那以后我们再也没有见过面。后来我听说可可教到了北京的一所理工大学，然后有了一位男朋友。 也许，再见可可的时候，她已经忘记了我这个昔日的小混混。","link":"/2008/07/06/cn-2008070601/"},{"title":"花不只开在春天","text":"文化如河，浩浩荡荡，无数星光璀璨；文字如苑，芳草翩翩，各家争奇斗艳。文苑之中，散文独霸鳌头，迁客骚人无不迷恋，而在丛旁林边，那一涓细流却以灵动而隽永的渺小，让思想着探究生命的伟岸。诗歌，一朵如流水般的奇葩，虽静立梢头，却盛放华夏。 诗歌一体，古已有之，唯独盛唐成为诗的摇篮。王勃一句“落霞与孤鹜齐飞，秋水共长天一色”道尽了滕王阁之美，李商隐一声“锦瑟无端五十弦，一弦一柱思华年”又惆怅了多少岁月变幻，而李白一叹“蜀道难，难于上青天”更发泄了多少不平之怨。唐诗如花，盛唐如春，朵朵娇妍于盛唐，绽放于春天。 一如再美的花也终有凋零，自唐过后，宋词元曲明清小说一一闪耀，只诗歌流落一旁。纵然有“落红不是无情物，化作春泥更护花”也已是感叹是败落而非馥郁馨香。 但这一隽永的渺小真的只能惊艳于那个春天？ 不，花不止开在春天，在那个动荡的年代，艾青将自己对祖国的热爱用一首《我热爱这土地》惊天动地的摆在人们面前；刘半农将他半生情感化作一句“教我如何不想他”以示对国家的爱恋；舒婷那一首《致橡树》又使多少青年重新燃起了救国的热焰！ “轻轻的我走了，正如我轻轻的来。”你错了，诗歌不会走，她会永远伫立在文坛一边。静谧的诗歌是一幅画，画者用千变万化的笔锋表达着丰富饱满的感情；流动的诗文像一首歌，歌者以细腻流畅的旋律演绎着多姿多彩的人间；呐喊的诗歌是一把剑，武者将凝结毕生的力量发泄于潮湿压抑的黑暗；盛放的诗歌是一朵花，花者把悲伤痛苦的酸楚展现的清新优雅。不论是战火连天，还是安逸舒适，不论是离愁别怨，还是情意盎然，诗歌总是以其独特的魅力或见证，或宣泄地流淌在事实之外、真理之间，永存与诗人之心、凡人之腹。 诗歌，这朵流动着的花，还将继续静立于文苑之中，永不凋零。","link":"/2008/07/06/cn-2008070602/"},{"title":"流浪的二胡","text":"有一个精灵，漂泊如三春之水，清冷似冬夜之月；有一个精灵，惆怅如初夏细雨，幽怨似深秋桂子；有一个精灵，它注定了永远都在流浪——二胡，江南，流浪的二胡。 蒙古包、轱轳车，风吹草地见牛羊的大草原注定了是马头琴的摇篮；红高梁、信天游，大风起兮云飞扬的黄土高坡天生就是唢呐的世界。而杨柳岸、乌蓬船，小桥流水绕人家的江南则永远是二胡生生不息的磁场。一方水土养一方人，一方风情孕育着这一方乐器的生长，只是我们不知那当初的当初，是江南选择了二胡，还是二胡选择了江南。这样的选择费思量，难端详。 二胡之于江南，恰如杏花春雨之于江南一般地诗意和绵长。虽然高山流水，我们只见俞伯牙的那具焦尾琴；浔阳江边，我们也只闻见白居易的那把琵琶。虽然众多的唐诗宋词元曲明剧之中，我们很难听得见二胡的那一声低泣，触到二胡的那一脉无奈，但是谁能说，倘无焦尾琴和琵琶，二胡就不会在江南寂寞地流浪呢？ 六朝金粉、王谢候府的秦淮，有太多的声色犬马，那不是二胡弦线上的开放的花；三秋桂子、十里荷花的钱塘，有太浓的绮丽繁华，那也不是二胡琴弓中跳动的律。纤道、乌蓬、台门、廊棚、雨巷、石桥、茶肆、谷场，这才注定了二胡流浪的行脚。本不属于墨客骚人、显贵官宦，流浪的二胡注定只是在百姓黎民、俗子凡夫中开放的花、流淌的画；流浪的二胡天性就是贩夫走卒、商贾戏子开心时的道具，潦倒时的支撑。 我真的不知道从什么时候起二胡开始在江南流浪，我只知道当如水的月色浸淫深秋桂子，稠密的细雨婆娑河边芭蕉的时候；当多情的晚风掸佛台门的石桥，散漫的炊烟缭绕乡野谷场的时候，二胡的流浪便开始了。当流浪的二胡宿命地遇上了那个人，它的流浪被无端浓缩聚集了，被无限地扩散放大了。那个叫瞎子阿炳的人，像一个巫师，二胡遇上了他，从此便再也停不下流浪的步伐。 《二泉映月》的音符如泉眼汩汩洇漫，我们知道那流浪着的该是一种无奈；《病中吟》的曲调如泪水缓缓流出，我们知道那流浪着的分明是一种悲凉；《良宵》的节拍如思念浓浓笼罩，我们知道那流浪着的更是一种彻骨的沧桑。不是二胡的流浪、音乐的流浪，那样的流浪是一个灵魂的流浪、一方土地的流浪，那样的流浪是一个时代的流浪，一个民族的流浪。 流浪的二胡总要催生众多流浪的心灵，催放众多流浪的花，瞎子阿炳便是一个极致。然而在江南，在青石小弄台门深，乌瓦粉檐廊长遍地市肆的江南，在春草池塘蛙鼓稠，莺雏声里碧禾浓处处乡野的江南，类似因了二胡而流浪的心灵和生命又何止阿炳呢？在我的故乡，四岁失明，自幼父母双亡的孙文明，十二岁时便从故乡的曹娥江边出发漂泊江南，颠沛流离中，他的二胡声响彻了大半个江南。《流波曲》、《四方曲》、《人静心安》，使他由一个民间艺人，走上了上海音乐学院民乐系讲授二胡的讲台。而流浪了一辈子的孙文明，最终还是积劳成疾地客死于异乡上海奉贤。从阿炳到孙文明，到江南市肆和乡野里众多生生灭灭的流浪的灵魂，我们伤感地承认，在江南丝竹中，二胡也许最具悲剧性格。这种悲剧是因了二胡那注定属于流浪的本性，还是因了那太多的流浪灵魂挥洒？ 一方水土的精灵，一盈风情的血脉，器乐是一个时代一种文化的魂魄。而流浪，不只是一种悲苦和困顿、一种沧桑和无奈，更是一种忍耐和坚韧、一种奋进和抗争。它是生命另一种鲜活的姿态，这种鲜活的姿态永远都不能消解。","link":"/2008/12/20/cn-20081220/"},{"title":"雨的印记","text":"呼和浩特又下了几夜的雨…… ——序 《kiss the rain》，雨的印记，一首很好听的钢琴曲。 年轻的钢琴家Yiruma，这个在英国长大的韩国人，浪漫敏感而有才情，他在满天星光的夜晚，忽然间一场雨，顿发灵感，写下了这首曲子。把东方古典的抒情与西方典雅细致的音乐风格相融，钢琴来演绎，干净而澄澈，雨滴般透亮清爽，一种平和的忧伤。 难得有这样微凉的夜晚，窗外有细雨，捧清淡的香茗，听着这支曲子，极易怀想一些略过心头的，若有若无的瞬间，总在想，雨留下的印记，是什么样呢？抑或是一种透明的哀伤，一种若有若无的恍惚？ 白云从蓝天隐去最后身影，以雨的踪迹来找寻前世的记忆，从绿蕉蕊里，从碧荷叶间，从翠竹丛中，悄悄与它们低语，泠然的脆响，轻灵的印记，点滴润泽饱满。那时有风，只是清风，落雨，且是微雨，天地清宁，岁月静好，唯有斜风细雨飘在绿色的韵律里。 如果以雨留下的印记，相伴于我，我则不想枯坐在窗前，那会有无尽的伤感和怅惘，雨中的心，应当是恬淡明净的。 该是撑着纸伞走在昔日的小巷里，看青石板的路面映着雨后斜阳；该站在村居的茅檐下，听雨落在旧缸中的滴哒声；该倚在初相识的小桥上，赏雨后湖面菱叶滚落的莹露；该坐在野渡的舟子里凝望远山，默想一些拂过心头的陈年往事…… 大雨湿身，微雨湿心，滂沱的大雨，来不及体会慢节拍的忧伤，而轻飘的微雨，最能润泽心内黯然的波纹，并一点点慢慢洇湿，直至熨得缎般光滑，玉般圆润，带着水面绿萍的清新气息。被雨点溅湿的印记，漾开层层明朗，是绽放在蓝绸上的白色碎花，只待阳光重新唤醒行云流水里的从前。 哪年的山巅，春草初萌，被淋湿的故事，在伞下的背影里渐行渐远，辫梢上雨的印痕，滴着青橄榄的晶亮幽怨。也曾行在异乡街头，转过暗的长街转角，总觉得你在什么地方唤我，放慢脚步，向雨丝濛濛里回顾，听到岁月深处熟悉的轻叹。某个苍苔雨冷的阶前，桐叶滴落一树凄凉，悲欢从容亦淡定，聆听雨的寂音，才知，走过的路，已一程又一程…… 行过千山万水，总想收集雨的印记，织成素淡的书笺悬在月下角落，等着有一天静静去读，却猛然听到花落的声音，缓缓落瓣，已拢合了雨的影踪，带走它稍纵即逝的痕迹。不经意间，一如这黑白的钢琴键，有节奏地跳跃在手中，却无法把尘埃里舞动的时光，拉回到过往。","link":"/2007/08/02/cn-20070802/"},{"title":"卷中有山水","text":"行走在历史消逝的长廊，许多情节都风化得平淡模糊，但一阵书卷气息抚来，那些卑微颓丧的久色就立刻被漂洗成令人瞠目的鲜活。眼前浮现的不只是“横看成岭侧成峰，远近高低各不同”的奇伟群峦，也不只是“江流天地外，山色有无中”的浩大江波。 在书卷描绘的山水背后，有的是话语者临景而叹的态度和景给予人的启迪。 你说泪珠，你说遗憾，你说“菡萏香销翠叶残，西风愁起绿波间。”李璟所品味的不只是为众芳的香销玉殒而惋惜，更是为才子佳人的悲愁念远而不平，这是透过山水的爱才情怀。你愁断肠，你挥袖唱“直须看尽洛城花，始共春风容易别。”欧阳修的豪放绝非一味痛快与浅露直白，这是不流于洛城花谢悲苦的释怀，更是一种“天风浪浪，海山苍茫”的旷达态度。你独凭栏，你叹江山，你哽咽“别时容易见时难，流水落花春去也，天上人间。”李煜看似被江山阻隔遥远，可实为感叹物是人非国破盛难，是一代君主愁苦无奈的江山情怀。 一卷卷诗书连绵成一座座青山，一段段情感交融出一弯弯清泉。卷中有山水，有山水牵扯出的惋惜、旷达与无奈，有一切世俗情感交代给我们的感悟与启迪，他们荡涤着我们的灵魂，引发我们的思考，让我们变得感性与智慧，有时甚至与古人产生共鸣。对着一轮皎洁的玉盘我们会“明月几时有，把酒问青天”，听着一曲淅沥的雨歌我们会言“一川烟草，满城风絮，梅子黄时雨”，甚至是对着漫天星斗我们也会想着“天上星河转，人间帘幕垂”。这一刻，卷中的山水便移居到我们的心中，我们吐露着阵阵书香，行走在有山有水的长廊。 书卷，山水，情感，从古至今相互纠缠，情感是山水的谱子，山水是书卷的歌。苏轼曾有“大凡为文当使气象峥嵘，五色绚烂，渐老渐熟，乃造平淡”这也是对卷中有山水，山水寄情感的欣赏与追求。 寄情的山水，总是走不出书卷的长廊……","link":"/2009/06/25/cn-2009062501/"},{"title":"霜重色愈浓","text":"接受过旱涝洗礼的草往往长得更茂，经历了风雨阻挠的鸟也会飞得更高。达尔文说，这是自然选择的结果；可在我眼里，这更是一种于磨砺中顽强的生命在强大精神的支持下向着灵魂光芒盛放的花朵。 这朵花滋润了纺织工人出身的张艺谋，低微的出身丝毫没有挡住他向往影视的梦想，而且还使他增添了几分中国普通人民的思想传统，从《红高粱》的获奖到奥运会开幕式的成功，他感谢着曾经经历的挫折。 感谢挫折的还有中国的男子体操队，正是雅典奥运会的惨败使他们卧薪尝胆，在北京奥运会上一举夺得团体金牌。经历过风霜的小伙子们才越来越崭露出成熟与稳重。 其实，精神的花朵不只绽放在这些名人身上，我们每个人的心中都有自己顽强的种子。在刚刚结束的“感动中国”十大人物评选活动中，一个由十三亿人民组成的团体的获奖就再次勾起了我们对2008年的回望。在这个极为不平凡的年份理，我们经历了一系列残酷的挑战与磨炼。雪灾、藏独、地震、火炬，一轮又一轮的威胁挡在了中国人民勇敢向前的路上。然而，在这其中我们所表现出来的团结关爱、众志成城的精神却因这一件件事所变得更加坚固。风霜来得越猛烈，我们就抵抗得越顽强，这种不约而同的凝聚力不正是我们骨子里流淌的民族精神么，这颗永不言弃的中国心不正在我们每个人的胸中跳动么！我们遭受了自然灾害却将民族脊梁挺得更直，我们面对着人为破坏却得到了世界上更多的尊重！ 恩格斯说过，没有哪一次巨大的历史灾难不是以历史的进步为补偿的。这句话不仅仅是对国家而言，而是对所有心中有梦想的。温总理也有多难兴邦的信念。对于面前的困难，要把它看作是一次提升自己能力的机会，只有怀着这样的心才能达到最远的地方。 今天的风霜将会装点你明日的风采……","link":"/2009/06/25/cn-2009062502/"},{"title":"为生命留白","text":"美是春天里小雨打湿了的浅绿，是收割季田野上的一片金黄，是缠绕在青山脚下的一弯绿水，更是停留在人生长河边点点的空白。 驻足水墨宣纸的留白，是一代绘画宗师齐白石先生心中活跃着的生灵。那大块大块留下的空白，是游荡在寒冬中的几点残雪么？他们是漫步在蓝天上的几缕浮云，是跳跃在湖面上的粼粼波光，还是回荡在密林深处的几声鸟鸣呢？这种传承千年的经典艺术技法，不仅给了大师笔下的虾虫一个生活的自由，更给了观赏者一处心灵的停泊。生命的足迹在此处变得浅淡而富于想象力。 行于格点纵横的空位，是那位围棋传奇人物聂卫平手下智勇双全的戍边将士。那与黑于白间留下的空隙，不是围棋厮杀后留下的空城，而是聂帅脑海里布下的陷阱。这样常常出其不意的空出一步的棋法，让聂卫平成为饮誉世界的围棋圣手。他不仅给了棋子一个易于伸缩的空间，更给对手心里埋下了担心。生命里的智慧在这里得到了淋漓尽致的发挥和施展。 而人生，似丹青，也像博弈。 望着天空中似聚又散的白云，林语堂感叹着生命的拥挤，于是他放下了手中忙碌的笔，开始了自己两年的旅行。这样，他在他的文学生命里留出了调整自己的空白，在他的辉煌轨迹中又设了一处空位。而对于生活在同一个社会里的每一个人，又何尝不需要在各自生命的转角留出一片容自己喘息的空白呢！在生命中留出空白，当我们疲于生活的重压时，舒缓自己高节奏的心，倾听自己的感受，充实自己的记忆，用自己的左手温暖右手，穿过西风凋碧树的季节，穿过为伊消得人憔悴的隘口，待一生走完，我们便会在暮然回首之间发现，曾经以为的后悔遗憾竟因为一处处的留白而变得完整而精彩！其实，处在巅峰时的冷静，不正是需要留白来反观自身，准备下一个起点吗！ 留白是画纸上漫不经心的神来之美，是棋局中明争暗斗的智慧之美，更是生命中不可或缺的精神之美……","link":"/2009/06/25/cn-2009062503/"},{"title":"最近，真乱！！！","text":"大概好几天没上网了，最近的事突然变得好多，都乱套了！ 已经不记得上次写字是什么时候，总之是知道分数以后吧？中间又插了一天跟孟同学看电影，看到头晕眼花吐血。。。再加上老爸亲赴北京考察学校，史无前例；近来还跟妈妈逛了整个呼市的装修建材城为装修新家准备；抽空还得看考驾照的科一理论1500道题，oh my dog…，彻底混乱！ 当然，看学校还是主角，毕竟与我关系极大。不过我考得分数相当尴尬——准确的说是内蒙考生的普遍障碍，就是择校地域问题……唉，到底要不要去北京啊，我都迷茫了…… 问了好几位前辈级学长，都说挑个好专业重要，可是北京学校真是没几个象样的，北大清华又上不去，我要学电信只能去北邮，可北邮通信不如西安电子科技大好啊……这个问题循环往复困扰了我好久……终于，今天爸爸回来了，决定为了地域优势——“你还是去北邮吧。。。” 休闲了一晚上，明天开始为科一奋斗1500道题。大家都说，二中的学生，不考满分的话，就算错一道也是失败，呵呵……","link":"/2009/06/29/cn-20090629/"},{"title":"辨不清的美丽","text":"一棵棵参天的槐树是一个城市夏天里的一座座青山。可谁曾想过这一座座青山凝聚的却是几十个冰雪轮回的美丽。 大自然总是给人们带来惊喜。不到了春天，谁也猜不出 一片干涸的土地里究竟正孕育着怎样的生命。或悲、或喜，这样“另类”的一种不确定也常常发生在我们这一人群里。 如果不与她交谈，或是如果主持人不说明，有谁会看出邰丽华这样一位舞姿翩翩、相貌不凡的女子竟是残疾。如果没有那个远房亲戚的拍卖，又有谁会发现静静躺在凡高遗居数年的无价名画。有人说这是万幸，也有人说这是遗憾，但可以肯定的是，现实中有太多的美丽我们辨认不清。这些美一直在积蓄，在沉淀，在等待属于他们的世纪的到来。 正如川端康成所言，美是邂逅所得，是亲近所得。然而现实生活中，我们有太多个“等不及”，有太多个“快一点”，诸如此类的言语像一股无可比拟的飓风催促着人们过早的对事物作出判断，而否定了藏匿在其间的美丽。一生创作了无数经典名曲的贝多芬，穷尽毕生心血也未能换来当时达官显贵的认可，就在夹杂着一声声拒绝的寒冬月夜永远消失于美妙的《欢乐颂》中。而这样一种不舍亲近的做法不仅使欧洲失去了一位伟大的音乐家，更让世界丢弃了一曲华美的乐章。索性他的乐稿在经历了那个冬夜后被世人所发现，总算能复位贝多芬遗憾的叹息，可又有多少个美丽的碎片像那位粗心父亲刀下的树一样，永远不能再享受阳光的沐浴呢？ 面对性急的孩子，长辈们总会说：不要过早下结论。的确，真理这样美好的东西怎么会轻易让人辨认出呢！不等到春天，你不会从枯枝中看到最繁盛的树；不等到夏天，你不会在连绵群山中找出最苍翠的那座；不等到秋天，你不会在满眼农田中挑出最有丰硕收获的一块。仅仅是一个季节的等待，你就能看到最青翠、最金黄的美景，那为什么要如此匆匆地在冬天给四季作出冰冷的定义！ 只等那绿叶萌芽的一段时间，你就能够辨认清那辨不清的美丽……","link":"/2009/06/25/cn-2009062504/"},{"title":"【乱弹】一周消失报告","text":"几天没写东西，一看那个访问统计——哇塞，飞流直下三千里！ 看来我也得向猫同学学习，把最近的事写成一份报告了。可是啊，由于那个我呢，记性不好，时间啊什么的就不细抠了…… 总之呢，主要的事就是我的科一考了97……人家孟孟满分……唉…… 这倒还好，我因为没去野三坡，被那群***要求请客……唉……不过也好，我们再能这样聚一起的日子也不多了。 最生气的呢，就是这些破烂电脑了！说来极为生气！下面应该详述： 【笔记本篇】 那个东芝r100当初是很牛B的超薄本本，但是呢，时过境迁，昔日的本本依旧用SP2有些不搭调了，阿拉借我一张番茄花园的SP3，正好能解掉我的本本因为终日打补丁而变乌龟的负担。 兴奋中…… 安装完成，结果呢，由于03年的东芝是预装驱动，所以没有驱动盘，我大换系统后成脑瘫了——从官网上一一下载后又发现那些rar里面有一坨文件，不知道安哪个…… 火了…… 经过三天昼夜的努力，安了无数必要不必要的文件，终于让他工作正常了……只是变得很怪。悔死了！ 【台机篇】 这个台机有个有点——一键恢复，谢谢联想给菜鸟们一个轻松的方式。以前用他一直很好，这不是临近报志愿了么，我就想把机子弄快点。结果，装完上网，出现了一个怪现象： 拨号上网一段时间后，输入法图标突然变灰，继而任务栏变灰，无法断开网络连接，也无法显示网络连接的状态（一闪即过），ie打开后无法显示页面！重启机器后可以重新拨号上网，但一段时间后又出现同样的状况。 上网查半天，有问题但是没答案……疯了，重装数次都是这样…… 彻底崩溃～！！ 我的神呐，屋漏偏逢连阴雨……","link":"/2009/07/08/cn-20090708/"},{"title":"唉，饶了医院吧","text":"【电脑后续报道】 征得老妈同意，我把台机的主机搬到附院微机室，请专业人员调试了一下午，终于可以健康迎接周日的志愿填报工作了！ 特此感谢老妈，感谢多年来关心我照顾我的兄弟姐妹和亲朋好友，感谢一直以来…… ============================================ 下面进入正题： 修完电脑以后，我从21楼坐电梯下楼，到8楼时，上来几位妇女和一位苍发老人，其中一位妇女上来就破口大骂那个开电梯的临时工：你为啥不停呢刚才！！操你妈的！！你不就是个开电梯的么！！我们没事才不稀罕你个破电梯呢！！我们这儿急着拍片子呢！！操你妈了个B的！！…… 顿时，电梯内传来鄙视目光（主要是医护人员），下梯时还有大夫安慰那个开电梯的工人……看得我可怜的……后来得知呢，在我上电梯前的两次，那个电梯工的确没有在8楼停，但都是因为梯内满员的缘故。 回家的路上，我反复思考这样的问题，为什么社会越来越苛求医院呢，上至大夫领导，下到清洁工电梯工，人们不仅是翻脸不认人，而且常是破口大骂拳脚相加。昨晚回回给我打电话咨询学医的事，我真不好讲，我家里世代从医，到我这里即将终止，都是拜这个社会所赐。我不是在愤世嫉俗，而是在想，为什么院子里和我有类似家庭背景的孩子没有一个愿意从医？不可否认的是，这群孩子都或多或少的受到家长们长日来言谈信息的影响。我也不例外，甚至更深些。毕竟爸爸就曾经被病人告上法庭，尽管胜诉了，但爸爸从此憎恨医生这个职业。 医生，2003年时被大中捧上了天，然而很快就随着SARS的缓解而掉了下去。我有亲戚在纽约当医生，一年30万美金；而在中国呢，大概得十年才能挣到这么多钱。当然，坦率的说，有些医生道德败坏，红包的收入似乎很高，但深究起因，苦读8年的博士医生和技校毕业的蓝领挣同样的工资的确是说不过去的。 只能谈到这里了，很多话不是能在大面上说的，我只是希望中国对待医生、医院能越来越好，而不是破口大骂，包括对工作在医院里的临时工……","link":"/2009/07/09/cn-20090709/"},{"title":"颓废开始了……","text":"报完志愿开始上校内，所以一直没顾上写东西，再加上天气闷热思绪堵塞，彻底变得颓废了。 每天就是去驾校，回家玩电脑，吃饭，睡觉，起床再去驾校……崩溃，甚至好想去图书馆上自习！ 那天跟高尚毓刘家桢他们吃饭，说起来大学是选学校还是选专业，似乎大家更倾向于学校。可是我问了好多大学在校生，都认为到一个好系很重要……麻烦了好几天，觉得自己志愿报亏了。可是又一想，西电的通信工程可是全国第二，比北邮的要好啊，为什么我非得挤破头往北邮冲？况且我进北邮都悬…… 每天似乎都是在重复，真是向往大学生活啊～ 据说西安东西超便宜，旅游地方又多，吃穿都省，就是交通往来麻烦，好像只有一趟火车直达呼市。不过不要紧，我也不是经常回来～ 又闻学通信工程很累很苦……晕，学个轻松的人人都会，毕业出来就是去清华门口卖猪肉了…… 不管怎样吧，总之志愿是报了，录取也定了，想这些也没用，干脆忘了算了。索性颓废到底吧……","link":"/2009/07/19/cn-20090719/"},{"title":"另一座城就是另一种生活","text":"威海的旅行，景区没给我什么更与众不同的印象，倒是这座城市本身，冲击了我这位从草原路过的人。 威海靠近海边，所以城市被海风吹的干净理所当然，但是，这里的海水不像青岛、天津、大连的一样肮脏，而是如同城市的干净。 山东，我是去过不少城市，不过威海给我了释放的空间，比在泰山的感觉还要洒脱。正如这里传统的人。 我在第一天晚上出来溜达，让我意外的是，这个机动车已经用开鲁K9T+牌号的旅游城市，在九点钟就已经安静了，路上人烟稀少，只是海边有些同我一样的人在拍照留念。 另外，这里的交通映射着人们的素质：“请向左看”这四个字随处可见，基本非路口的人行道都会有这样的提醒。在路口的等待区，行人真的是无一例外全部站在区内等待人行信号灯。这里在任何时候都没有如同中山路一般的拥堵。 同样，呼和浩特的人们也不是这样简单的生活……","link":"/2009/08/03/cn-20090803/"},{"title":"出发，从这里消失……","text":"今天中午1:20，希望大家都能抽出时间遥望西南方向的地平线，目送我去西安…… 没有电子设备的一趟征程，十分寂寞。 呵，尽管哥只是个传说。 …… 估计下一篇就是很久以后的事情了，至少不会是明天。 当然，估计以后的一段时间，我自己也不会有经历做这些闲散人士所做的了。 一切一切。 …… 哦，再见，呼和浩特。","link":"/2009/08/21/cn-20090821/"},{"title":"小井沟神奇野炊记","text":"延续我迟到的惯例，这篇日志也迟到的发表了……此事件是昨天发生的，特此声明。 破天荒的我听了两个闹钟的铃声就醒了，大概真的是很兴奋，6：30准时出发，毕竟我野炊还是头一回啊。小河妈妈单位的车送我们去了小井沟——就是我们大家初中军训的地方，请注意，在我们路过机场的瞬间，冉冉轻盈的哼出了一声“我忘带木炭了”。哦亲爱的，没带木炭对于一群将要在荒郊野外游耍吃饭的人来说，意味着什么？！还好的是，在车离我们而去之前，好心司机大叔留给我们一把铲子（这不是好莱坞科幻片的伏笔），我们都不会知道他将在一会的旅途中扮演怎样重要的角色…… 【架势】云晨很好的带了顶帐篷，这对度过中午炎热的时光是很重要的。只是，他不会把帐篷支起来！对于哪一面是外面的问题，我们尝试了很久，终于，云晨求助了场外亲戚——他爸，我们把帐篷支起来了。女生那面，三口锅也风风火火的摆开，两个汤锅和一个烧烤架稳稳的出世了。大概从这一刻起，我们的行动就远离了预订计划。 【火和饭】很高兴的是，以我为先驱的一行人很哈皮的从山腰上砍了不少树枝，此处，铲子上场。关键问题是，有了树枝作燃料是生不起来火的！冉冉在点火时不禁感叹：森林大火是怎么着的啊？！不管怎样吧，我们在11点左右时成功的点着了一个锅。在小范的努力砍柴下，以及首席大厨静的带领中，一锅汤率先出炉！接着，方便面和一系列烤串也横空出世……特别的是，烤串基本都是胡的。 【下午没茶】吃过一顿只能用“死不了人”评价的午饭后，我准备发个状态到校内，才得知此处联通没信号！剩下的我就不说了，记得上次去五一水库回来写过一篇文章，抨击过联通了。。。难耐的中午，我们无聊度过，啊金拿着铁锹（就是那铲子）迎风拍虫，女生堆在帐篷里不知在干什么，我呢在外面和几个打扑克。惬意的时光流过2个小时，在我们动身离开前，把一张纸条留了下来，下次回来，我们要进行寻宝了。走回家的一路上，我们说说笑笑的，看着马和他的近亲驴子叫唤，还有羊群不时经过，不知不觉的就到了高尔夫球场！要知道，我们当时实际走了5.5公里（GOOGLE查得）！ 【没完】等到车来接我们的时候是下午4：45。回到市区，我们决定去阿金家把剩下的材料消灭掉。当然，女生做的饭不论是野外还是厨房，都是那么的难以评价。还好我们定了KFC的外卖。总算是能让体重回到2009年8月7号的水平了。茶话会，我们谈笑风生，年龄要是大些，可以用共享天伦了。最后，我洗的盘子。 今天，阿金要回温州了。不久，我也要踏上大学路了，只是希望我们能像纸条一样留存友情……纸条上，我写了“FRIENDSHIP FOREVER!!!” ……","link":"/2009/08/08/cn-20090808/"},{"title":"西电·第一篇","text":"今天结束了军训，终于有时间来网吧上网了，由于没带什么设备，没办法写图文东西，就瞎扯几句吧。。。 估计大家都看新闻，西安出现甲流了，西电也被隔离。。。晕，我好不容易上了大学，先是21天的变态军训，又是封校，整的我一直在怀疑这是我的大学生活？！ 学校第一印象，就是一个大字，到现在我都还没时间转完整个学校，在校只能在宿舍周围转转不迷路，偶尔看见跳楼塔还能辨认个东南西北。。。这是我现在最大的困难。。。 个人呢，昨天吧，拿到了个人大学的第一本荣誉证书，是军训优秀学员。今天呢，我又当了我们班的班长。。。开头还不错，就是不知道以后的路是不是也是这么顺。。。 西安，这座城市让我迷茫，这些天我就见过两天的太阳，剩下的时间都让我感觉像是在江南。。。现在外面还在下雨。。。 西电管理很严，指导员说大一和大二上不让带电脑，我现在除了手机相机外什么电子设备都没带。。。手机还没带数据线。。。埃，彻底寂寞了。。。 回想刚刚过去的军训，真是留恋颇多，感慨颇多。这必将成为我美好的大学回忆了，而且还是亲身经历，铭心刻骨。。。 就到这里吧，至于军训的文章和学校的文章，等我十一回家以后再写吧。。。 哦，对了，十一我能不能走出这学校还不一定呢啊！","link":"/2009/09/11/cn-20090911/"},{"title":"西电-第一天课","text":"2009-09-14今天很虚幻的戴着口罩开始了大学学习生活,似乎是已经习惯了封闭和隔离,今天过得很简单.上午上英语,老师口语还可以;下午上工程制图,oh my god!这课真要命,我都要睡着了!简直就是复习向量法解立体几何! 哦,原谅我如此简短又潦草的文字,手机上实在是太不方便了~ 2009-09-17我处在这样的环境里!据新华社电卫生部16日通报，截至9月16日，我国内地31个省区市累计报告10221例甲型H1N1流感确诊病例，已治愈6098例，没有因甲型H1N1流感所致的死亡病例。记者16日从陕西省教育部门获悉，截至9月15日，陕西省教育系统已报告甲流确诊病例均发生在西安地区，涉及12所学校，包括大、中、小学以及幼儿园。其中西安文理学院和西安电子科技大学已采取封校措施。据了解，最早发生聚集性疫情确诊病例的西安文理学院，现有全日制在校生近万人，教职工900余人。西安电子科技大学有在校学生一万余名，9月9日发现第一例甲型H1N1流感患者，已累计确诊病例为22例 2009-09-21激动地说!千言万语就一个要求:我 要 进 城!! 2009-09-26［态度］我要说的太多太多了．． 进行现在的汇报先：鄙人正在蹭理学院的计算机课，这算是我来西电的第二次摸电脑－－我是如此可怜的都快忘记电脑是什么样的了！ 最近学校紧张,大家也紧张,我是说紧张十一放假的事.不知道学校最后会不会让我们回呢,我都订好30号的票了,可昨天海棠又贴了通院的要30号注射疫苗…TMD我咋这么背呢!!! 今天属实已经该解除封校了,可西电领导貌似很谨慎,就是不愿意开那扇破门!唉,我要去超市买好多东西呢,真耽误事儿… 两周的封闭让我把学校转的越来越小,现在忽然觉得西电杂这么小呢… 我的电子设备现在也出问题了,相机的数据线没带,手机就更别提了,根本闹不成,LG KG70C怎么长的好看可那么难用啊…后悔ING…我现在也急需处理下我的电子设备的各种…哦,还有MP3,英语可是需要的啊… 恨恨的说,我发现自己又上当了,西电,骗子… 我要说的太多太多了,..","link":"/2009/09/14/cn-20090914/"},{"title":"返巢呢，离巢呢","text":"经过漫长又艰辛的等待与煎熬，终于盼到回家的消息了。不是说我多想家之类，而是我惦记我的各种东西，我的拍子、二胡、读卡器、甚至电脑，还好，这些东西终于要跟我来西安了！ 刚才在抄入党申请书，中途收到导员的短信，说30号请假旷课的人批准离校，但旷课要记录在案，TMD，变向整人么不是！我们之所以要写假条，就是要省去2课时的旷课时间，结果你个猪竟然这么折腾，操！ 不过无论什么都无法抑制我触摸家里电脑的紧迫心理，期待啊期待额！ 不知道回去能在家陪老爸老妈几天。。。估计肯定要回去见见初高中同学呢，哎呀好想念~ 似乎好多人大学都若隐若现了，时常是单线联系，郁闷啊！ 郁闷的还有我的大学生活，怎么这么单调乏味呢。没有什么可以让我课余忙碌的事，就是班里那些琐碎的小事，还有导员“你们明显差12班的班委”的诟骂什么的，闹心啊。。。 好久没正经出校了，结果来西电的第二次出校竟然是来网吧，还不是为了消遣而是为了入党。搞不懂为什么要入党，入党有什么实质性的好处呢？不知道啊，大家都要写申请书，那我也随他们潮算了。 学习上没什么进展。工程制图依然无聊，高数似乎比刚开始好些，可是还是每节课有一半甚至更多听不懂。思修老师说大学能听懂百分之七十以上是一种天才的表现，五十也是很强了。可是我总觉得班里同学都能听懂七十，就我五十，还是四舍五入得到了。。。英语最轻松，209老师似乎也有一定阅历，感觉还是能讲出来些东西的。呵呵，总算还有个可以拿得出手的科目呢。哦，计算机文化也是小CASE~ 细细想，大学的生活就只有工作、学习两大部分果然是单调 我大概是过的糊涂了，现在呢，也不知道我该说是离开我的生活还是该说返回我的生活了。。。","link":"/2009/09/29/cn-20090929/"},{"title":"伤心后，第一次这么成功","text":"最近真是纠结了，总有这样那样的不愉快与我纠缠，还有个学习压得我喘不过气，似乎大学生活让我前所未有的充实，也让我空前绝后的感觉出乎意料。 身为班长，我就是有了一身的事儿，从班级管理到处理新生部的任务再到组织活动，每一项都很繁忙，即使是有两个班长，可是103个人也真的不好管理。而且我还加入了通院团委公关部，又会有很多社会活动等着我做，还有平时我的羽毛球社团，我也很想参与，总之我很忙。。。 可是，忙不是瞎忙，我们昨天的见面会开的很成功，很是不错的～～～我现在就基本忘记了之前的种种不愉快和难过的日子，沉浸在欢乐中了～～","link":"/2009/10/19/cn-20091019/"},{"title":"西电第二篇·考试啦啊啊啊!","text":"还有11天就期中考试了，惆怅时间怎么过的这么快啊，我都还没来得及享受大学生活的舒适惬意呢，就要开始迎接考试了。时间就在我一个又一个的会议中溜走了，唉，现在都不知道自己做的是不是对自己有用。。。 【首当其冲，高数啊】 从第一节课就开始不同程度的犯困，有时候竟然会睡着。。。唉，就这样的一门课让我情何以堪哪！ 现在我彻头彻尾的感受到了天书带给人类的痛苦了。如何来形容呢，就是看着答案都不知道题是怎么做出来的，就是课本上的“由此显然可得……”给我的无尽遐想，甚至就是每天我都不得不随身背着高数游走在学校以便随时有时间研究一下。。。 总之，我对我的高数很迷茫，我在不断的努力，可是方法好像不对，我的进度十分缓慢。。。而且的说，高数像是某某某对我高中没有学好数学的惩罚，我就是学不透彻。郁闷了郁闷！！！ 【稀里糊涂的英语】 英语哪英语，你就给我争口气吧，这里严重的不知道该说什么，好像英语是我唯一的希望了。 【妈呀，工图！】 这是我这辈子学的最郁闷的课了，跟高数有一拼！为什么听的很简单，自己做题就觉得什么都不确定了，唉……好想赶快学完工图然后上机学AUTOCAD啊！！！ 上天保佑我期中考试能顺利通过取得一个好成绩吧！！","link":"/2009/10/29/cn-20091029/"},{"title":"终于能腾出时间写博客了","text":"大学上的累死了。 现在回忆前一阵的工作都模糊了，因为实在是有太多活动要做，有太多事伤心啊气愤啊什么的，而只有太少的时间安排给自己，或者就没什么时间给我，除了工作就是写作业，刚写完就继续去工作，偶然间我才发现我是铁臂阿童木。。。 昨天把这学期最后的一个活动弄完了，终于结束了混乱的生活啊，尤其是28、29、30三天，我真的要崩溃了，谁定的时间啊这是，还让人活不了！！！还好有王璐痴三天陪着，还有应天啊、老大啊、董静和猥琐骜，不安真的要死掉了!!!! 回想一下，其实大家在一起时还挺好玩的。哈哈！！ 属实想想啊，我除了班长就是个公关部，也没什么更多的地方，也不知道哪来这么多事儿。之前的排练舞蹈、选拔主持人都没有占用很多时间啊，班里的包饺子就更是没什么耽误的，真晕。。。难道是天妒英才？！ 另外再加上那个彻底听不懂的C和使劲赶着老师进度的高数一直让我头疼，这日子真没法过了！！比高三还麻烦。有时候就像着离了算了！！甚至就没个像高中语文啊那样的课不听也没关系的课，真奇怪了！！！ 貌似今年是没时间学习了，明天还要进城，这样一算，哈哈，就剩13天就要考试啦！！！！我是不是离挂科又近了呢。。。这次是高数45分还是C呢，期待中。。。","link":"/2009/12/31/cn-20091231/"},{"title":"《積木之屋》 想啊想……","text":"昨天半夜在校內看到分享【積木之屋】，然後睡覺，然後就在床上開始像主人公那樣往前回憶了。。。忙啊忙的一個變態的學期過去了以後，我就一下子投入到頹廢的寒假懷抱了，跟各種朋友啊同學啊出去玩兒，沒有一天沒安排的，在家的話就是上網了，除了上網就是睡覺，吃飯都很少了。很明顯，這就是大學生了。 跟著那個人再往下沉，想到了週六要去的高中，啊，太嚮往回到的地方了，能見到很多喜歡的老師，還有一票神通廣大的朋友，而且能不學高數而是學語文……哈哈，大學就給了我個難以磨滅的淫賤印象~前幾天還看了我們高一時候大慶的視頻，哎呦那個懷念啊，嘖嘖嘖嘖…… 再往痛苦里想，本來是想著寒假去海南玩兒的，結果爺爺跟姥姥都生病了，哎，沒辦法，只能呆在呼市了。更可悲的是世博會的志願者選拔，很久沒消息了，如果不出意外的話，我就是給淘汰了吧？！沒關係，人家博士都跟著在那兒競爭呢，我一個連四級證都沒有的小屁孩兒能跟人家一起面試也夠不錯了……当然啦，我的意思也就是說暑假去上海的事兒也得先放放了…… 然而很不幸，我跟璐哥的內句【遲早是要掛的】特別配，說是期末考試不掛科，好吧，駕校的科三還是給掛了，哦，我的210塊大洋啊，竟然就不明不白的給了內個滿臉橫肉的考官……額，又談到考試了。我以為C語言肯定是最低的一課了，結果啊，我昨天去查分了才看到，我親愛的開卷考試課——MD歷史竟然比C還低，好，我知道我很誠信的，給參考的時候往往會失常…… 剛才我又看見有人分享這個視頻，所以我就又看了一遍，今天和昨天明顯的不同是，今天我一直在看那個胖男人的游泳。今天拿到國航游泳卡了，給我驚到了，竟然是今年6月1號過期，能游50次，好吧，你成心想讓我泡在水裡一個月你直說啊，還變向為我們體育事業做貢獻了啊？！還真不如給我徹徹底底的來個海平面上漲800米，直接將呼和浩特列入沿海開放城市算了，我就天天去游泳！！！ 額，只能想這麼多了，再想就屬於YY範疇了，嘿嘿……","link":"/2010/02/02/cn-20100202/"},{"title":"被痛苦的假期，我","text":"挺好一假期的，开始每天排的都很满，玩儿的很HIGH很尽兴，唉，现在想想都还在笑…… 这个转折来的很突然，也是有预兆的。那晚玩儿完了丢了钱，以为是破财消灾呢，看了不是。爷爷和姥姥都住院了，巧不巧啊！ 违心的我接受了那个包着虚伪理由的请求：成年人了啊，该做点正经事儿了，别每天还在外面瞎跑了行不？ 嗯，好呀！我高兴啊激动啊的答应了，不就是陪床么，又不是陪别的，再说都是老年人了，真的是见一眼少一眼了，况且附院病房里也有电视什么的，也不会很无聊。 好吧，从十号到今天，整整十天了，这十天里我没去跟青游泳，一次也没有，也没跟肉越玩儿三国杀，没跟二狗子她们打麻将，没跟冉冉去滑雪，甚至没心情去买电脑。爸爸妈妈都心情不好，我也不好意思说什么乱七八糟的…… 昨晚我都没床可睡了，跑到奶奶家睡沙发了，躺在空荡荡的客厅里，听着那个破烂摆钟哒哒哒的响，回想着这个假期干了点儿啥，唉，真的想不出来什么特别有意义的。呵，我的青春啊，就这么献给了病房么？ 明天还要去医院，那就再将就着一天吧，后天趁着回学校看老高，我一定要抓紧剩下几天拼命浪费，不能就这么荒了流转！ 呼，别让我再痛苦了，真够操蛋的……","link":"/2010/02/20/cn-20100220/"},{"title":"行了","text":"还有5天就回西安了，奇怪这个假期怎么能如此稀里糊涂的就过去了。 【2】这个不是序号。 回来以后安排最多的就是和高中同学的活动了，吃饭 喝酒 唱歌 滑雪 回学校看老师 去意林玩儿三国杀，一看到你们这票人，我就瞬间和大学里的我不一样了，也许我真的还没准备好重新开始，我还是从前的我，二晨还是从前的二晨，只是大家都不在了…… 一回来就先陪着姑姑玩儿，第一个见的人竟然是来借生物笔记的阿普！！然后那个科三就跟着小杜一起没过，哎我现在还奇怪呢，为啥我俩就练了两把竟然还都要考呢？！不过不要紧，第二天跟二狗高尚毓苏雪蕊玩儿了一天，彻底不记得考试了。滑雪呀我进步挺大的，对不住王悦同学，那个司机就是那么溅，没等上你就闪了，倒是见到的那个二狗还是那么二，高尚毓把姐妹淘挂嘴边，苏雪蕊照镜子照的真猛。 然后见君君，跟肉越孙爷看阿凡达，孙爷眉毛处理的真销魂…… 后来在新校区一下子见了那么多同学，三十多个呢吧，开心了！肉越还是很肉，不过嘘嘘和马天大野猪瘦了，更可怕的是史英竟然胖的超出了尺度！明明是去看老师，结果照了一下午的相，就领了个毕业证，二北跟包蕊照了几张领证的照片，然后大批人马就火速从二中消失了。不过，去吃饭的路上的“东大痔疮”和肉越还真是般配= =，那顿饭也还是记忆犹新的呀！对二狗的炒作太搞了，丝毫不亚于我们对那天那顿莜面的热爱！那个半亩地还真是挺不错的，那天还下雪来着！ 那次跟顾老师和瑞清一起的大型聚餐上，梦洁啊头型衬的脸很大，真的！陕西代表团人数果然众多，力哥着装特别抢眼，从饭店到飚歌的路上总有个鬼影闪烁在我面前呢。唱歌里有个印象就是喝酒了，扬扬狄娜王宏宇，三个人喝高了，然后大家都走了，留下我 二狗 小杜三个等孙爷来打麻将，当时也不知道自己为啥就唱了个《火》，失误了，估计把钱也丢在KTV了，晚上吃饭还巧遇君君他们了，不知道是不是有关系，反正那晚上打麻将我成了炮手，最后发现自己连打的回家的钱都不够了！不过还是高兴！ 二十几号的时侯跟猴子 阿普 王悦去看高老师了，随后还有跟王悦去了两次二中，终于把学校的事情做完了，真烦人！再与大家有关的就是前几天的意林了，乱七八糟的玩儿了一通，见了李大宁，二北那天被孙爷误杀多次，吼吼！不过随后的这几天，大家都开始陆续出发了…… 【3】这个也不是序号。 可惜的是这个假期没有跟初中同学多玩儿，就聚了一次，居然见了三年没看着人样儿的屎来闻！啊金也回来了，京味儿十足啊，还有匀称，找了个呼市的对象都不让我们见见，切~吃完饭唱歌的时候还重温了杨静雅的舞蹈，嘿嘿，同时的何璐跟冉冉跳的可真是。。。 哦，还有一个三年没见的，青煜，跟他滑冰来着，哎，我都不会滑了，这个直接导致我后来就算只有一个人我也得去游回泳，看看我是不是连游泳也忘了~~ 当然了，期间我自己也做了好多事儿，除了陪床占用的时间，我还是做了几件事儿的，但是一个人还是没有跟大家在一起的时候好啊，真好…… 行了，暑假再见吧！","link":"/2010/02/28/cn-20100228/"},{"title":"消沉了最近","text":"期中考试过去后，周围就发生了很多莫名其妙的事。接踵而来的活动数量庞大，质量低下，没有几个我真正想参与的，劳神费力，耽误时间，我一直处在被动沉默中。许多事变得让我忧郁，一背再背的运气，看来今年我真的很不顺利，这让我不得不重新反省自己是不是出了什么原则性的问题。学习工作都不积极，天气总是阴雨，堕落的只想看宠物小精灵……图书馆里经常发呆，不是怀念过去就是憧憬未来，加上周围各种情侣，我稀里糊涂的得出一个结论，赶大一的末班车看来是不太现实了。哦，加油璐哥！你估计有戏……春天到了困得不行，阴雨绵绵困得不行，生活状态困得不行，我看我是困得不行……","link":"/2010/05/17/cn-20100517/"},{"title":"最近比较愁的两件事儿","text":"从这周开始，课就越来越少了，什么意思呢……这意味着，快考试了。从各个方面看，期中考试后的状态都不如之前，什么意思呢……就是说，如果照这样儿继续发展下去，我就有可能又要挂科了。所以，我，要，努力！！！最近比较犯愁的除了学习这事儿，还有一个，就是暑假的安排了，真的很愁……本来的计划是，几个同学去上海玩儿两天，世博会转一天，再去下苏州和周庄。可是，到了订房间的时候，我赫然发现——找不到人跟我一起去！！！原因有，时间不合适、交通不合适、安排不合适、人员不合适等等……在我一再寻求同伴未果的情况下，我沉默了……【所以，要是有打算7月11号到15号在上海玩儿的同学，带上我吧……】P.S.还真是谢谢你们这些在别人博客里打广告的，让我这儿的访问量不知不觉就过了40000。。","link":"/2010/06/05/cn-20100605/"},{"title":"【游记・回忆录一】启程","text":"【写在前面】当时是说好的几个人一起去玩儿的，结果最后种种原因了就成了我一个人的旅行了。应该算是第一次一个人走这么远，而且基本没有父母找人托关系，感觉还是挺好的。这个回忆录啥的东西也不知道以后几天能坚持的写不。反正写点儿算点儿哇。特别特别特别特别感谢二北和君君，尤其二北远程指挥我的行程真好~~照片同步上传中。 【离开西安】除了即将走的伟哥，宿舍里就剩下小鑫鑫啦（哎我忘了让你走的时候给我仙人球浇水了咋办呀，下学期估计又得去买个新的），很是兴奋呢。去了火车站我才得知亲爱的陶睿亭没给我买上票，哎我服了。于是找了个什么主任来着把我弄上车，又找了个任师傅给我补了个卧铺票。哎我感叹了，世界上最牛逼的就是任师傅，以后我也要当任师傅……好像是十五个小时，在贼快系列的火车上无聊，以为Z开头的火车不会像我每次从呼和浩特到西安的草原绿皮一样见车就让呢，结果我错了，我忘了上海有传说的动车组，杯具的晚点了一个小时。不过还算是舒服了，毕竟是睡了一晚上啊。下车赶紧买回家的车票，无奈最近的也要20号，售票姐姐很开心的笑问我要不要，我靠我住如家一天三百多的房租啊我抽风了跟上海在这儿耗着就为了等你呢20号的票啊我！于是果断选择去北京的D，离家进一步算一步吧……退路算是勉强搞定了，接着找我住的地方。哦。真的很艰辛，其实坐一号线一站就到了，结果我走了很久很久，还是没找到，途中还问路了，遇见了北方跟我说过的上海人回答问路的缜密分析，真的是，哎，折服了都。但是最后我还是没找着，没办法竟然打的去了，计价器上写的是行程1.1公里……12块钱……我操！小房子还是很温馨的，不过要2000的押金，只能刷信用卡或者就现金。于是我被逼出去找银行，被逼去找交通银行！！！结果当然是，没找着。所以异地跨行取了两千。我知道我又傻逼了。中午整理了一下，下楼找地方吃午饭，结果不幸的是只有拉面馆儿。好吧我忍了。 【开始吧，上海】第一天是从中午开始的，坐一号线去了人民广场，遗憾的没看见老妈说的很多同性恋，哎。走了一段，去人民公园转了转，发现迷路了，一路的问地铁口的警察，特好，觉得上海人还是挺好的。然后呢，去了上海博物馆。 【第一天，很充实】开始了，上海博物馆。免费，但是排队，当时还下雨的呢，不过想想以后还得去世博会排队呢，就忍了。四层楼，东西挺多的，参观的基本七成外国人。我当时还问一个老汉路，结果人家日语系的。我瞬间崩溃。接着，去城隍庙。原来城隍庙是豫园在上海的土称。公交车上，那个售票员还充当了下导游给大半车的外地人讲了这地方的历史。嘿嘿，挺不错的。城隍庙，我觉得是被现代化了的老上海，虽然是上海老街，但是已经充斥了哈根达斯之类的东西。按照君君的建议吃了那个什么汤包。还有三丝春卷。不小心还吃了小林煎饼，后来知道那不是上海小吃。好甜，但是更可怕的是给我用比手掌还小的碟子吃饭。真、精致？下午五点，豫园关门。之后去外滩。谷歌表示需要一小时路程的，结果我走了半小时，天还没黑就到外滩了。好吧，把观景大道来回走了好几遍，边跟二北君君发短信。沿路的建筑，很有风味。真的是金融公园啊。路北有个陈毅公园，差不多到七点了，天一下就黑了。夜里的外滩还是电视里那样，现代。很美。疯狂乱照一气，沿南京路寻找北方说的食品百货。嗯，二楼的美食广场很好，小杨生煎显然就是下午那个灌汤包被油炸了而已么，不过那个什么老鸭汤还是可以的，肉挺多的，但是我当时很饱了已经，实在吃不进去了。南京路的尽头原来就是人民广场，看地图我才发现走了这么远了都。回头看南京路，竟然没什么韵味，失望。有个百联世茂的楼挺高，仅此而已。从南京东路到南京西路。转弯，看到夜里的上海美术馆和大剧院，很富丽堂皇啊，还有白天看到的那个靠在市政府旁边的城市规划馆，感觉似乎这里就是一座现代都市拥有的气质体现吧。在我进地铁站前，还有一个基督教堂，哦，对了，上海是西化的中国剪影。 7月11号。就是这样。明天会在1933见杨姐，晚上回到如家给妈妈传了照片，结束了，早点休息吧。","link":"/2010/07/18/cn-20100718/"},{"title":"【游记・回忆录二】上海艺术","text":"7月12号。今天是上海的艺术旅行。不是一个人了。杨洋和我约好在海伦路的地铁口见。上海地铁的3、4号线有一部分是重在一起的。我和杨洋很巧，都坐错车了。所以见面时候比约定的时间晚了一会儿。不过这不影响我们在异地相见时的喜悦。 【两个创意空间】海伦路，不远处有上海1933老场坊。北方推荐的。来了才知道原来以前是个屠宰场。这里主要是建筑很有特色，富有异国情调的椎形立柱，曲折盘旋的法式旋梯，外方内圆，廊道盘旋，宛若迷宫，游客不多，摄影爱好者也没怎么见到。这里的酒吧之类很有特色，但是11点才开张营业。大概不到一个小时就可以看完了。其实，还是很失望的。被二北的照片迷惑了。接着去另一个地方，很多人都说不错的田子坊。卢湾区，旅游胜地啊。杨洋说田子坊有南锣鼓巷的感觉。我不知道。这里是弄堂一样的小巷构造。有一栋楼都是绘画艺术，真实深刻，尤其是油画，说不出的震撼，当然也比较恶心。很多休闲酒吧咖啡厅，还有些陶瓷艺术、创意小店。但是创意的都很平庸，就是全国都有的创意。个人比较喜欢这里，但是没有上海特色的艺术品，能让我带走的，还是挺遗憾的。 【一个仰望的海岸】一直在浦西玩儿，从田子坊出来，我们打算去浦东那边。陆家嘴，新开了苹果旗舰店。比昨天更接近这个东方明珠，但是因为大雾天气，没有上塔参观。没关系，先去苹果玩儿玩儿。真的很好的一家店，不多说，强烈推荐。陆家嘴其实就是看高楼的地方。震旦、花旗、平安等等一大堆的高楼。嗯，还有正大。正大广场。我记得北方跟我说要我来这儿干个什么来着。后来联系，他说是吃汉堡王和一茶一坐。可是我们中午在吉野家真的吃很饱了。就直奔一茶一坐了。很丢人，直接一人要了一个红豆沙冰，后来才知道，那个东西是两人份的。这也直接导致我们接下来的TOILET TRIP。沿着滨江大道，我们轮渡回浦西。都觉得莫名的想上厕所。呵呵，继续的沿着外滩走了一遍，个人总觉得东方明珠的塔和会展中心的两个地球从某个角度看特别像什么淫秽的东西。不管了，在和平饭店对面找到了厕所。解决后，奔向五角场。 【商圈 和一所同济】五角场商圈，据说是比较便宜的地方了。很囧很纠结的总算给妈妈买了条裙子当礼物。体会着每个城市最彰显拜金的购物场，大概除了更多的品牌，更高的价格，也没什么让游客感叹的了。然而，这里的地铁十号线晚上七点最后一班。我出来的时候已经八点了。送走杨洋，我坐了公交车前往八号线，提前在四平路下车了，因为看到了同济大学的楼。呵呵，晚上了，虽然不能进去参观，但是还是觉得这所学校的建筑，从外面看去，有作为建筑老大哥的风范。 九点回到住所，还没吃饭呢。呵呵，解决一下背包里的吃的吧。明天，13号，还要去上海贝尔公司参观呢。今天早点睡吧，或者，沿着楼下小路转转……","link":"/2010/07/19/cn-20100719/"},{"title":"【游记・回忆录三】现代的贝尔，古典的朱家角","text":"今天上午约好陶睿亭去贝尔参观。【上海贝尔，不是我的菜】先得说明这个贝尔，全名是上海贝尔阿尔卡特股份有限公司，具体的百度百科里好像有介绍。总之是跟我学的通信工程比较相关的一个公司。接待我们的是一个大四的实习生，挺漂亮的一姑娘，嘿嘿。原本我们被安排跟非洲的一个石油公司一起进展厅的，结果我俩实在不能忍受全英语的专业天书，所以就让一个中国姐姐给我们讲了讲通信有关的东西。那些产品啊什么的根本听不懂，反正瞎聊。原来这是浙大通信毕业的研究生，也是个性女人，各种用GPhone鄙视苹果什么的，挺有意思……中午去他们的VIP餐厅吃自助本帮菜。简直就是酱油摧残！不多说了，没什么好印象。然后跟陶子拜拜了，前往朱家角。【朱家角，让人心醉的地方】无奈的从九号线的第二站坐到倒数第二站。在松江下车。等了四十分钟，终于坐上了松朱线。途径了欢乐谷，尽管停了一阵儿，但是没进去。好吧，60块钱的门票特别让我心动！哎，可是时间紧迫啊，只能下次了。到了朱家角都四点半了好像。我要坐六点半的高速回上海的。所以给我的时间就两个小时。好在朱家角不是很大，我还是转完了。以前见过的水乡的图片，哈哈，真的跟眼前一样！灰白色的建筑顶着江南特色的瓦片，门前的潺水轻抚着石台和旁边的竹排，安静闲逸。走过一段古色古香的石板路，一路的小店都独具特色。特有的肉粽子风味十足，飘着香气，渐渐消失在路的尽头。那里是放生桥，从上面可以更加深刻的领略江南细腻的姿态。沿着河边一路的走，一座座桥似乎诉说着小镇过去的一段段柔情岁月。有一家外国人常在的咖啡店，放着轻缓的慢摇和爵士，伴随流水声按摩着这里每个人的心灵。回来的路上还走过了一座叫城隍廊桥的桥，脑海里漂浮着卡其社的廊桥遗梦，韵味十足。一路的奔波，累了。在高速上很快睡去了。回到沪上已经天黑了。又是华灯初上的地方。休息了。设计好下一站的行程。明天要去世博会呢！2010.7.13","link":"/2010/07/20/cn-20100720/"},{"title":"【游记・回忆录四】哎、本性难移、、","text":"7.14 今天安排的是去世博会。未遂。因为闹钟定的太早寡人没听见。起床看表已经快九点了。约好的猴子估计都快进园了。不过这个、很符合我风格。嗯。我喜欢。【七宝】反正闲着也是闲着。今天就彻底感受下小上海。上午先去七宝。这是昨天的美女姐姐告诉我的地方。小吃很多。这里其实也是类似江南小镇的地方，七宝老街。但是比朱家角差远了。但是小吃真的很便宜。臭豆腐酱香饼奶油煎饼竹筒粽子小烧烤。一切服务我的肚子。【淮海路】然后联系了杨洋再次见面。直接从西南方回到卢湾区。拿着地图，以为淮海路很长很特色呢，毕竟以前是传说中很出名的霞飞路啊。结果，失望了。唯一让我惊吓的就是那个芭比娃娃全球旗舰店。粉红的我都恶心。【新天地】君君说这里好玩。然后我们到了发现是城市里的花园吧。石库门在这里，但是我找了很久都没发现什么大建筑，然后还花了20块钱进去一个旅游的地方，老上海的房子，结果除了送我一个 I❤SH ，就没啥了。后来还去了什么中共一大会址，那里竟然有暑实盖章的地方，我郁闷。红色之旅一向不感冒，迅速闪人。【外白渡桥】当时下雨了。我俩跑回淮海路一个城市志愿者点问路：“那个麻烦问下我现在能去哪儿玩儿呢？”嗯，我觉得这么问挺好的，结果答复很混乱。算了。直接去那个外白渡桥吧。这桥我一直不知道有什么历史，后来杨洋跟我说，这桥就是情深深雨蒙蒙里，赵薇跳河时候在的桥。石化。后来看了一座座桥，一直走到四川路。我极为兴奋的见着一对儿G！哈哈！不过好像长的一般。【馒头】明天一定要起来不然门票都作废了，晚上早点儿回去。我大概八点就回到酒店了。到楼下，走了一段，跟上海老大妈一样买了俩馒头、一袋子熟食和小菜，一些小吃的回去。门锁好衣服换好，电脑打开电视开开，一切妥当，吃饭――哦，没筷子！手抓饭后，洗个澡睡觉。哦，跟前台说一声明天叫我起床。我可得、一定要起来啊！ *允许我这么流水的写了今天。连续写文章真的好麻烦。","link":"/2010/07/22/cn-20100722/"},{"title":"【游记・回忆录五】我的世博一日游","text":"毕竟是两天功课的结果。我觉得自己的这个一天的世博会玩儿的还是很开心的。7.15早上也不用六点去排队赶预约。我快八点了才到，去三号口。城市实践区在那儿。进去了九点半了吧。然后去拿城市名片册。开始在E区边参观边盖章（纯粹的为了盖章其实挺无聊的，去个联合馆基本就二三十个了，还是细细看完一个馆比较值得）。其实有的城市馆还是很不错的，我就特别喜欢米纳，有讲解的，而且很独特，比西安强多了！大概十二点不到，去KFC吃口饭（便宜啊），那个时候城市馆感兴趣的差不多都看完了，反正我是把几个感兴趣的国内国外的都看了，还去了几个没兴趣但不得不去的馆，基本都不用排队的。吃完饭一点了去城市广场把中国馆的预约券拿到，上午的工作就结束了。中午时光，我本来打算去通信馆的，结果排队人太多了！D区企业馆只好放弃了。不过这时、千万别轮渡过河，太费时间啦，我就耽误了半小时，最后还是坐车去的演艺大厅那儿。下午交给中国馆吧，排队就一小时。进去转弯又两个小时。差不多就六点了。在A区再看看，有兴趣可以进去几个馆，没兴趣就直接B区就好了。不过我当时已经挺累了，中国馆真的很费体力。在A区转完我就不想去B区了，直接坐车去了C，找欧洲馆。上午的盖章依然有效。比如西班牙盖够三个西班牙城市就可以绿色通道进，不过政策会经常变，去之前一定要去官网看看有没有新信息。从晚上七点到九点，这就是一天最黄金的时段了，这段时间可以看至少四个大馆呢。但是要注意、一定要注意每个馆闭馆时间不同啊。我当时先去了西班牙，然后意大利，结果再去德国的时候就闭馆了，我唯一可惜的地方啊！！！只好提前去俄罗斯了。等晚上十点多基本都闭馆了，这时候开始疯狂拍照吧，夜景很美。哦这就是我的世博一日游啦。明天起程前往北京！","link":"/2010/07/25/cn-20100725/"},{"title":"13班，我要为你唱支歌","text":"写给主题班会用的诗朗诵～～～～～～～～～～～～ 13班，我要为你唱支歌 既然是百合，我就要绽放既然是白杨，我就要成栋梁那么既然要同乘13班这条大船乘风破浪就让我们一起为之扬帆起航 不必担心你的渺小你的热情会让冰冷的冬天燃烧当你代表13班站在高高的领奖台谁还会称你是微不足道 不必担心你做不好你的参与已经为整个班级添色不少当你为13班举起那金色的奖杯你一定会高唱――我要飞得更高 一个人可以凭毅力远行千里一个人也可以靠勇气等高万丈然而就像一棵树撑不起林海就像一滴水汇不成汪洋一个人的力量再大再强也不及103颗心凝聚产生的光芒103种智慧激起的风浪因为团结就是力量 13班，让我为你唱支歌唱出你的坚定、团结、温馨、向上13班，让我为你唱支歌唱出我的爱心、奉献、热情、梦想！","link":"/2010/10/29/cn-20101029/"},{"title":"好久没写东西了","text":"上次还是在从上海回来时候写的，现在呢，我都已经在西安过冬了…… 刚才又给包心心写了个东西，君君看了竟然说想起高中了，难道一年多我文风没用丝毫变化？！当然更重要的是我发现自己好久都没写博了…… 这学期课程明显紧了，可我还跟以前一样各种玩儿什么的。工作重心都从班里偏到团委的联谊上去了，结果最后联谊还没成。失败之余觉得自己一无所成。前几天跟几个班委出去吃饭唱歌，聊天时候说我这学期都沉默了，其实不是，只是我做的没给大家看罢了。 期中之前都没复习什么，考试一塌糊涂，现在又为四级突击，发现自己真的不想再学习了，兴趣都在实践方面。没办法，自己都知道即使大学毕业了还要读研呢，可是就是静不下来啊。 昨晚开会听璇姐讲的东西，似乎终于意识到这点了，今天下午上机完没回宿舍，去C楼自习。不过效率很低。感觉自己生物钟就晚上发亮呢，适合晚上睡觉半夜起来学习。不过学校不提供通宵自习室。当然，有我也不去。 现在周末都熬夜，玩儿，看linux的东西，其实根本不懂原理，自己瞎胡闹的，但是就热衷了。 回想啊，这学期都没什么亮点出现，其实从开学我就一直不顺了。先是带状疱疹耽误我很多事，然后十一拉肚子又没出去好好玩儿一下，导致后面我总是不安心，考试也是一贯很差。还好生日的时候有部里的一帮人，玩儿的还热闹。可是，没亮点。 现在还有五十天放假，期间只有圣诞元旦和期末考试。璇姐说，做事要有死的心。希望看到成绩时我还活着吧。","link":"/2010/12/05/cn-20101205/"},{"title":"写篇没几个字的文章记录轰轰烈烈的开始","text":"我承认自己现在很懒，离上一篇文章已经有十个月了，不过欣喜的看到访问量都快七万了，哎呀妈呀以前写的作文还真有市场。 之前很多次写了几句存在草稿里，年初想写、去完汉中想写、期末考试结束了想写、上完新东方想写，但最后写了几句还是删掉了，但这次不同，面对毕业我不知道何去何从，终于稀里糊涂的做了一个艰难的决定（请允许我3Q吧），成、与不成，听天由命，我也hold不住。 我又不是官二代富二代，想要一个理想的明天只能靠自己。前几天去某通信运营商采访，关于毕业生进该企业的具体情况人事部主任始终闪烁其词，但总归就一个意思，不是重金砸关系的您就出门右转去卖路由器去吧。暑假回来又听说高中同学去MIT的事儿，想想自己一直觉得那个75度仰望的地方其实离自己并不远，感到自己上了大学以后不思进取的态度和混吃等死的状态极其2B，但谁没有一两年低迷颓废啃屎玩儿蛋的岁月？！还是那句话，过去的就让他随风过去好了，既然现在已经没有青春可以荒废，倒不如重新步入正轨。 好就这样吧，不多说，明天就回学校了，收拾行李去。 勉。","link":"/2011/08/19/cn-20110819/"},{"title":"只剩一门了","text":"考完无线通信。现在只剩信息论了。想起还有不到十天就回家了，一点也高兴不起来啊。面对TOEFL和GRE只感觉浑身无力，一切若不是有资本主义的诱惑我恐怕就死在十三朝古都了。 这学期忙忙碌碌，虽然不是浑浑噩噩但也并非风尘仆仆。为了潦倒的GPA赶场子选了一大堆课，同时，做了一大堆小抄来得不属于良心的高分，想想以前的六七十分活的多潇洒，看看自己现在的八九十实在只能呵呵一笑。 洗洗睡了明天下午去工程设计答辩。","link":"/2012/06/27/cn-20120627/"},{"title":"换了个新版空间，马克一下","text":"在频频颠覆我的人生的大三下学期这一时刻，忙里偷闲的上个网更新个空间还是很有必要。 最近的状态呢简言之就是好死不如赖活着。西安的天气哎哟就跟女人善变的心一样说翻脸就翻脸，于是我很没有抵抗力的感冒了。 自从决定要为了GPA而努力刷分数以来，一波又一波的选修课和实验高潮已经完全让我沦丧。就在我写这段话的同时其实我也在为三个小时后的通信网络实验发愁。加之技术经济学这样不痛不痒的课也要交个大作业、安卓课交作品的日子竟然排在考试周内以及对VHDL无限的未知导致的恐惧都让我开始有慢性自杀的冲动。 刚才去人人把空间的链接和导入设置都停掉了。因为总是在寻觅一个可以让我放肆破口大骂那谁谁谁的地方而总是还没等我骂呢朋友们就先到了的情况频频发生在诸如微博这样的地方（这句话到底是有没有语病啊我读了几遍最终还是懒得改了），于是索性去豆瓣上但是又苦于那里终究不是个释怀的地方所以还是兜圈子一样的回博客来了。 天气预报说明天晴天呢。现在外面还是稀里哗啦的雨声。 来访人数 89757。。。（林俊杰的声音出现了） 写实验报告去了。自此僵尸了一段时间的博客又“死去活来”了。","link":"/2012/05/24/cn-20120524/"},{"title":"关于托福。以及自己的阶段性总结","text":"7.6：随着信息论试卷的提交，大三结束了。大三可以说是我大学三年里最用工的一年了，尽管我依然可以做的更好。出成绩后，感觉平心而论算是客观，没有出乎意料，也的确是情理之中；也就是说成绩一般。但是对我来说再小的进步也值得肯定吧。离当初的规划只差0.5分，但是的确，没人能一帆风顺，总在点滴的不如意里前行也不是很沮丧的事。 7.9：一切开始围绕一个叫“托福”的考试进行，早上7点跟爸爸出发顺路送我到图书馆，在满都海公园背一个小时单词，等着图书馆开馆，和高中的好友们一起学习；中午去爸爸单位休息一会儿，下午继续去图书馆奋斗到晚上7点。这样的日子持续了45天左右，直到8.25的考试。考完以后我很难过，阅读和听力没有答好，尤其是听力，我的强项没有为我争取提分，甚至现在我都觉得听力是我的拉分项了。虽然还没出成绩，但是我有预感肯定是要再考一次了。就这样，计划往往赶不上变化，我都不知道该如何安排未来的两个月的申请了。 8.25：在分数还没出来之前，我还能勉强高兴十天，在这几天里，我要对申请流程和一些必要的文书进行了解和准备了，而且还需要计划出一个月的时间留给GRE和该死的TOEFL。事实上我一直都怀着侥幸的心理希望托福一次成功，现在亦是如此。但每次想到当时的听力场景，就让我清醒的认识到自己的可悲。无论怎样，日子都会过去，谁也无法抉择明天该做什么。或者可能有这样的人，但不是我。 9.2：改签了2号回学校的车票，回去了可能就是做实习，然后备考吧。硬着头皮的做一些不得不做的东西。其实之前我总是幻想自己进了TOP10或者一些美好的东西，而最近呢，我都甚至犹豫当自己收到一信箱的拒信时该何去何从。或许只有船到桥头时才会自然直吧。 最后记录一句在微博上看到的话，很平凡，但是对我很重要： 走过的路，不要再走；错过的人，别再回头。","link":"/2012/08/28/cn-20120828/"},{"title":"路标","text":"曾经嗤之以鼻的以为，这条路无非是GT和money，走着走着，身边形形色色的人都放弃了，而坚持下来的朋友给了曾经的我一记响亮的耳光。有前辈告诉我，申请的过程远比他的结果更能赋予你宝贵的东西，现在我体会到了，道路艰辛却耐人寻味。 有些事，必须经历；有些选择，不得不面对。贪心的希望足够充分的掌握所有可能，但常常急促的容不得你考虑多想，这就是现实。多年前锋芒毕露的那个我是该多么鄙视几年后优柔寡断的这个自己，若干年后的那个自己又该如何看待如今的选择？生命中，也许会有无数的牵绊让自己掀起波澜，但是生活终究会归于平静，浮华过后，一切看起来都是那么微不足道，然而身在其中，却又觉得每一步都很沉重。-27, Sept. 这个世界总是这样的不符合我们的梦想，只是有些人可以学会遗忘，所以那些梦想往往无疾而终，就像风中打开的花朵；而有些人却选择了坚持。你知道，自己这样醉生梦死般地付出，或许就是为了有一天，能够站在坚实的大地上，仰望自己的梦想，以及自己选择的生活。– 琦叔 现在我明白了，人生不必时时聪明，有时要学会承受痛苦。有些话，适合烂在心里，有些痛苦，适合无声无息的忘记。当经历过，你成长了，自己知道就好。很多改变，不需要你自己说，别人会看得到。","link":"/2012/10/22/cn-20121022/"},{"title":"等待","text":"昨天又结束了一次考验，现在处于焦急的等待中。 总体感觉比第一次好很多啊，只是听力有两篇囧了，作文不太自信啊。不知道破百有望没有。 总是在一项伟大的工程开始时铆足了劲儿，号称把一切都赌上来用生命诠释，可时间这把杀猪刀总是更锋利，禁不起凌迟的大批人马都摔死了，只有从一而终的少数能成功的尝到胜利的滋味。而我，总是在无限接近于品尝时平衡不了心态，摔死。 不过这次应该不会，因为助跑的时间实在是太短，还没等我落地呢就撞线了。所以现在我要做的就是祈祷裁判看在我死相很难看的份上赏我个面子。真讽刺。 其实这篇文章没什么营养，纯粹就是为了纪念我的二战。哈哈。 抄来一句话： In order to succeed, your desire for success should be greater than your fear of failure！ ps. 好像自从换了新版空间，访问量变得好少啊，以前一天几十，现在变成十几。","link":"/2012/09/24/cn-20120924/"},{"title":"不停的更新着的路标","text":"出于种种不能自圆其说但却总是感觉必要的原因，我记录如下的文字而始于隐私的权限，也许以后会公开吧，也许永远也不会。 Oct. 28/ 0:45 过 去的一段时间里完成了文书的准备工作，这是艰巨的却也充满挑战。从始至终没有被逼迫、没有紧张感、也没有哪个时刻灵光一闪，但还是完成了。并且在刚刚过去 的12小时内提交了人生中的第一份申请，University of Colorado at Boulder，不过一切并不是顺利，推荐人没有收到推荐 信，给小秘发邮件结果小秘出差了要29号回来，上网找解决办法也无果而终，MyCU的账户还没有激活，一切问题堆积到现在还没有解决，不过明天应该会有个 答复。另外明天要联系快递公司，看看能不能周一来取邮件；把第一批需要寄送的学校整理出来，按照寄送五天计算，在未来五天里要完成至少三所学校的申请，这 就意味着还要完成三篇文书修改，任重道远啊！ Oct. 29/ 12:40 昨天把 十四个学校的网申都做了，可以发送的十个学校的推荐信都寄出去了，收到了C老师和Y老师的转发邮件，并且提交了。看来网推还是很方便的，而且像 embark系统的更方便推荐人操作。但是我还没有联系快递公司，因为一来不同学校的要求我还没有查清，不知道哪些学校还需要寄送除transcript 以外的材料，二来我对CV总感觉不是十分自信，还想加些别的实验什么的。说起实验，今天去通信网络实验了，接下来的三周有的忙了啊，六个实验以及报告，更 动摇了我对CV的信心。再一个，CUB还没有发出推荐信邀请，我很心急啊！按理说Adam晚上就该回来了，赶快回复我邮件吧！看是让我纸推还是再发一次推 荐信请求邮件呢！好的，今天争取改出三篇PS来，把其他学校的资料查清楚！周三打算去交大取托福成绩单，顺便把CUB的材料先寄出去吧，总拖着也不是个事 儿啊…… Oct. 31/ 19:05 效率略低啊，PS一篇都没改，不过CUB的 问题解决了，原来他家系统有点反应迟钝的。C和Y老师的推荐信都提交完了，昨天给G老师打电话，他说最近较忙，让我发地址给他他转发给我填，但是现在我也 还没收到呢……待会儿再给他发个短信吧，纠结，这么频繁找人家算不算是push啊……因为实验的缘故，做晚被耽误了，毕竟组里的人都要靠我写报告，讽刺。 今天中午帮李桦查了些学校代码，自己也熟悉了G成绩寄送的流程，把CUB的GRE成绩寄出去了，25刀。接着整理了下学校名单，在Umass和 Rutgers中徘徊着还没有定下来……还替陶子去做了实验，又花了140大洋邮寄成绩单和在读证明。目前进展还勉强算是顺利，待会儿把Drexel的 PS改出来发给小秘，看看G老师能转发来邮件不，RL不要再让我操心了就好。还有，在地里认识了几个人，感觉要不要把CV在改一改，课外活动的篇幅再缩减 些，腾出来给科研，把实验啊什么的都算成科研？明天就是11月的开始了，1118的T还没有考位，也不算万事顺利啊，到底要不要给T账户里打钱也是个问 题，一会儿再查一查托福送分的细节吧。明天没有实验，争取把NCSU和Rutgers的PS做出来（咦，这是要放弃Umass么），把CV敲定了，至于 USC的PS还是等3号听完宣讲会再说吧。 Nov. 2/ 19:40 计划一天一 变啊。G老师的推荐信链接转发过来了，但是缺了四所学校的，而且好几个学校已经存在G老师的账号了，还要发改密码的邮件……本来就是很忙的老师，这更加耽 误进程了啊……好在Cornell和USC的PS我改出来了，待会儿把Drexel的做出来，寄出去，说起这个学校，Adisi没听说过，我就囧了，他同 样不知道WPI。不管了，牛人不关注这些低档次的啦！Cornell就差G老师的推荐信了，USC等明天听完宣讲就提交了。这几天效率太低，没干什么事情 啊都，下午还去打篮球了，唯一完整的结束了的就只有CUB。明天上午看看推荐信查查考位就过去了，下午去听宣讲（在轻工啊，好远），晚上把USC办妥了， 再把NCSU的PS做出来。周日要把Rutgers和UCI的给办了，还要打出来一晚上的时间写实验报告。唉，现在我还没有托福考位，属实是各种拖沓的已 经动摇了我的考试决心了。希望最近的RP能赐我一个西安的考位吧，内蒙的我也忍了……！ Nov. 4/ 0:55 小 兴奋啊，听完USC宣讲，忽然觉得自己希望很大啊，所以回宿舍乐呵呵的把USC提交了，明天看看怎么提交多份program呢，把EE general也 报了（但是貌似要重新提交推荐信，唉，大工程，不过RL好像是optional的），顺便把Drexel和USC的GT送出去，因为晚上和班里几个飞友吃 金汉斯（逼哥152+164啊请客有没有！）所以NCSU的PS木有改出来，只是帮李桦看了看essay，给C老师写了一份评教资料，说实话，我真适合学 文呢（潜台词是我不适合学理吧）。明天还要改出两份PS（目测是NCSU和Rutgers），把实验报告做出来，上午去把实习证明打出来。哦，对了，上午 我无敌的母亲大人报了1130的托福加场，我计划在1110前结束申请并正式进入托福备考模式中来，为了回家考完就不来学校，还要各种准备，全部要在10 号前结束。接下来的这周又有的忙了。没办法，贴上一句邓布利多的话：决定我们成为什么样人的，不是我们的能力，而是我们的选择。所以说，既然选择了艰辛的这条路，就不要奢望轻松的品尝胜利的果实了。 Nov. 5/ 11:40 这 几天好冷，申请的几所学校也都没有消息，真让人着急。昨天把NCSU提交了，寄出去了四个学校的G成绩，待会儿把T的也寄出去。勉强凑数了实验报告，主要 因为昨天受刺激了。微博上无意中关注了刘韧William老师，昨天发现这是个神，新东方托福听力老师，同性恋，今年暑假从北外毕业，现在在Upenn读 PhD，重点是92年出生。彻底毁三观了，92年，自愧不如的极其严重啊！不奢求，但向他学习！！待会儿把Cornell的PS给他帮我看看吧。今天晚上 要把Rutgers和UCI的网申提交了，把托福的资料重拾起来，Wil说了“很简单”，就告诉自己很简单啊，什么破百之类的，不要给自己划线了，我的目 标就是全对！！虽说是天寒地冻，但是自己要鸡血满盈才行！！把时间利用最大化，不要再拖延、没效率、嗜睡了，口口声声说的拼一拼在哪里，就是最后一仗 了！！今天就贴一句Wil的话：所谓成长，就是逼着你一个人，踉踉跄跄的受伤，跌跌撞撞的坚强。另外祝妈妈生日快乐，人生中帮助我最大的人。 Nov. 7/ 19:55 到 现在为止申请了八所学校了，分别是Boulder, Drexel, UTD, USC, NCSU, UCI, Rutgers, ASU。明天或者后 天把WPI和TAMU申请完，把成绩单寄出去，就相当于彻底结束第一阶段的申请工作了吧。基本把想去的都做完了，除了Cornell，我在等Wil修改的 文书，顺便缓几天让G老师转发推荐信，唉，大牛老师就是忙啊，转发了六个学校的，剩下的就不管我了……这两天天气很冷，但是内心各种躁动，一会儿是激动的 想申请疙瘩啊UCLA的，一会儿又怕UTD不能保底想试试NYU-Poly，这也算是DIY之flexible的弊端了吧，定不下来啊！但是时间已经很少 很少了，离预计的十号就差两天了，马上要调整状态进入疯狂的托福生死战模式了！我幻想着这次考的105+什么的，争取寒假可以到新东方当助教之类，毕竟渣 打的冬令营比较短而且我也不一定可以被录取啊……利用这样的休假，要争取锻炼自己，而不是睡大觉！！待会儿把研讨课的论文做出来，明天后天争取各赶制出两 份实验报告，就算完结了离校前的准备工作了，计划一定要丰满一点了，尽管知道自己relax惯了很可能完成不来，但是不逼迫自己intense一下的话这 辈子我都要死在时间面前了，所以为了白日梦的实现，FIGHT！！！ Nov. 15/ 21:55 好 几天没有更新状态了，因为没什么进展，而且马上就要迎来跟ETS的最后一次会面了，毕竟要准备准备。现在的申请状况是，一共申请了十所学校了，除了刚刚结 束的WPI和TAMU还没寄材料，剩下的八所都已经结束申请了（有些学校的T没寄，等1210出分）。G老师还是没有给我补上前几个学校的推荐信，我伤 了，看来要给他打电话才行了。今天有朋友得知我要下周走了，中午请我跟菜逼们吃饭，很感动。但是慷慨陈词还是留到后面再说，现在抓紧时间看T才是正经事。 这周要把单词看完，周末联系导员签提前离校单，下周二看看还需要改研讨课作业不，但愿不需要。实验抱大腿了，实习也waive了，课设拜托舍友，限选看天 命吧……就这么风尘仆仆的准备走了，感觉提前到来的毕业一样，虽然还是夹杂着种种的不确定。待会儿把联系小秘的邮件一发，看看单词，就这么结束了一天。 1130，要破百啊！最后留下一句刚才填WPI网申时写的话，也是GRE红宝List40我的札记：Nobody can go back and start a new beginning, but anyone can start now and make a new ending. 没 有人可以回到过去重新开始，但谁都可以从现在开始，书写一个全然不同的结局。 Nov. 22/ 18:20 First of all, happy Thanksgiving Day! 汇 报一下，申请进度目前是：Boulder completed, Drexel/T, UTD, USC, NCSU, UCI /T, Rutgers, ASU/T, WPI/T, TAMU/T, Poly/mail。其中UTD,USC,NCSU是还没有在网上更新，实际上 我材料已经寄全了，而Rutgers还差G的推荐信（啊哈，就在我写这段文字的时候，收到邮件了，谢谢: )），Poly是刚刚临时加上的，没时间邮寄 了，回家弄吧。是的，回家弄吧，为了提前离校，我还折腾了两次，第一次去找梁书记请假没批，第二次又去找李院长，才成功的。Anyway，明天下午的火车 我就要回家了，这几天学习劲头不足，可能跟回家有关吧，嗨，说白了就是没什么冲劲儿了，但是强忍着也要考完！论坛里已经开始报AD，一大片的UTD，所以 下午我也火急火燎的把T寄了，95也不在乎了，想想自己何苦呢，早点寄去说不定现在也是结束三无的人了呢……刚才下载了1130的小马机经，准备剩下时间 就是他了，一会儿吃完饭去收拾收拾行李，明天上午背背单词就要离开学校了，这两天降温，树叶飘了一地，有时候一个人走在上面，红的黄的绿的，略伤感。然而 想起前途未卜的将来，也就顾不上矫情了。看过Coldplay Live 2012后这几天又变成之前yellow时期疯狂迷恋CM的脑残了。今天没什么 留下的话，留下一首歌，感谢发生在我身上和身边的一切，火鸡节愉快： Nov. 27/ 20:50 Happy Birthday! 回 家已经四天了，每天在看小马机经，今天争取把一级重点看完吧。每天效率低到爆啊，这还想不想上100了到底。有几天没上网了，刚才去地里看了下，当然也是 因为感恩节美国放假，也没必要刷邮箱查状态，发现Upenn今天发了一批Rej和少量AD啊。当然了，我肯定是被淹没在大神里的一分子所以没有申他家，但 是其中一个人说道某些专业课的成绩低会影响录取。我一下被吓坏了。想到自己大三里虽然只有一门60+的，可是是DSP啊，作为我申请方向的主打课程，我隐 隐的感觉这是死穴啊！不管了，最近一切以托福为重，不要让短板太多啊！时间紧任务重，嗯，就说这么几句吧。祝顺，好运，中机经，拿高分！ Dec. 09/ 22:50 原来考完托福三战我没在这里记录啊，现在补上，其实马上也出分了，呵呵。 三 战机经彻底没中，刚开始考的时候心感觉都要跳出来了，虽然是三战但依旧紧张的一逼。整体感觉阅读还不错，答完还检查了一下，改了一道题，28？听力不是很 给力，开始还跟住了，但是后面还是有些没听清，注意力不集中实在是很严重的问题，但是也比二战强，高估一点25？口语是最可惜的，感觉答的不好，跟第一次 有一拼了，尤其是第三题前面沉默了好几秒，第四题还有一句话没说完，就算20吧。写作也差强人意，独立写作还不错，综合写作听力不是听得很清楚，导致写作 时点抓得不够精确，第一点基本没抓到啊，第二点和第三点也都多少有些细节没有说，可能是fair了，就按24算吧。这加起来97，总之上一百感觉又是困难 重重了。哎。但求口语写作给力点吧，期待成绩。 再说下申请进度吧，多个学校坐等托福成绩了，Rutgers依旧显示没收到成绩单，NCSU 依旧显示没有GT，邮件也各种不回复了，捉鸡了。推荐信差G老师四封，Y老师一封了。剩下也没什么了，十五个学校吧暂时，其实还想再加几所，最近在看着。 属实近期很低效率，基本没做什么，文书也是改了一半罢工了。一直安慰大家不要慌，其实自己也很浮躁，希望UTD赶快给我一个AD吧，嘿嘿！ Dec. 18/ 21:50 最近效率太低了，每天混吃等死的状态实在是让自己都嫌弃了。趁今天日子特殊（MY FIRST AD! YEAH!），要改头换面了啊！ 先来说下托福吧，很不完美的跟ETS告别了，27+23+23+25，差两分上百，很可惜，但是也没办法了，硬着头皮的申请吧！也怪自己的不努力吧，总是寄希望于运气，却不知实力的重要性。再次马克一句，机经也许是解药，也可能是毒药。 再 说今天刷出来的首个AD，来自UTD。当时只选了这一所保底的学校，poly都是最后临时加上的。我在选校上还是很稳当的，我所谓的保底就是录取可能大于 80%的那种，所以其实自己并不很惊喜。只是让我安心，最近很多事不顺，但终于还是按照我的想象来走了，希望能一直走下去。 最后记录一下申 请状态。提交的学校里除了Cornell差GT和G老师的RL没有收到外都齐活了。USC和poly一直是submitted，也不知道是几个意 思；Rutgers小秘说收到我成绩单了，但系统依旧显示没收到，他家都快发录取了吧还这德行，也不知道是几个意思；Drexel系统一直进不去，但是托 福应该是收到了吧，不知道是几个意思；NCSU和WPI是completed，算不算在审了呢，不知道是几个意 思；TAMU, Boulder, ASU, UCI是在审状态，祝好运吧！现在要加紧工作量把Rochester和UCSD申请完啊，R大的essay 和SD的SOP都让我头疼，还有一个迟迟犹豫不决的UCSC要做，任重道远啊。 Dec. 28/ 11:10 今天进行了第一次公司级面试，新东方助教。感觉自己很水，一直以为是中文介绍，可是 进去直接说英文介绍，我瞎了，没准备啊，现场把准备好的中文翻译成英文的了，不知道过不过得去啊；但是后面考官问我薪资方面的时候我说 I can even be a volunteer，他们应该不会拒绝一个免费劳力吧？！Anyway，过去了，不再想。记上tips：面试带笔，带简历。 几 天的犹豫终于让我放弃UCSC，转申了哥大。昨天把哥大已经提交了，今天晚上要把UCSD提交了，另外再申请一个USC的项目。目前所做的还差UCSD的 网申，USC的网申，哥大的一封推荐信和R大的一封推荐信。今天先把前两个做完！另外还要给李宁看下PS，2012就快要结束了，期待新的开始吧！ Jan. 09/ 15:50 转眼已经跨年了。2012真的是发生了太多太多，最近的这段时间也一定会让我此生难忘。 先 说申请进展，UCSD申请完了，还差T没收到；USC申请了两个项目；目前只差一封Rochester的推荐信，因为老师收不到，小秘让老师直接发推荐信 给她然后给我更新，所以目前来看，我的所有工作算是正式结束了。当然，还是需要每天看看状态，毕竟像USC之类的学校需要一直盯着。现在回头看看，觉得自 己的第一版PS真的写的不好，如白开水一样没什么特色，但是也没办法，当时也没有突如其来的项目要做，也没想到这么多点，交了就交了吧，希望 Columbia和UCSD给力啊，然而实在力不从心，硬件有缺陷是致命伤。现在自己再纠结都没用了，顺其自然吧。 新东方那头，一直不给我 打电话，很担心自己工作不了多久就要回学校了。7号那天阴差阳错的去面试了，本来依然是他们的初试，但是我收到短信通知了，很奇怪。跟人力的老师聊了聊， 他们说我初试已经过了，推荐我去国外考试部做助教，但是那头的人的选拔标准可能不同，会直接跟我电话联系，但迄今没有。让我喜出望外的是人力老师问我愿不 愿意毕业后回呼市工作，因为他们有意让我在新东方工作！哈哈，虽然婉拒了他们，但是心里还是很开心，自己的渣成绩都被看上了，还被夸口语不错，真心是不知 道到底是自己水平提高了还是他们标准比较低，或者仅仅是恭维而已（最后这个可能性应该九成吧）。Anyway，还是很开心啦！希望最近再来个AD告诉我自 己的DIY还是没有错的。 Jan. 10/ 15:42 不得不很快的更新一下自己的状态了，首先是G老师超级nice的帮我发了推荐信，现在所有能做的材料就都到齐了。其次是新东方的复试，主考是胡楠老师，下面记录一下今天上午的面试。 十 点万达校区，但是因为等不上车加之开始走错了门，导致我迟到了五分钟，败笔一。除了我，都是女生，好在自己带了中英简历，但还是最后一个面试的人。进去后 共有五个老师，我问胡楠站在前面可以吗，他说坐那，于是我很随意的坐在了吧台椅子上（后来胡楠说这是败笔二，因为一上午的人里只有我面试坐着，但他喜欢随 意的人，说我情商不高，不过工科男可以理解），开始一段英文自我介绍，然后是唇枪舌战了。一开始就问我为什么迟到了，我说对不起不应该我也不愿解释，但后 来还是解释了下，他反问我自己说不解释了但怎么又解释了呢？我答自己做错的事的确没必要解释，但老师给我这个解释的机会所以我还是如实的说了。接着问了些 背景的问题，得知我八月就留学后，他说这次他们招募助教的主要原因是为了培养春季上岗的教师的，而我八月就要走了，对他来说是很大的损失，所以希望我能理 解他不能提供我这一职位的原因，并表示以我的条件如果我在北京的话他肯定会录取我做兼职助教的，但呼和浩特新东方现在的情况比较特殊，需要招募长期可以工 作的人。但是他提供了我一个做lecture的机会，让我15号前准备三份ppt分别介绍GT和留学申请的部分并邮件给他，可以有偿让我做高校巡讲。最 后，我问了他关于自己面试表现的问题，各位老师的评价还是让我很开心的，当然我也得到了两条很重要的信息，一是自己的讲话声音可能不够响亮，说明自己气场 还是不够；二是自己的形体姿势要注意，可能坐姿、一举一动都要表现的很漂亮才行，在这方面我可能并没有注意。 总结一下，结果不是自己想象的 那么轻松简单，一来自己不是很确定自己能够hold住一个lecture（当然，这个机会也十分难得，我知道他们不一定会让我来做宣讲的，但是在准备的过 程中我也可以学习很多吧），二来毕竟自己应聘的职位被拒绝了，虽然是客观原因，但还是不免失落吧。不过老师们对我的表现还是很满意，态度很好、背景突出、 个性鲜明，我还是很高兴听到这样的评价的。 下面我就要在三天里做出三份ppt发给他了，这大概就是我这周的主旋律了吧。希望自己能通过这次的面试锻炼自己吧，因为以后毕业了还要去企业面试的，做足功课还是很有必要的。 Jan. 22/ 11:56此 时此刻正在呼和浩特新东方万达校区的910教室，以助教的身份旁听6500词汇寒假班。说来神奇，18号晚上近十二点，接到胡楠老师的电话，说19号上午 7：30到国外考试部开会，做助教。自从那次面试后，我以为自己与新东方缘分尽了呢，尽管当时还在准备讲座，但是直到现在我内心依然不很愿意做这件事，一 来准备很麻烦，二来我也有些胆怯。说说这几天的工作吧，19号上午开始接词汇班，小班教学，只有13个学生，老师也只有一位，所以很好管理。主管 胡楠是个tough guy，要求很严格，不过很锻炼人，另一位助理老师秦楠就和蔼很多，另外还有其他几位跟我相似的助教，但是不同的是他们都愿长期留在 这里，只有我很快就要离开了。每天的任务，很早的来教室，签到发材料、维护教室，如果有作业还要判作业（但都兰老师自己也是兼职教师，跟我相处的非常好， 所以我还没遇到答疑或者判作业的工作），课上做记录每天晚上要写报告给主管。除此之外，我还要继续做讲座的工作，初步定于春节后做几次，讲之前还要先给主 管等人讲。一谈到这里，我就很紧张，不知道是什么规模，是就在万达做（我很希望在这里，不要太大的地方）还是去高校呢？我从没做过这样公开的讲座啊，慢慢 来好吗，不要揠苗助长啊…… Jan. 25/ 2:05 昨天结束了自己跟的词汇课，可以暂时休息几天了，但是还要继续做讲座的准备，年后注定要做了。刚才写了汇报，贴到这里： 完整的一套课程结束了，是时候总结一下六天24小时的感受。下面的文字，我没有刻意写自己学到了什么，也没有描绘未来的雄心，在各种不同形式的报告里，因为个人思维，我偏爱回忆动机和利益。什 么是助教，他是做什么的？回答“签到发材料”的人应该可以回家了，这个满足提问者好奇和回答者经历的答案仅仅停留在工作的表面，因为他甚至无法解释为什么 不雇一个人专职做这些工作，这样更专业更高效；说是“听课、分析、写报告”的助教至少是尽职尽责，他们明白自省的重要并做的对得起自己的一天，只是他们偶 尔忘了自己为什么来到新东方；要我说，助教就是“坐在一边看自己讲课时的影子”，欣赏自己的好，模仿下来，观察自己的不足，私下弥补，毕竟助教迟早会成为 老师，至少在他们心里是这样。当听到transform，我更希望接下来能听到transfer, transparent和变形金刚的段子，但 是很遗憾，没出现。这时我要做的就是记下来，终有一天我会需要他。而我却听到了uniform和multiform，这种我从未具备的新颖也要记下，因为 我会把他做的更好。大学，学知识，学做人，都是在学思维，助教所培养的正是一种欣赏的思维，但是一种批判式的欣赏。或许还不仅仅如此，但我能理解到的只到这层，然而人的成长就是不断犯错、不断推翻、不断疑问和不断重建的事实和因果，所以六天告诉我，如何欣赏别人，就要如何要求自己。 Feb. 16/ 17:37 又好久没来更新了。自上次后又发生了一些事情。 一月29日，我在新东方做了第一次讲座，之前的两天准备特别的仓促，因为突如其来的时间安排让我没什么准备的就上场了，之前也只是给几个老师试讲了两三遍就上台了，但是最后的效果还是很不错的，哈哈。老师说我很有表现力，小高兴一下。 二 月8日，收到了Rutgers的录取通知，又是一阵窃喜，至少不用担心去UTD, WPI, poly和Drexel了，现在就期盼 NCSU, Rochester和那几个梦校了，TAMU, USC, UCSD, Columbia, Cornell。希望不要止步罗格斯，当然我也 做好了被各位拒了的可能。 11号我和老妈回集宁看姥爷，今天才回来，盼着回学校前能再收到几个学校的录取通知啊！好运！ Feb. 23/ 18:32 上次还说着不担心去WPI了，人家就给我来AD了，在2月19号。 另外NYU-poly今天也说三月一号开始发放录取通知。 现在又有了新的担心啊，担心者有这些低端学校录取我，我真正向往的几所都把我拒掉。唉，人就是贪得无厌。 明天是正月十五元宵节，也是我要回学校的日子。这些天我一直心情不好，虽然不是立刻要出国，但是这次离开总觉得格外不舍，毕竟在家呆了三个月了，再独立的孩子也难免思乡。这几天我就开始安排回西安的行程了，力争回去以后让自己特别忙碌，不要给自己想家想父母的机会。 前两天翻看小时候的照片，看到自己和爸爸妈妈的合照，不免一声叹息，两位老人辛苦的二十年换来的就是儿行千里的一纸通知书吗？说白了，自己在外不想念父母， 而是惦记父母，担心他们是不是吃的不好，为我省钱，是不是心情不好，因为想念我而过的不开心。时常有视频段子来讲空巢老人的孤独生活，我坚信自己的父母不 会这样，但，凭什么？ 决定留学前我就知道迟早会有一天让我眼眶湿润，周遭的留学生也何尝不是经历过或正在经历这样的痛苦？只是有些事，情非得已。 Mar. 2/ 13:32 这几天的消息还相当令我振奋。连续收到Cornell, ASU和NYU-Poly的录取，其中NYU还给了2500刀/学期的小奖。这里当时我用来完整人生的Cornell竟然给我录取了我真的很惊讶。但是现在问题又来了，去还是不去？这个MEng的九个月项目对我来说压力应该很大，这几天在 coursera上学DSP都觉得吃力，想来去那里肯定是更艰苦的，但是毕竟又是常春藤，高排名高就业以及宽松的选课环境都很吸引我，纠结。我想 UCSD, USC, Columbia都与他是一个级别的选择吧，甚至如果UCI, TAMU来了我都需要考虑考虑呢。当然，这几所中还会有哪个录取我 呢？ BTW，我还是打算把这篇拖沓的记录公开了，没原因。 Mar. 29/ 23:40 好久没来更新，期间收到了Drexel ($4000 scholarship), Rochester (30% tuition waive)和USC的录取，以及NCSU和Boulder的据信。现在一直纠结去USC还是Cornell呢，舍不得加州又放不下ivy，但是还是倾向于去Cornell吧，莫纠结。跟Boulder的小秘Adam聊得很愉快，他建议我联系当地在读生问问情况，是个好主意。前段时间去西洽会志愿者面试，昨天收到通知告诉我被录取，4.5-4.9连续做五天，看来旅游的计划泡汤了，老胡还说跟我去敦煌的，没戏了。最近这两天消化不良，胃肠炎了，担心周日能不能健康的去参加USC的welcome event啊…… 已经Decline了UTD, WPI, NYU-POLY, Rochester，过几天把ASU, Drexel和Rutgers也回绝掉吧，为在waiting list上的同学们做贡献，也希望剩下的UCSD, Columbia, TAMU和UCI能给我一个美好的结束，尽管TAMU和UCI我已经不再考虑了。睡觉了，晚安。 Apr. 5/ 15:06 从USC的welcome event回来，收到Columbia的据信，综合与Viterbi副院长的聊天内容，决定接受cornell的录取。为了九个月的学习，看来是要提前准备些什么了。申请了学校的宿舍，不知道能不能成功，看了看机票，也不确定什么时候飞过去，占坑费也还没寄，等节后寄过去吧。 本来5-9这五天是我做西洽会志愿者的日子，结果昨晚突然收到短信说西电的志愿者活动被取消了，又是什么商业内幕之类的，枉费我没有去敦煌玩而腾出时间做志愿者了，这几天突然闲下来还真不知道干什么了。毕设雏形也差不多出来了，有点小懒惰不想再做了。 Apr. 20/ 14:39 自从接受了cornell的录取，接连收到的全是据信，UCI和TAMU都拒了，现在坐等UCSD的据信来结束今年的申请吧。 这几天跟李桦定了房子，还没签合同，机票暂时定不下来时间，竟然还有一种可能是七月走然后先去芝加哥端盘子。好吧，反正效率低下的康村到现在都还没寄出来I20，我急什么。 毕设虽然还有待改进，但是已经先行进入写论文的阶段了，快快的结束吧，好浮躁。","link":"/2013/03/02/cn-20130302/"},{"title":"毕业季","text":"一直有答辩一事牵绊着，觉得大四下学期也过的很快。直到昨天答辩完，一连和两批人喝了个够，自己突然觉得分外的孤单了。 人总是在最热闹的时候觉得寂寞，在最欢笑的瞬间感到悲伤。虽然有很多朋友左右相伴，而终究各自有各自的路，迟早是渐行渐远。 不想了，黑夜使然，明早，找点事干，一闲下来总是胡思乱想，晚安。","link":"/2013/06/11/cn-20130611/"},{"title":"很久以后，终于又听到深夜敲击键盘的声音","text":"不是说coding到深夜，尽管事实的确是到了深夜，但键盘声来自写日志。 来村里将近两个月，说没有不习惯没有不适应肯定是哄鬼的话，但是生活还是一如既往的过着。朋友认识了不少，喝酒也喝到吐过，以为没什么大不了，直到一个个due的接连出现，终于让我认清了操蛋的现实。 之前就听说了Cornell的高压，偏僻、寒冷、潮湿、阴郁的环境加上push的课程，最近真的感受到了。开学第三周就已经让我过的非常狼狈，自己又很倔强的同时选了CS的两大神课，一道题coding三天能做出来就很谢谢银河系了，不少人已经drop到只剩两门课的程度，还好终究有小伙伴们跟我一起挺着，没日没夜的学习，虽然能力不及学霸但态度远超学神。加之career fair很狗屎的收到interview并不出所料的被虐出翔、申请director的项目并遭遇发好人卡的苦情戏，一系列打击接踵而至让我想摔键盘。于是就在我受到刺激并鸡血满盈准备发奋的时候，几个professor把一大波due和prelim甩了我一脸，呵呵。 跟几个也从国内来的朋友聊天，都说如果现在在国内，一定是翘着二郎腿过日子，完全想不通自己为什么花钱来受洋罪。但背后我想大家都是愿意接受辛苦的新生活的，毕竟这挑战前所未有，很有幸能经历过。 还有命中注定的那个她，我每天基本都跟女生一起吃饭，你也不快点出现来阻止我吗。 想说很多，但9.30一个due，10.3一个due，10.8一个due，10.9一个due，10.10还有两个prelim，真的不能再让我想死更多，时间恐怕不够，于是请等我10号活过来吧。 晚安，绮色佳。","link":"/2013/09/27/cn-20130927/"},{"title":"写在被虐过后","text":"终于到了十一月，以为十月是整个学期里最忙最紧due最多考试最密集的一段时间，但是我错了。这里没有最，只有一直。习惯了工作-休息-休息-工作的模式，换到了工作-工作-工作的环境里一下子觉得好累，日子难熬。 拿到一个on-site interview去California的机会，没有think through就同意了，心想免费吃住游不去白不去，期待着加州阳光海滩的去了，结果被彻底虐出翔的灰溜溜的回来了，才让我知道了自己真的和学CS的学生差距好大，太大了，一下子让我认清了自己，原来我的位置不过是最底层挣扎的一份子而已。 作业分数一直不高，考试成绩也难以启齿，各种厌学情绪无论如何也控制不住，开始怀疑和焦虑，开始讨厌编程序，开始想念国内的日子，开始嘲笑过去自己幼稚的想法，开始消极的否定一切，甚至开始变得沉默和不自信，变得不像自己。我相信这些都是要经历的，挺过去就会好，但正在经历的，还是无法让我把心态放平静。 幸运的是一直都有很多不错的机会摆在我面前，不幸的是我总是不当回事。似乎转专业失败了，这条路依然不适合我，事实上我感到所有技术都不适合我，我可以做，但我不会在有空的时候多看他们一眼，是不讨厌，而不是喜欢。差别是很大的。现在，我又回到原点，开始重新规划自己的未来，还来得及吗，好像已经晚了。 找自己，找自己的兴趣在哪里，在哪里。 喜欢随性的读杂志，喜欢了解每个领域的事，我可以在reading room读一天书，但不会读同一本书，因为我只是想要了解，我不想掌握。这是多可悲的一个处境，这是注定没前途没未来的人所处的位置，我想我需要逃避，我试着找出一个突破口让自己冲出去再钻进来，但我一直没有找到。现在，在没有找到之前，就先不安分的读这份看起来不太难看的领域，这过程是痛苦的，但痛苦本身就是成长。 下学期不想过分逼自己了，这学期咬牙坚持把需要做的事都尽量做好，需要准备的工作都准备妥当，刷题，练习，下学期选些商学院的课充实自己吧。现在找一个盼头很重要，看着下学期计划的课表，又能会心的笑了。 老大不小了，不要还这么随性的玩了，是时候静下心来做些乏味的事了。","link":"/2013/11/03/cn-20131103/"},{"title":"不懂(懂了)","text":"康村的春天在淅淅沥沥中终于到了，启动发春模式。 今天才知道大学两个好朋友在一起了，开始还以为是开玩笑的，后来知道是真的了，为他们高兴啊！ 最近这些事儿一件一件的又把我推向深深的思考，这位同学，下周还有那么多due啊presentation啊final什么的都不管了么！？ 有个跟我认识七八年的女生，周围的朋友我的她的，都觉得我俩应该在一起，但是我一直当她是好朋友，从来没往别的方面去想，她也一直让我给她介绍对象什么的。结果周围的朋友已经看不下去了，她几个闺蜜把我叫出来让我跟她表白。这剧情还能再狗血点吗？！ 不懂，我该跟她交往么？可是我对她好像没感觉吧，这算是日久生情么，别坑爹了好吗，这事儿一不小心就是友尽好吗。算了反正我几个月就离开这地方了，如果我们真的应该在一起，我还会想她的吧，让时间来说话吧。 啪，删你一巴掌。哇，真的不是做梦啊，这不是连续剧吗，我勒个去！！！ —让时间检验的分割线— 反复思索check多次，确定这是一种友情。不要问我怎么确定的，just feeling。","link":"/2014/05/04/cn-20140504/"},{"title":"写在五月","text":"// 本文逼格颇高，熟人请慎入// 说我逗比的，快command+w// 最后一次机会了，小心眼瞎 怎么说起。以为一年的生活，不会给我什么感情，但真的到了这天，却格外泛滥。去年八月来到康村，新鲜，明媚，好奇着当前，期待着未来。那个张晨没有烦恼，没有压力。转眼一年过去，许多事情摆在眼前，现在的我已经不再去回忆，不是不愿，而是不敢。这一年经历太多，学会很多也放弃很多，明白了一些事，认识了一些人。庆幸的是有ECE的小伙伴们一直和我在一起，屌丝楼也吃得很嗨，赶due也不再艰难。有爱的室友和CIPA的姑娘们，感谢一路的陪伴，在我心里总有你们的位置。还有机缘巧合或是阴差阳错认识的朋友们，我珍惜每一个你，相识本来就是一种命中注定。暑假来临，是时候各奔东西，人们说无论在哪里，有缘都会相聚。我信。康村的五月太美，还好我遇见你。","link":"/2014/05/31/cn-20140531/"},{"title":"记下那些刷题的日子","text":"朋友们都不在身边了，喜欢热闹的人，有时不得不学会安静的一个人，慢慢思考，慢慢成长。6月2号到7月27号（暂定），56个日子，写下自己是如何度过的，毕竟，也是对自己意义不凡的一段时光。 GitHub(InterviewPreparation) 6.2: 开始刷题啦，兴奋起来！ 6.3: 刷完前120题，要花两天时间按类型整理下才行啊，DP总是想不到，还有系列问题要系统的再过一遍才行。 6.4: 想起来记录的时候，leetcode已经39题了，以为一天可以刷十题，但是自制力为零的我怎么可能做得到，每天做完一题就要玩点别的。杨旸说我还要不要找工作了呀，唉，是该紧张起来了才对。 6.5: 跟老马一起刷题压力好大。 6.6: 今天效率还不错哦，终于一天刷两位数题目了，顺便投了bb和g家以及ccnet上几个小公司，还阴差阳错的约了一家公司下周一(6.9)的writing test。保持这个节奏，这周结束要刷过一半！ 6.7: 感觉渐渐有点手感了，有些题有后续，在做后续时看看前面的题，很快能想起来，说明还是有效果，积累经验吧。 6.8: 果然周期来了，这两天效率都不高啊，晚上跟郝大厨聊天聊了很久，也没怎么刷题了，一半的目标看来是要靠过两天来弥补了。 6.9: 今天中午做了mercury的笔试，然后一小时后就收到说安排第二轮电面了，好诡异。安排到了周五下午，随意吧，反正八成也不去。另外被bb秒据了，难道是我没换邮箱的缘故吗？总之又投了slb，hp，citi，avaya，yodle。还是有面试的压力刷题快，嗯。 6.13: 好几天没更新了，主要是没做几道题啊，昨天做了一系列ksum的题，今天本来说要把permutation &amp; combination的专题做完，结果下午面试完看了荷兰对西班牙的比赛，就到晚上了。这周结束前能不能刷破100题啊，感觉悬了呢！ 6.15: 这个周末荒废了我真的不相信啊，各种补交看视频就是没刷题。算了就当是张弛有度的弛好了。目标这周结束前刷完所有题。 6.22: 传说中的计划赶不上变化。20号拿到mercury的offer让26号前给回复，我准备拖两周吧。昨天帮朋友们搬家，今天yy回NYC实习了，我先这周突破100题吧，晚上回去还要再投简历呢，这计划晚了一周了，唉。 6.24: 这几天每天只能做不到五题，感觉刷题已经到瓶颈了，要突破啊。今天做recover BST那题，看到code ganker的博客上对inorder的讲解，说到了Morris的方法，唉，觉得道路还是很长，一个遍历要掌握三种方法，还是需要多练习才行。 7.31: 看到这里终于突出了我拖延及虎头蛇尾的毛病。 是时候做个小结了。七月初刷完leetcode（确切说是还有十几题，都是DP的问题，我一时还不想碰触），然后进入了一段瓶颈，说是刷第二遍，其实根本没怎么刷，每天吃吃喝喝看看视频玩玩游戏就过去了，心有时莫名的慌张，只好把注意力集中到这些开心的事上，说起来很不应该，但也没办法，我想还是我更喜欢有人陪着的感觉吧。拿到的OSIsoft面完也跪了，Bloomberg给了个邮件后一直不理我，mercury一直催我offer的事，我最终还是decline了。今天定了在san jose的房子，机票买的19号，这周日搬家到hasbrouck朋友家暂住两周，然后就走了。说起来也是很无奈多过兴奋吧。之前以为两个月可以搞定，现在看来三个月都不太够了，要九月份才能了吧。在村里舒适恬淡的日子让我的节奏一慢再慢，希望、也不得不逼我到加州新环境去最后一搏了。 8.25: 又过了一个月了，过去发生了不少事，也没来得及写下来。8月3号从lansing搬家到hasbrouck，那天下雨了，但是叫的几个朋友都特别尽力帮忙搬家，真的心里谢谢他们。在hasbrouck的那些天，每天走路上下学，每天平淡的过去，中间面试了healthtap和bloomberg，很幸运都进入了onsite。19号的飞机，结果17号那天室友做饭把手烫伤了，get到在美帝看病就医的新技能。终于要走了，奔赴加州也是一路不顺，19号那天底特律机场雷雨，航空管制导致航班延误数小时，我只能改签到20号，20号那天也是一路心惊胆战，毕竟转机时间只有50分钟，好在最后都赶上了，深夜在SJC接我的朋友辛苦你了，回头一定请你！21号一早醒来去给房东交了房租，家都没回直奔menlo park去见好基友们。在基友家住了两天，23号下午回到家，开始准备即将到来的两个onsite。25号，也就是今天，面试了healthtap，一个startup，感觉一般吧，有些题没答上来，尤其是最后一轮，感觉那个engineer跟我没什么聊的，我写代码的时候他一直玩手机，在这里真是要默默给三哥比个中指，唉，求三哥放过我吧。周五有bloomberg的面试，希望那时候的自己准备的更充分些，周四就要飞回纽约了，今天忽然觉得自己就是地球上微不足道的渺小，四处漂泊却不知道图个什么，也许稍微给我一个喘息的机会我就会想些有的没的，还是忙点好。 这个月29号，纽约见。 9.1: 很难过，只剩最后一个月了，可手上忽然一个面试都没有了，紧张。Bloomberg很可惜第二轮那道题没做出来，今天透彻的把它研究清楚了，其实一点也不难，唉，可惜，太可惜了。不过没办法，生活不可能一直称心如意，之前种种幻想一下子成了泡影，可是时间又不停的走着，根本容不得我伤心了，今天是Labor Day，明天要重新开始一天8小时的刷题，做最后一轮冲刺了，投了十几家公司，把leetcode归类做完，并且再刷一遍，还有programmingInterview里的基础知识也要每天看些，给自己十天时间，冲刺吧！暂时理我的只有遥不可及的YouTube，尽管知道很难，但是也要硬着头皮上去一战了，别想着不劳而获了孩子，这个世界终究是公平的。 9.8: 从昨天开始单曲循环华晨宇的烟火里的尘埃，真是自己最近孤独难过的写照啊妈的。这周四是Google(Youtube)的电面，周五是Facebook的电面。从上周起，我已经改变了单纯刷面试题刷Leetcode的模式，改为系统的开始看一些基础概念，ProgrammingInterview上的Java问题，还有之前Yahoo的面试官给我说的Exposed那本书，辅以做题，主要是培养思路，有了思路毕竟面对什么问题都不会放空了。FB难得的机会，跟HR聊的时候感觉很好，希望这次可以成功。 9.26: 昨天刚刚FB onsite回来，不知道结果如何，不过之前google的电面是跪了，也不知道为何。来说说昨天的面试吧，总体感觉比之前的好，但还是有不满意的地方。以为都是leetcode的题，但结果没有一道是上面的，中间还加了一个午饭，神奇！三轮面试其实就只问了三道题，这是我最担心的地方，第一轮culture fit还好，第二轮一道string的题目，因为c++和java的一点区别，导致我根本没有往split()那方面去想，所以最后还差几行代码没写完，但是总体思路是好的。第三轮也是一道string的题目，但是比较复杂，我也是在几个hints下给出了思路，但是最后也还差几行代码没写完，总体上思路都出来了，但是给我写代码的时间不多，导致总是差一点，我个人认为这是比较大的问题，但不知道面试官怎么看。整体上我一直保持着思考也时刻跟他们进行着沟通，但多少还是有些问题不满意，唉，但愿这次可以成功吧。 11.22: 真的是过了好久，终于又有了更新的动力。自从FB以后，接连面试了几个公司（TripAdvisor, Indeed, Zillow, Mitchell, ChartBoost, etc.），都无疾而终了，只有epic一家完整的面试完了，几小时前刚从麦迪逊回来，希望下周收到好消息吧。已经松懈了两周了，身体也有点不太舒服，可能是要感冒了，但是为了面试还是挺住了，现在面试结束，估计下周要生病了，唉。最近搞一搞个人网页的东西，准备为自己的生日买一个域名了，哈哈。 12.03: 凌晨近三点，不想睡。昨天中午收到EPIC的电话说我被拒了。不敢相信，这家我十拿九稳的公司把我拒了，我已经一个月没有刷题没有投简历了，已经认定就以这家为起点了，结果竟然是这样。很不解、难过、可惜，但是冷静下来也是没办法，只能忍痛接受了。今天好多朋友都来安慰我，表面上我是无所谓，但实际上还是心里不是滋味的，太突然太匆忙，也是失望太大。赶紧找朋友refer我，也要开始尽快把身份办了，再静下心来努力一搏，也不想是不是最后一搏了，放手去刷题、去恶补、去看面经吧，谁都不容易，不要总是怪自己的运气不好了，实力到了可以克服一切的，加油吧！ 2015 1.1: 一转眼半年过去了，2014最后一个面试是Amazon莫名其妙的电面，我能说什么呢。呵呵。还有，加油吧小伙子，无论如何，坚！持！住！ 3.25: 好久没来更新，这里算是总结。小伙伴们的到来终于让我有动力好好找工作了，之后面试了Yelp，电面跪了，然后参加了伯克利的招聘会，一个转折点。按照清单我投了约一百家公司，收到了十几个面试，一轮轮的面试、收拒信、再准备，终于在三月初拿到了两个onsite并顺利拿到offer。之后还有Booking，Oracle等公司的面试，但是我已经准备好转换角色，真的走向职场接触社会了。希望未来一切顺利。 后记 现在回头想想，这段经历弥足珍贵，不仅是知识上的丰富，在锻炼毅力上和心态调整上都让我提升不少。每个人都有大起大落，这才配得上跌宕人生。我想这段回忆就是我攀上新高峰的开始，祝福自己！","link":"/2014/06/05/cn-20140605/"},{"title":"26","text":"2016即将过去了，这一年可能是我最近几年里最平淡最失败的一年。去年底给自己许下的两件事都没有完成，回过头来都不太记得这一年发生过什么。可能会宽慰自己说什么事都要厚积薄发，但真的到自己身上却又切实的感到害怕了。 好的一面是，这一年换了组，做了很有意思的项目，学到了很多东西，特别感谢Yeongmi让我了解了许多知识。中途搬了家，有一个新环境让自己更好的工作学习，同时享受生活。挖了象拔蚌，重游太浩湖，去了拉斯维加斯，这一年没怎么出门有点可惜了，很多时间都强行放松自己看综艺看视频。交了些新同事新朋友，周末时不时出来坐坐，寂寞倒是没有，但也没去年那么充实。 不好的一面是，一些同事离职了有些难过，毕竟日子不会一直安稳下去。以为进入了人生的新阶段，但原来每个阶段都要努力去维持。说实话我有时勤奋有时很懒，但总的来看懒的时候多，如果没有什么刺激我恐怕会一直懒惰下去。所以到了现在，年底了，意识到这一年浑浑噩噩的即将结束，才忽然紧张害怕起来，紧张时间不多了还有很多想做而没做的事，害怕明年会像今年一样在低气压里徘徊。 最近又有些让人失落的消息，尽管已经有了心理建设但还是不怎么开心，内心安慰自己没什么特别的你只是个凡人，一定会经历高峰和坠落，把事情看简单点不要有什么压力，轻松的心态通常都会有意想不到的效果。下周回国尽量调整自己，探亲叙友，来年精神饱满的完成今年未完成的心愿！","link":"/2016/12/02/cn-20161202/"},{"title":"四年，流走的不是青春，而是梦","text":"我一直相信人生可以不那么严肃，但是泪点再高人再傻逼再不要脸，也逃不过离别时感情像大姨妈一样喷涌的疼痛。送书天送锤子送泉哥送何宇，每次透过窗看到他们坐上车我鼻子就酸了，这一次，终于轮到了我。看着推了四年的屎黄色的宿舍门，竟然舍不得这一抹肮脏的屎黄色。收拾着行李，越往下整理越有热泪盈眶的冲动，曾经一段段经历慢慢抽插着我的记忆，知道路还是要走，但就是断不了牵挂的念头。 你说大学不要碌碌无为，我用四年的班长经历填满了课外的记忆；你说学生还是要以学业为重，我修222个学分给你一个满意的成绩；你说工作忙别忘了舍友，我们在城墙上骑车跳舞一起欢聚；你说小社会也要有人际关系，认识团委的你们和菜团的他们真的很幸福。大学四年，不只是独立，还是成长，更是追求，追求一个自信的我，一个能够大声说出“不被人嘲笑的梦想就不值得去追求”的我。而这一切，全都要感谢你们。 523，单纯又复杂的几个人，谢谢你们的照顾和包容。老大为我们营造了欢乐有爱的10号楼第二干净宿舍，你的奶永远存在我婶婶的脑海里。况鑫的橘黄色小内裤也会和你的踏实一起被贴上“好基友一辈子”的标签，但愿我的第一次做媒能够天长地久。那个浴室歌王康师傅，你大概会成为我日后给朋友们讲述大鸡小鸡典故的男主角吧。还有对面的你们，伟哥估计是知道我最多私事的人了，我会一直留着脑子里那个“听闻转换器”的，有了妹子也别忘了兄弟啊。锤子的通院第一腿很可能是我日后的择偶标准了，当然你的身高就算了吧，有机会再去给你做饭好了。聘惠，该怎么说，你就是个传说，人生赢家，我词穷了。523是我这辈子第一个宿舍，你们是最棒的！ 13，庞大但友善的一群人，谢谢你们的理解和支持。我，泉哥，王燕婷，注定是一组奇葩的配合，因为有你们俩，才有13班的众多活动，才有一个有条不紊的13班，等我回来，咱们一定要聚聚，一定。感谢其他各位班委和宿舍长的配合，尤其是璐哥，陈博，刘邠岑，刘航和彬哥，那段艰难的岁月还好有你们陪伴。还有每个13班的成员，没有你们就没有13班满墙的殊荣。在这里，我还结识了一群臭气相投的好友，北京419的何宇书天洲洲，咱们得组织再去一次五道口啊！菜逼小分队的薛磊和香玉，咱们在一起就没有枯燥的自习，满满的全是脑残和欢乐！还有实验好排挡贾玉琳、C楼刷分的雷梦丹等等等等，13的每一个人都是数不过来的好朋友，我会记住你们的，一辈子！ 西电，又爱又恨的一个地方，谢谢你对我的滋润和培养。在这里我认识了团委的董静张哲熙，你俩真就是我在团委最爱的人了，没节操的蓝牙姐和卷毛大叔你俩加油！那么偶然的一次旅行认识了菜团的你们，同为落单的留学党，胡老师咱们一定得keep in touch才行啊；朱，现在的我已经深深的折服在你的白衬衫下了，因为毕业典礼看不到下面穿了什么……姜，你和簸箕要一直在一起啊不然我就不相信爱情了！还有顾琪路人等等一众，咱们菜团最nice了！很想说几句话纪念众多西电的故事，但想来想去发现自己还是更关注身边的每一个人，因为人，所以才会有精彩的故事发生在这四年，在我的身边，或是我的身上。 四年，流走的不是青春，而是梦。","link":"/2013/07/02/cn-20130702/"},{"title":"大半流水","text":"许久没有更新。2017过去了一大半，想来应该要写点东西记录一下。 年初从国内回来接了三个面试，打起精神刷了刷题准备跳槽。还没来得及让我考虑，老东家就撑不住了。说实话我当时一点都不意外不着急，从开始的意气风发到无数次错失机会，最终走到今天这个地步，作为一个亲历者还是相信因果的。不能说是小胖一个人或者后面任何一个CEO的问题，整个公司有非常好的文化气氛，但无奈这是一个残酷的市场，只有惋惜。迟迟不愿离开，除了自己懒惰，也多少因为感情吧，第一个收留我的地方，教会我许多，见证我成长。好在大家都有不错的归宿，离场不散场，时不时还会出来一聚，就像从前一样。 入职新公司之前，回到东岸见了些朋友。毕业后再也没有来过这里，这次有机会当一个真正的游客走在纽约街头，却无法像游客那样从心出发欣赏这里的美。MOMA有知名画作，sleep no more刷新了我对舞剧的认识，还有长岛舒适的节奏，第一次住新泽西，比想象中要好很多。来美第一次坐灰狗去DC，却是帮朋友们搬了家。华府的樱花的确很美，各种博物馆也值得让我再去看一次。一切看起来都很好，但奇怪的是我内心却毫无波澜，从始至终没有像从前那样有让我惊艳的时刻，可能真的老了吧。 五月的纪念日，跟新同事们一起去太浩湖滑雪爬山kayak吃火锅。之前每年都去，但都是和好朋友，今年跟另一帮刚认识的人一起还是很开心。第一次滑单板，被摔到屁股疼的无法坐下哈哈，后悔没有滑ski。新公司和老东家无论文化还是环境都截然不同，一开始很不习惯，不过几周之后也就适应了。组里人好像都比较厉害，感觉自己之前几年的代码算是白写了。工作还可以慢慢来赶，最头疼的是上下班的交通问题，搬家迫在眉睫，想搬到离公司近的地方去，但是一颗悸动的心又不安于在这里安定下来，所以就开始看半岛的房子了。 看了两个月的房子，大概有二十套吧，就在我在太浩湖爬山的那天中介打电话说了一个符合我要求的房子，在我完全没有看房的情况下把offer下了。出乎意料，我就这么拿到了这个房子。因为之前出价被拒绝过，所以心态完全是无所谓估计又是被拒绝，没想到。接下来的整个六月，我都在银行贷款和第三方之间处理各种手续，期间还在金门大桥高速被追尾，也是心疼自己。好在最后一切都尘埃落定，我有了自己的第一个家。 随着自己在美国的时间越来越久，东西越来越多，搬家也成了大工程。在拿到要是之前我还需要现在朋友家暂住一个月，期间还参与了一个叫做“一周CP”的活动，认识了一个到现在也没有见过的真网友。其实还是很希望以后有机会去香港见一下她的，毕竟也是太偶然的一次相遇了。的确有一段时间没有认识什么新朋友，自己依然很享受与陌生人交流的感觉，老生常谈了，许愿自己能遇到那个人吧。 现在还没有完全步入节奏，有一些房子收尾工作，还有布置新居，当然这是个非常漫长的过程。同时，工作上正在步入正轨，我觉得等把房子收拾好就要多花点心思在工作上了，毕竟不能做的太糙吧。九月份要迎接父母的到来，希望我们的旅程一切顺利吧。","link":"/2017/08/20/cn-20170820/"},{"title":"二十七","text":"二十七号，2017就这样转瞬即逝了，想起上个月的今天自己还在飞机上度过了二十七岁的生日，仿佛就在昨天。 今年还算是对得起自己，年初对自己许下的愿望大部分都实现了——换了工作，回了久违的东部，拥有了属于自己的房子，去了心心念念的欧洲。大部分之前都已经提过，这里主要写写八月份以后的事吧。 九月份爸妈来美国看我顺便收拾房子。妈妈之前来过，老爸这是第一次来，好像还挺喜欢这里的。我是迫不及待想让他们了解我在这边的生活，给老爸安排了很满的行程，基本上没什么休息的时间，走了一号公路除了big sur的全套，去LA见了小姑和他的好友，还有圣地亚哥。印象最深的是在环球影城的水世界表演，虽然我和妈妈之前都看过，但是被喷水的时候一家人还是都笑疯了，已经记不清我们仨上一次这样在一起放肆大笑是在什么时候，对于像我这样一个独自久了的人，那种家人的温暖真的很美好。有时候我会担心自己，担心自己就这样慢慢地丧失了关心他人的能力，变得越来越冷漠。 父母在的那段时间过得非常幸福，也很短暂。他们回国以后我再也没去过家具店之类的地方了。十月十一月基本是平淡的过去了，周末偶尔跟一些微信群的朋友去爬山桌游laser tag一下，仅此而已了。 十一月底，我跟两个朋友去了欧洲十天。到巴黎的第一天见了一个在法国读书的妹子，性格很好也聊得不错，但是她因为只讲法语不讲英语，所以并不愿意来美国，对我这种完全不相信异地恋的人来说大概就是可惜吧。法国给我的印象也不太正面，冷淡高傲吧。吃饭还要卡着饭点，太不友好了，除了他们的地铁我是想不出什么特别闪光的地方。之后从巴黎飞往威尼斯，意大利看起来比法国更穷一点，但是相比之下我更喜欢这里人们的热情和随意，没有什么约束，吃的也不错。威尼斯很美，因为是旅游淡季吧，很多景点并不是人山人海，坐船的感觉也让整个生活变得很慢，很悠闲。在威尼斯我们只呆了一天，第二日就自驾前往佛罗伦萨了。佛罗伦萨这个曾经辉煌的文艺复兴的中心，城市本身就很文艺，小而精致吧。从佛罗伦萨出来天已经黑了，我们晚上十点多才开到罗马住下。罗马真的是对游客最友好的城市了，所有的景点都步行可及，我们游览的效率也是出奇的高，基本上所有之前查到想去的地方都去到了，最浪费时间的大概就是排队安检梵蒂冈圣彼得大教堂的登顶吧，毕竟是天主教的中心教堂，但是看完感觉并没有佛罗伦萨圣母百花大教堂震撼。整个旅行的彩蛋在伊斯坦布尔转机回美国的时候，经历了人生最严格的安检，也导致航班晚点了两个小时；亮点则是罗马许愿池吧，希望自己的愿望能在2018年实现。 从欧洲回来的第二周就开始oncall了。整体上来讲还算顺利，一开始特别紧张，怕把系统搞坏了，两周过后也就很随意了。特别暖心男神经常帮我解决问题，并不是我的shadow oncall但是比shadow oncall还上心。难过的是这是男神在我们组的最后一个月，一月份他就要去palo alto了，祝他在那边好运吧。 这一年许多小事穿插在两三件大事中间，回顾来看不算充实但也勉强及格了。很多事没有做到最好，只能下次努力。默默许愿了2018年几件事，希望能比今年完成的更好吧！","link":"/2017/12/27/cn-20171227/"},{"title":"Memory Leak in Docker Container","text":"Since we recently start using docker for product release, I’m dealing with a lot of problems related with docker. One of the headache is sometimes, the running application performs different in docker containers with the one directly runs in local without docker. For me, a more specific example is my webApp, running in gradle with Jetty9 plugins, can finish our load test perfectly only on my ubuntu machine. But it will get memory leak error when runs in docker container. So I decided to look into it by Java profiler. It’s quite easy to use a GUI profiler to monitor the whole process how an application uses CPU and memory during running time. But it’s a little complicated to attach it in a container. Firstly I tried to use YourKit by its remote profiling option. The basic steps are: Modify Dockerfile to get YourKit installed.12345678RUN apt-get updateRUN apt-get install -y wgetRUN wget https://www.yourkit.com/download/yjp-2016.02-b29-linux.tar.bz2RUN tar xfj yjp-2016.02-b29-linux.tar.bz2\"-agentpath:/usr/share/jetty/yjp-2016.02/bin/linux-x86-64/libyjpagent.so=disablestacktelemetry,disableexceptiontelemetry,delay=10000,sessionname=Jetty\", \\EXPOSE 10001 After building the image, access into the docker container and attach to JVM:12docker exec -i -t &lt;containerID&gt; /bin/bash&lt;directory with unpacked content&gt;/bin/yjp.sh -attach In YourKit GUI, link to the host:port.But every time when I try to attach to JVM (step 2), I get error below:123com.sun.tools.attach.AttachNotSupportedException: Unable to open socket file: target process not responding or HotSpot VM not loaded. It should be solved by just switching to the user created the container. But it didn’t work. So I tried to use JProfiler.Here are the steps: Modify the Dockerfile to get JProfiler installed:12345678RUN \\ apt-get update &amp;&amp; \\ apt-get install -y wget &amp;&amp; \\ wget http://download-keycdn.ej-technologies.com/jprofiler/jprofiler_linux_9_1_1.tar.gz &amp;&amp; \\ tar -xzf jprofiler_linux_9_1_1.tar.gz -C /usr/localENV JPAGENT_PATH=\"-agentpath:/usr/local/jprofiler9/bin/linux-x64/libjprofilerti.so=nowait\"EXPOSE 8849 Be careful of the version. The one installed in docker container should be the same version as the one you use to monitor. Execute the command in docker container:12docker exec -i -t &lt;containerID&gt; /bin/bash/usr/local/jprofiler9/bin/jpenable That’s it. Now we can link to the remote from anywhere by host:port. The default port is 8849. But the sad story is after looking into the result of the profiler, I still don’t know how it got memory leaked. Here is a discussion about the similar docker problem, maybe I’m not the only one.I’ll update once I figured out…","link":"/2016/03/09/tech160309-docker/"},{"title":"24","text":"身在异国的第二个生日，也是自己本命年的日子，总觉得应该说些什么，但又没什么好讲的。 如果说去年的生日，主题是放肆，那今年的一定就是平淡了。跟mm和xs三个人出去吃饭打牌看电影，一句话说完了，仅此而已。 毕业以后，自己从开始的浮躁，中途一度的紧张，到后来的释怀，慢慢沉淀了，不是经历上阅历上的沉淀，而是心态上的。说是成熟吧，也不算，但我和我的朋友们都渐渐地、谁都没有说出来但是大家却感觉得到地变稳重了。曾经的疯狂、无忌、逗比，都要越来越少，说不来是不是习惯，但想想还是一种遗憾。 还没收到epic的offer，心里多少还是忐忑，不过已经不顾一切的开始规划十二月的旅程和一月份展开的崭新的生活了。很多死党好友都将不在身边，老爸说在麦屯也能交到这样的好友，我不太肯定，从小到大每一段时光都很幸运能交到挚友，然而社会工作以后一定是另一番风景，心底一直有个念头一定要回加州，回硅谷，回到这群朋友身边。既然错过了，没办法一步到位，就只好曲折一点、麻烦一点、再辛苦一点，赶上大家的步伐。跟家人朋友也聊过，自己这十几年的求学生涯，大半时间都是在追赶别人，习惯了以他人为榜样，让自己变得更好，从来没有那种让优秀成为一种习惯的感觉。这样的情况的确让人不断进步，但也让我迷茫，现在偶尔会有困惑，困惑这种状况什么时候才到头，自己这么一直往上爬究竟想要什么，虽然更高的通常更好但真的更适合自己吗？ 老生常谈，要不要回国，出国的意义在哪里。一年多来，我也不知道答案，的确会在某一刻反思自己何苦做这些经历这些，但更多的时候还是庆幸自己当初的选择，无所谓对与错，但这条路我决心走定了。24岁，是时候收拾起那些无谓的稚嫩和不痛不痒的疑惑，迈入人生的另一段旅程，或许难以适应，或许孤独无助，但已经走过那么多蜿蜒的路，这一趟为什么不行。 写在新生活之前，愿自己过得开心。","link":"/2014/11/28/cn-20141128/"},{"title":"PowerMockito -- Mock and Spy","text":"A bad system design can lead to much hard work. In order to increase the unit tests coverage, I recently started to work on writing unit tests for some classes. One of the case is I want to test a method as follow: 12345678public final ReturnType getMethod (SomeRequest someRequest) { AnotherRequest anotherRequest = new AnotherRequest(someRequest); SomeResponse someResponse = SomeService.getInstance().someMethod(anotherRequest); SomeValue someValue = someResponse.getValue(); /** * Some processes with someValue.. */} The main purpose of this test is testing the process with someValue, so I should just mock the .getValue() method. But the thing is not that easy. Let me put more related classes here:SomeService.class 12345678910111213public final class SomeService { private static SomeService instance = new SomeService(); static { // A static block } protected SomeService() {} public static SomeService getInstance() { return instance; } public SomeResponse someMethod(AnotherRequest anotherRequest) { // Implementation of the method.. }} SomeResponse.class 12345public class SomeResponse { public SomeValue getValue() { // Implementation of getValue() }} SomeValue.class 123456789public class SomeValue { private String name; private void populateValue(PreDefinedType preDefinedType) { // Generate name from a preDefinedType, basically a black box. } public String getName() { return name; }} If I put the unit test as follow, I will get the java.lang.reflect.InvocationTargetException Error. 123456@RunWith(PowerMockRunner.class)@PrepareForTest({SomeService.class, SomeResponse.class, SomeValue.class, SomeRequest.class})public class ElasticSearchBasedTokenGeneratorServiceTest extends PowerMockTestCase { // Mock every class and call.. // Find out more on https://github.com/jayway/powermock/wiki/MockitoUsage} It seems that mock library does not always work. A better way to do it is to create a Utilities.class to reset final static fields. 12345678910public class Utilities { public static void setFinalStatic(Field field, Object newValue) throws Exception { field.setAccessible(true); // remove final modifier from field Field modifiersField = Field.class.getDeclaredField(\"modifiers\"); modifiersField.setAccessible(true); modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL); field.set(null, newValue); }} And then in the unit test, do the following: 12345678910111213141516171819202122232425@RunWith(PowerMockRunner.class)@PrepareForTest({SomeService.class, SomeResponse.class, SomeValue.class, SomeRequest.class})public class SomeTest extends PowerMockTestCase { public void testMethod() throws Exception { // Mock the request SomeRequest someRequest = PowerMockito.mock(SomeRequest.class); Mockito.when(entitiesRequest.method()).thenReturn(\"some thing\"); // Mock response and its related value SomeResponse someResponse = PowerMockito.mock(SomeResponse.class); SomeValue someValue = PowerMockito.mock(SomeValue.class); Mockito.when(someValue.getName()).thenReturn(\"some name\"); Mockito.when(someResponse.getValue()).thenReturn(someValue); // Mock the service SomeService someService = PowerMockito.mock(SomeService.class); Mockito.when(someService.someMethod(Mockito.any())).thenReturn(someResponse); // To initialize the service, use the reflect method created above Utilities.setFinalStatic(SomeService.class.getDeclaredField(\"someService\"), someService); SomeService someService = new SomeService(); someService.someMethod(someRequest); // Assertion.. }} One thing I should mention is, in the actual SomeService.class, we should change the initialization of service outside the method (as a field): 1private static final SomeService someService = SomeService.getInstance();","link":"/2016/03/29/tech160326-mock/"}],"tags":[{"name":"InterviewNote","slug":"InterviewNote","link":"/tags/InterviewNote/"},{"name":"BinarySearch","slug":"BinarySearch","link":"/tags/BinarySearch/"},{"name":"SortedArray","slug":"SortedArray","link":"/tags/SortedArray/"},{"name":"BinaryTree","slug":"BinaryTree","link":"/tags/BinaryTree/"},{"name":"DFS","slug":"DFS","link":"/tags/DFS/"},{"name":"BFS","slug":"BFS","link":"/tags/BFS/"},{"name":"Divide&Conquer","slug":"Divide-Conquer","link":"/tags/Divide-Conquer/"},{"name":"QuickSort","slug":"QuickSort","link":"/tags/QuickSort/"},{"name":"MergeSort","slug":"MergeSort","link":"/tags/MergeSort/"},{"name":"DP","slug":"DP","link":"/tags/DP/"},{"name":"Graph","slug":"Graph","link":"/tags/Graph/"},{"name":"DataStructure","slug":"DataStructure","link":"/tags/DataStructure/"},{"name":"CodingStyle","slug":"CodingStyle","link":"/tags/CodingStyle/"},{"name":"Permutations","slug":"Permutations","link":"/tags/Permutations/"},{"name":"UnionFind","slug":"UnionFind","link":"/tags/UnionFind/"},{"name":"LinkedList","slug":"LinkedList","link":"/tags/LinkedList/"},{"name":"Encoding","slug":"Encoding","link":"/tags/Encoding/"},{"name":"update","slug":"update","link":"/tags/update/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"test","slug":"test","link":"/tags/test/"},{"name":"markdown","slug":"markdown","link":"/tags/markdown/"},{"name":"oldSpace","slug":"oldSpace","link":"/tags/oldSpace/"},{"name":"Chinese","slug":"Chinese","link":"/tags/Chinese/"},{"name":"随笔","slug":"随笔","link":"/tags/%E9%9A%8F%E7%AC%94/"},{"name":"唠叨抑或牢骚","slug":"唠叨抑或牢骚","link":"/tags/%E5%94%A0%E5%8F%A8%E6%8A%91%E6%88%96%E7%89%A2%E9%AA%9A/"},{"name":"笔尖","slug":"笔尖","link":"/tags/%E7%AC%94%E5%B0%96/"},{"name":"榕树下","slug":"榕树下","link":"/tags/%E6%A6%95%E6%A0%91%E4%B8%8B/"},{"name":"总结","slug":"总结","link":"/tags/%E6%80%BB%E7%BB%93/"},{"name":"docker","slug":"docker","link":"/tags/docker/"},{"name":"tech","slug":"tech","link":"/tags/tech/"},{"name":"mock","slug":"mock","link":"/tags/mock/"}],"categories":[{"name":"English","slug":"English","link":"/categories/English/"},{"name":"Interview","slug":"English/Interview","link":"/categories/English/Interview/"},{"name":"Technology","slug":"English/Technology","link":"/categories/English/Technology/"},{"name":"中文","slug":"中文","link":"/categories/%E4%B8%AD%E6%96%87/"},{"name":"Language Processing","slug":"English/Technology/Language-Processing","link":"/categories/English/Technology/Language-Processing/"},{"name":"Hexo","slug":"English/Technology/Hexo","link":"/categories/English/Technology/Hexo/"},{"name":"Markdown","slug":"English/Technology/Markdown","link":"/categories/English/Technology/Markdown/"},{"name":"百度空间 (2006-2015)","slug":"中文/百度空间-2006-2015","link":"/categories/%E4%B8%AD%E6%96%87/%E7%99%BE%E5%BA%A6%E7%A9%BA%E9%97%B4-2006-2015/"},{"name":"记 (2016-)","slug":"中文/记-2016","link":"/categories/%E4%B8%AD%E6%96%87/%E8%AE%B0-2016/"},{"name":"Docker","slug":"English/Technology/Docker","link":"/categories/English/Technology/Docker/"},{"name":"Mockito","slug":"English/Technology/Mockito","link":"/categories/English/Technology/Mockito/"},{"name":"随笔","slug":"中文/百度空间-2006-2015/随笔","link":"/categories/%E4%B8%AD%E6%96%87/%E7%99%BE%E5%BA%A6%E7%A9%BA%E9%97%B4-2006-2015/%E9%9A%8F%E7%AC%94/"},{"name":"唠叨抑或牢骚","slug":"中文/百度空间-2006-2015/唠叨抑或牢骚","link":"/categories/%E4%B8%AD%E6%96%87/%E7%99%BE%E5%BA%A6%E7%A9%BA%E9%97%B4-2006-2015/%E5%94%A0%E5%8F%A8%E6%8A%91%E6%88%96%E7%89%A2%E9%AA%9A/"},{"name":"作尚课","slug":"中文/百度空间-2006-2015/作尚课","link":"/categories/%E4%B8%AD%E6%96%87/%E7%99%BE%E5%BA%A6%E7%A9%BA%E9%97%B4-2006-2015/%E4%BD%9C%E5%B0%9A%E8%AF%BE/"}]}